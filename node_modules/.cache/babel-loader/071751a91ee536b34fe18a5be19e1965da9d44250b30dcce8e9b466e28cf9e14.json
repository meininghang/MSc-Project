{"ast":null,"code":"import _defineProperty from \"E:/Amanda-project/vue2-project/project-vue2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldInitSpec from \"E:/Amanda-project/vue2-project/project-vue2/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"E:/Amanda-project/vue2-project/project-vue2/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"E:/Amanda-project/vue2-project/project-vue2/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { Interface, Typed } from \"../abi/index.js\";\nimport { isAddressable, resolveAddress } from \"../address/index.js\";\n// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport { copyRequest, Log } from \"../providers/provider.js\";\nimport { defineProperties, getBigInt, isCallException, isHexString, resolveProperties, makeError, assert, assertArgument } from \"../utils/index.js\";\nimport { ContractEventPayload, ContractUnknownEventPayload, ContractTransactionResponse, EventLog } from \"./wrappers.js\";\nconst BN_0 = BigInt(0);\nfunction canCall(value) {\n  return value && typeof value.call === \"function\";\n}\nfunction canEstimate(value) {\n  return value && typeof value.estimateGas === \"function\";\n}\nfunction canResolve(value) {\n  return value && typeof value.resolveName === \"function\";\n}\nfunction canSend(value) {\n  return value && typeof value.sendTransaction === \"function\";\n}\nvar _filter = /*#__PURE__*/new WeakMap();\nclass PreparedTopicFilter {\n  constructor(contract, fragment, args) {\n    _classPrivateFieldInitSpec(this, _filter, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"fragment\", void 0);\n    defineProperties(this, {\n      fragment\n    });\n    if (fragment.inputs.length < args.length) {\n      throw new Error(\"too many arguments\");\n    }\n    // Recursively descend into args and resolve any addresses\n    const runner = getRunner(contract.runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner : null;\n    _classPrivateFieldSet(this, _filter, async function () {\n      const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n        const arg = args[index];\n        if (arg == null) {\n          return null;\n        }\n        return param.walkAsync(args[index], (type, value) => {\n          if (type === \"address\") {\n            if (Array.isArray(value)) {\n              return Promise.all(value.map(v => resolveAddress(v, resolver)));\n            }\n            return resolveAddress(value, resolver);\n          }\n          return value;\n        });\n      }));\n      return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n    }());\n  }\n  getTopicFilter() {\n    return _classPrivateFieldGet(this, _filter);\n  }\n}\n// A = Arguments passed in as a tuple\n// R = The result type of the call (i.e. if only one return type,\n//     the qualified type, otherwise Result)\n// D = The type the default call will return (i.e. R for view/pure,\n//     TransactionResponse otherwise)\n//export interface ContractMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse> {\nfunction getRunner(value, feature) {\n  if (value == null) {\n    return null;\n  }\n  if (typeof value[feature] === \"function\") {\n    return value;\n  }\n  if (value.provider && typeof value.provider[feature] === \"function\") {\n    return value.provider;\n  }\n  return null;\n}\nfunction getProvider(value) {\n  if (value == null) {\n    return null;\n  }\n  return value.provider || null;\n}\n/**\n *  @_ignore:\n */\nexport async function copyOverrides(arg, allowed) {\n  // Make sure the overrides passed in are a valid overrides object\n  const _overrides = Typed.dereference(arg, \"overrides\");\n  assertArgument(typeof _overrides === \"object\", \"invalid overrides parameter\", \"overrides\", arg);\n  // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n  const overrides = copyRequest(_overrides);\n  assertArgument(overrides.to == null || (allowed || []).indexOf(\"to\") >= 0, \"cannot override to\", \"overrides.to\", overrides.to);\n  assertArgument(overrides.data == null || (allowed || []).indexOf(\"data\") >= 0, \"cannot override data\", \"overrides.data\", overrides.data);\n  // Resolve any from\n  if (overrides.from) {\n    overrides.from = await resolveAddress(overrides.from);\n  }\n  return overrides;\n}\n/**\n *  @_ignore:\n */\nexport async function resolveArgs(_runner, inputs, args) {\n  // Recursively descend into args and resolve any addresses\n  const runner = getRunner(_runner, \"resolveName\");\n  const resolver = canResolve(runner) ? runner : null;\n  return await Promise.all(inputs.map((param, index) => {\n    return param.walkAsync(args[index], (type, value) => {\n      value = Typed.dereference(value, type);\n      if (type === \"address\") {\n        return resolveAddress(value, resolver);\n      }\n      return value;\n    });\n  }));\n}\nfunction buildWrappedFallback(contract) {\n  const populateTransaction = async function (overrides) {\n    // If an overrides was passed in, copy it and normalize the values\n    const tx = await copyOverrides(overrides, [\"data\"]);\n    tx.to = await contract.getAddress();\n    const iface = contract.interface;\n    const noValue = getBigInt(tx.value || BN_0, \"overrides.value\") === BN_0;\n    const noData = (tx.data || \"0x\") === \"0x\";\n    if (iface.fallback && !iface.fallback.payable && iface.receive && !noData && !noValue) {\n      assertArgument(false, \"cannot send data to receive or send value to non-payable fallback\", \"overrides\", overrides);\n    }\n    assertArgument(iface.fallback || noData, \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n    // Only allow payable contracts to set non-zero value\n    const payable = iface.receive || iface.fallback && iface.fallback.payable;\n    assertArgument(payable || noValue, \"cannot send value to non-payable fallback\", \"overrides.value\", tx.value);\n    // Only allow fallback contracts to set non-empty data\n    assertArgument(iface.fallback || noData, \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n    return tx;\n  };\n  const staticCall = async function (overrides) {\n    const runner = getRunner(contract.runner, \"call\");\n    assert(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"call\"\n    });\n    const tx = await populateTransaction(overrides);\n    try {\n      return await runner.call(tx);\n    } catch (error) {\n      if (isCallException(error) && error.data) {\n        throw contract.interface.makeError(error.data, tx);\n      }\n      throw error;\n    }\n  };\n  const send = async function (overrides) {\n    const runner = contract.runner;\n    assert(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"sendTransaction\"\n    });\n    const tx = await runner.sendTransaction(await populateTransaction(overrides));\n    const provider = getProvider(contract.runner);\n    // @TODO: the provider can be null; make a custom dummy provider that will throw a\n    // meaningful error\n    return new ContractTransactionResponse(contract.interface, provider, tx);\n  };\n  const estimateGas = async function (overrides) {\n    const runner = getRunner(contract.runner, \"estimateGas\");\n    assert(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"estimateGas\"\n    });\n    return await runner.estimateGas(await populateTransaction(overrides));\n  };\n  const method = async overrides => {\n    return await send(overrides);\n  };\n  defineProperties(method, {\n    _contract: contract,\n    estimateGas,\n    populateTransaction,\n    send,\n    staticCall\n  });\n  return method;\n}\nfunction buildWrappedMethod(contract, key) {\n  const getFragment = function (...args) {\n    const fragment = contract.interface.getFunction(key, args);\n    assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\",\n      info: {\n        key,\n        args\n      }\n    });\n    return fragment;\n  };\n  const populateTransaction = async function (...args) {\n    const fragment = getFragment(...args);\n    // If an overrides was passed in, copy it and normalize the values\n    let overrides = {};\n    if (fragment.inputs.length + 1 === args.length) {\n      overrides = await copyOverrides(args.pop());\n    }\n    if (fragment.inputs.length !== args.length) {\n      throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n    }\n    const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n    return Object.assign({}, overrides, await resolveProperties({\n      to: contract.getAddress(),\n      data: contract.interface.encodeFunctionData(fragment, resolvedArgs)\n    }));\n  };\n  const staticCall = async function (...args) {\n    const result = await staticCallResult(...args);\n    if (result.length === 1) {\n      return result[0];\n    }\n    return result;\n  };\n  const send = async function (...args) {\n    const runner = contract.runner;\n    assert(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"sendTransaction\"\n    });\n    const tx = await runner.sendTransaction(await populateTransaction(...args));\n    const provider = getProvider(contract.runner);\n    // @TODO: the provider can be null; make a custom dummy provider that will throw a\n    // meaningful error\n    return new ContractTransactionResponse(contract.interface, provider, tx);\n  };\n  const estimateGas = async function (...args) {\n    const runner = getRunner(contract.runner, \"estimateGas\");\n    assert(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"estimateGas\"\n    });\n    return await runner.estimateGas(await populateTransaction(...args));\n  };\n  const staticCallResult = async function (...args) {\n    const runner = getRunner(contract.runner, \"call\");\n    assert(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"call\"\n    });\n    const tx = await populateTransaction(...args);\n    let result = \"0x\";\n    try {\n      result = await runner.call(tx);\n    } catch (error) {\n      if (isCallException(error) && error.data) {\n        throw contract.interface.makeError(error.data, tx);\n      }\n      throw error;\n    }\n    const fragment = getFragment(...args);\n    return contract.interface.decodeFunctionResult(fragment, result);\n  };\n  const method = async (...args) => {\n    const fragment = getFragment(...args);\n    if (fragment.constant) {\n      return await staticCall(...args);\n    }\n    return await send(...args);\n  };\n  defineProperties(method, {\n    name: contract.interface.getFunctionName(key),\n    _contract: contract,\n    _key: key,\n    getFragment,\n    estimateGas,\n    populateTransaction,\n    send,\n    staticCall,\n    staticCallResult\n  });\n  // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n  Object.defineProperty(method, \"fragment\", {\n    configurable: false,\n    enumerable: true,\n    get: () => {\n      const fragment = contract.interface.getFunction(key);\n      assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"fragment\",\n        info: {\n          key\n        }\n      });\n      return fragment;\n    }\n  });\n  return method;\n}\nfunction buildWrappedEvent(contract, key) {\n  const getFragment = function (...args) {\n    const fragment = contract.interface.getEvent(key, args);\n    assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\",\n      info: {\n        key,\n        args\n      }\n    });\n    return fragment;\n  };\n  const method = function (...args) {\n    return new PreparedTopicFilter(contract, getFragment(...args), args);\n  };\n  defineProperties(method, {\n    name: contract.interface.getEventName(key),\n    _contract: contract,\n    _key: key,\n    getFragment\n  });\n  // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n  Object.defineProperty(method, \"fragment\", {\n    configurable: false,\n    enumerable: true,\n    get: () => {\n      const fragment = contract.interface.getEvent(key);\n      assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"fragment\",\n        info: {\n          key\n        }\n      });\n      return fragment;\n    }\n  });\n  return method;\n}\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\nconst internal = Symbol.for(\"_ethersInternal_contract\");\nconst internalValues = new WeakMap();\nfunction setInternal(contract, values) {\n  internalValues.set(contract[internal], values);\n}\nfunction getInternal(contract) {\n  return internalValues.get(contract[internal]);\n}\nfunction isDeferred(value) {\n  return value && typeof value === \"object\" && \"getTopicFilter\" in value && typeof value.getTopicFilter === \"function\" && value.fragment;\n}\nasync function getSubInfo(contract, event) {\n  let topics;\n  let fragment = null;\n  // Convert named events to topicHash and get the fragment for\n  // events which need deconstructing.\n  if (Array.isArray(event)) {\n    const topicHashify = function (name) {\n      if (isHexString(name, 32)) {\n        return name;\n      }\n      const fragment = contract.interface.getEvent(name);\n      assertArgument(fragment, \"unknown fragment\", \"name\", name);\n      return fragment.topicHash;\n    };\n    // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n    topics = event.map(e => {\n      if (e == null) {\n        return null;\n      }\n      if (Array.isArray(e)) {\n        return e.map(topicHashify);\n      }\n      return topicHashify(e);\n    });\n  } else if (event === \"*\") {\n    topics = [null];\n  } else if (typeof event === \"string\") {\n    if (isHexString(event, 32)) {\n      // Topic Hash\n      topics = [event];\n    } else {\n      // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n      fragment = contract.interface.getEvent(event);\n      assertArgument(fragment, \"unknown fragment\", \"event\", event);\n      topics = [fragment.topicHash];\n    }\n  } else if (isDeferred(event)) {\n    // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n    topics = await event.getTopicFilter();\n  } else if (\"fragment\" in event) {\n    // ContractEvent; e.g. `contract.filter.Transfer`\n    fragment = event.fragment;\n    topics = [fragment.topicHash];\n  } else {\n    assertArgument(false, \"unknown event name\", \"event\", event);\n  }\n  // Normalize topics and sort TopicSets\n  topics = topics.map(t => {\n    if (t == null) {\n      return null;\n    }\n    if (Array.isArray(t)) {\n      const items = Array.from(new Set(t.map(t => t.toLowerCase())).values());\n      if (items.length === 1) {\n        return items[0];\n      }\n      items.sort();\n      return items;\n    }\n    return t.toLowerCase();\n  });\n  const tag = topics.map(t => {\n    if (t == null) {\n      return \"null\";\n    }\n    if (Array.isArray(t)) {\n      return t.join(\"|\");\n    }\n    return t;\n  }).join(\"&\");\n  return {\n    fragment,\n    tag,\n    topics\n  };\n}\nasync function hasSub(contract, event) {\n  const {\n    subs\n  } = getInternal(contract);\n  return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\nasync function getSub(contract, operation, event) {\n  // Make sure our runner can actually subscribe to events\n  const provider = getProvider(contract.runner);\n  assert(provider, \"contract runner does not support subscribing\", \"UNSUPPORTED_OPERATION\", {\n    operation\n  });\n  const {\n    fragment,\n    tag,\n    topics\n  } = await getSubInfo(contract, event);\n  const {\n    addr,\n    subs\n  } = getInternal(contract);\n  let sub = subs.get(tag);\n  if (!sub) {\n    const address = addr ? addr : contract;\n    const filter = {\n      address,\n      topics\n    };\n    const listener = log => {\n      let foundFragment = fragment;\n      if (foundFragment == null) {\n        try {\n          foundFragment = contract.interface.getEvent(log.topics[0]);\n        } catch (error) {}\n      }\n      // If fragment is null, we do not deconstruct the args to emit\n      if (foundFragment) {\n        const _foundFragment = foundFragment;\n        const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics) : [];\n        emit(contract, event, args, listener => {\n          return new ContractEventPayload(contract, listener, event, _foundFragment, log);\n        });\n      } else {\n        emit(contract, event, [], listener => {\n          return new ContractUnknownEventPayload(contract, listener, event, log);\n        });\n      }\n    };\n    let starting = [];\n    const start = () => {\n      if (starting.length) {\n        return;\n      }\n      starting.push(provider.on(filter, listener));\n    };\n    const stop = async () => {\n      if (starting.length == 0) {\n        return;\n      }\n      let started = starting;\n      starting = [];\n      await Promise.all(started);\n      provider.off(filter, listener);\n    };\n    sub = {\n      tag,\n      listeners: [],\n      start,\n      stop\n    };\n    subs.set(tag, sub);\n  }\n  return sub;\n}\n// We use this to ensure one emit resolves before firing the next to\n// ensure correct ordering (note this cannot throw and just adds the\n// notice to the event queu using setTimeout).\nlet lastEmit = Promise.resolve();\nasync function _emit(contract, event, args, payloadFunc) {\n  await lastEmit;\n  const sub = await hasSub(contract, event);\n  if (!sub) {\n    return false;\n  }\n  const count = sub.listeners.length;\n  sub.listeners = sub.listeners.filter(({\n    listener,\n    once\n  }) => {\n    const passArgs = Array.from(args);\n    if (payloadFunc) {\n      passArgs.push(payloadFunc(once ? null : listener));\n    }\n    try {\n      listener.call(contract, ...passArgs);\n    } catch (error) {}\n    return !once;\n  });\n  if (sub.listeners.length === 0) {\n    sub.stop();\n    getInternal(contract).subs.delete(sub.tag);\n  }\n  return count > 0;\n}\nasync function emit(contract, event, args, payloadFunc) {\n  try {\n    await lastEmit;\n  } catch (error) {}\n  const resultPromise = _emit(contract, event, args, payloadFunc);\n  lastEmit = resultPromise;\n  return await resultPromise;\n}\nconst passProperties = [\"then\"];\nexport class BaseContract {\n  /**\n   *  Creates a new contract connected to %%target%% with the %%abi%% and\n   *  optionally connected to a %%runner%% to perform operations on behalf\n   *  of.\n   */\n  constructor(target, abi, runner, _deployTx) {\n    /**\n     *  The target to connect to.\n     *\n     *  This can be an address, ENS name or any [[Addressable]], such as\n     *  another contract. To get the resovled address, use the ``getAddress``\n     *  method.\n     */\n    _defineProperty(this, \"target\", void 0);\n    /**\n     *  The contract Interface.\n     */\n    _defineProperty(this, \"interface\", void 0);\n    /**\n     *  The connected runner. This is generally a [[Provider]] or a\n     *  [[Signer]], which dictates what operations are supported.\n     *\n     *  For example, a **Contract** connected to a [[Provider]] may\n     *  only execute read-only operations.\n     */\n    _defineProperty(this, \"runner\", void 0);\n    /**\n     *  All the Events available on this contract.\n     */\n    _defineProperty(this, \"filters\", void 0);\n    /**\n     *  @_ignore:\n     */\n    _defineProperty(this, internal, void 0);\n    /**\n     *  The fallback or receive function if any.\n     */\n    _defineProperty(this, \"fallback\", void 0);\n    assertArgument(typeof target === \"string\" || isAddressable(target), \"invalid value for Contract target\", \"target\", target);\n    if (runner == null) {\n      runner = null;\n    }\n    const iface = Interface.from(abi);\n    defineProperties(this, {\n      target,\n      runner,\n      interface: iface\n    });\n    Object.defineProperty(this, internal, {\n      value: {}\n    });\n    let addrPromise;\n    let addr = null;\n    let deployTx = null;\n    if (_deployTx) {\n      const provider = getProvider(runner);\n      // @TODO: the provider can be null; make a custom dummy provider that will throw a\n      // meaningful error\n      deployTx = new ContractTransactionResponse(this.interface, provider, _deployTx);\n    }\n    let subs = new Map();\n    // Resolve the target as the address\n    if (typeof target === \"string\") {\n      if (isHexString(target)) {\n        addr = target;\n        addrPromise = Promise.resolve(target);\n      } else {\n        const resolver = getRunner(runner, \"resolveName\");\n        if (!canResolve(resolver)) {\n          throw makeError(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"resolveName\"\n          });\n        }\n        addrPromise = resolver.resolveName(target).then(addr => {\n          if (addr == null) {\n            throw makeError(\"an ENS name used for a contract target must be correctly configured\", \"UNCONFIGURED_NAME\", {\n              value: target\n            });\n          }\n          getInternal(this).addr = addr;\n          return addr;\n        });\n      }\n    } else {\n      addrPromise = target.getAddress().then(addr => {\n        if (addr == null) {\n          throw new Error(\"TODO\");\n        }\n        getInternal(this).addr = addr;\n        return addr;\n      });\n    }\n    // Set our private values\n    setInternal(this, {\n      addrPromise,\n      addr,\n      deployTx,\n      subs\n    });\n    // Add the event filters\n    const filters = new Proxy({}, {\n      get: (target, _prop, receiver) => {\n        // Pass important checks (like `then` for Promise) through\n        if (passProperties.indexOf(_prop) >= 0) {\n          return Reflect.get(target, _prop, receiver);\n        }\n        const prop = String(_prop);\n        const result = this.getEvent(prop);\n        if (result) {\n          return result;\n        }\n        throw new Error(`unknown contract event: ${prop}`);\n      },\n      has: (target, prop) => {\n        // Pass important checks (like `then` for Promise) through\n        if (passProperties.indexOf(prop) >= 0) {\n          return Reflect.has(target, prop);\n        }\n        return Reflect.has(target, prop) || this.interface.hasEvent(String(prop));\n      }\n    });\n    defineProperties(this, {\n      filters\n    });\n    defineProperties(this, {\n      fallback: iface.receive || iface.fallback ? buildWrappedFallback(this) : null\n    });\n    // Return a Proxy that will respond to functions\n    return new Proxy(this, {\n      get: (target, _prop, receiver) => {\n        if (_prop in target || passProperties.indexOf(_prop) >= 0 || typeof _prop === \"symbol\") {\n          return Reflect.get(target, _prop, receiver);\n        }\n        const prop = String(_prop);\n        const result = target.getFunction(prop);\n        if (result) {\n          return result;\n        }\n        throw new Error(`unknown contract method: ${prop}`);\n      },\n      has: (target, prop) => {\n        if (prop in target || passProperties.indexOf(prop) >= 0 || typeof prop === \"symbol\") {\n          return Reflect.has(target, prop);\n        }\n        return target.interface.hasFunction(String(prop));\n      }\n    });\n  }\n  /**\n   *  Return a new Contract instance with the same target and ABI, but\n   *  a different %%runner%%.\n   */\n  connect(runner) {\n    return new BaseContract(this.target, this.interface, runner);\n  }\n  /**\n   *  Return a new Contract instance with the same ABI and runner, but\n   *  a different %%target%%.\n   */\n  attach(target) {\n    return new BaseContract(target, this.interface, this.runner);\n  }\n  /**\n   *  Return the resolved address of this Contract.\n   */\n  async getAddress() {\n    return await getInternal(this).addrPromise;\n  }\n  /**\n   *  Return the deployed bytecode or null if no bytecode is found.\n   */\n  async getDeployedCode() {\n    const provider = getProvider(this.runner);\n    assert(provider, \"runner does not support .provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"getDeployedCode\"\n    });\n    const code = await provider.getCode(await this.getAddress());\n    if (code === \"0x\") {\n      return null;\n    }\n    return code;\n  }\n  /**\n   *  Resolve to this Contract once the bytecode has been deployed, or\n   *  resolve immediately if already deployed.\n   */\n  async waitForDeployment() {\n    // We have the deployement transaction; just use that (throws if deployement fails)\n    const deployTx = this.deploymentTransaction();\n    if (deployTx) {\n      await deployTx.wait();\n      return this;\n    }\n    // Check for code\n    const code = await this.getDeployedCode();\n    if (code != null) {\n      return this;\n    }\n    // Make sure we can subscribe to a provider event\n    const provider = getProvider(this.runner);\n    assert(provider != null, \"contract runner does not support .provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"waitForDeployment\"\n    });\n    return new Promise((resolve, reject) => {\n      const checkCode = async () => {\n        try {\n          const code = await this.getDeployedCode();\n          if (code != null) {\n            return resolve(this);\n          }\n          provider.once(\"block\", checkCode);\n        } catch (error) {\n          reject(error);\n        }\n      };\n      checkCode();\n    });\n  }\n  /**\n   *  Return the transaction used to deploy this contract.\n   *\n   *  This is only available if this instance was returned from a\n   *  [[ContractFactory]].\n   */\n  deploymentTransaction() {\n    return getInternal(this).deployTx;\n  }\n  /**\n   *  Return the function for a given name. This is useful when a contract\n   *  method name conflicts with a JavaScript name such as ``prototype`` or\n   *  when using a Contract programatically.\n   */\n  getFunction(key) {\n    if (typeof key !== \"string\") {\n      key = key.format();\n    }\n    const func = buildWrappedMethod(this, key);\n    return func;\n  }\n  /**\n   *  Return the event for a given name. This is useful when a contract\n   *  event name conflicts with a JavaScript name such as ``prototype`` or\n   *  when using a Contract programatically.\n   */\n  getEvent(key) {\n    if (typeof key !== \"string\") {\n      key = key.format();\n    }\n    return buildWrappedEvent(this, key);\n  }\n  /**\n   *  @_ignore:\n   */\n  async queryTransaction(hash) {\n    // Is this useful?\n    throw new Error(\"@TODO\");\n  }\n  /**\n   *  Provide historic access to event data for %%event%% in the range\n   *  %%fromBlock%% (default: ``0``) to %%toBlock%% (default: ``\"latest\"``)\n   *  inclusive.\n   */\n  async queryFilter(event, fromBlock, toBlock) {\n    if (fromBlock == null) {\n      fromBlock = 0;\n    }\n    if (toBlock == null) {\n      toBlock = \"latest\";\n    }\n    const {\n      addr,\n      addrPromise\n    } = getInternal(this);\n    const address = addr ? addr : await addrPromise;\n    const {\n      fragment,\n      topics\n    } = await getSubInfo(this, event);\n    const filter = {\n      address,\n      topics,\n      fromBlock,\n      toBlock\n    };\n    const provider = getProvider(this.runner);\n    assert(provider, \"contract runner does not have a provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"queryFilter\"\n    });\n    return (await provider.getLogs(filter)).map(log => {\n      let foundFragment = fragment;\n      if (foundFragment == null) {\n        try {\n          foundFragment = this.interface.getEvent(log.topics[0]);\n        } catch (error) {}\n      }\n      if (foundFragment) {\n        try {\n          return new EventLog(log, this.interface, foundFragment);\n        } catch (error) {}\n      }\n      return new Log(log, provider);\n    });\n  }\n  /**\n   *  Add an event %%listener%% for the %%event%%.\n   */\n  async on(event, listener) {\n    const sub = await getSub(this, \"on\", event);\n    sub.listeners.push({\n      listener,\n      once: false\n    });\n    sub.start();\n    return this;\n  }\n  /**\n   *  Add an event %%listener%% for the %%event%%, but remove the listener\n   *  after it is fired once.\n   */\n  async once(event, listener) {\n    const sub = await getSub(this, \"once\", event);\n    sub.listeners.push({\n      listener,\n      once: true\n    });\n    sub.start();\n    return this;\n  }\n  /**\n   *  Emit an %%event%% calling all listeners with %%args%%.\n   *\n   *  Resolves to ``true`` if any listeners were called.\n   */\n  async emit(event, ...args) {\n    return await emit(this, event, args, null);\n  }\n  /**\n   *  Resolves to the number of listeners of %%event%% or the total number\n   *  of listeners if unspecified.\n   */\n  async listenerCount(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n      if (!sub) {\n        return 0;\n      }\n      return sub.listeners.length;\n    }\n    const {\n      subs\n    } = getInternal(this);\n    let total = 0;\n    for (const {\n      listeners\n    } of subs.values()) {\n      total += listeners.length;\n    }\n    return total;\n  }\n  /**\n   *  Resolves to the listeners subscribed to %%event%% or all listeners\n   *  if unspecified.\n   */\n  async listeners(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n      if (!sub) {\n        return [];\n      }\n      return sub.listeners.map(({\n        listener\n      }) => listener);\n    }\n    const {\n      subs\n    } = getInternal(this);\n    let result = [];\n    for (const {\n      listeners\n    } of subs.values()) {\n      result = result.concat(listeners.map(({\n        listener\n      }) => listener));\n    }\n    return result;\n  }\n  /**\n   *  Remove the %%listener%% from the listeners for %%event%% or remove\n   *  all listeners if unspecified.\n   */\n  async off(event, listener) {\n    const sub = await hasSub(this, event);\n    if (!sub) {\n      return this;\n    }\n    if (listener) {\n      const index = sub.listeners.map(({\n        listener\n      }) => listener).indexOf(listener);\n      if (index >= 0) {\n        sub.listeners.splice(index, 1);\n      }\n    }\n    if (listener == null || sub.listeners.length === 0) {\n      sub.stop();\n      getInternal(this).subs.delete(sub.tag);\n    }\n    return this;\n  }\n  /**\n   *  Remove all the listeners for %%event%% or remove all listeners if\n   *  unspecified.\n   */\n  async removeAllListeners(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n      if (!sub) {\n        return this;\n      }\n      sub.stop();\n      getInternal(this).subs.delete(sub.tag);\n    } else {\n      const {\n        subs\n      } = getInternal(this);\n      for (const {\n        tag,\n        stop\n      } of subs.values()) {\n        stop();\n        subs.delete(tag);\n      }\n    }\n    return this;\n  }\n  /**\n   *  Alias for [on].\n   */\n  async addListener(event, listener) {\n    return await this.on(event, listener);\n  }\n  /**\n   *  Alias for [off].\n   */\n  async removeListener(event, listener) {\n    return await this.off(event, listener);\n  }\n  /**\n   *  Create a new Class for the %%abi%%.\n   */\n  static buildClass(abi) {\n    class CustomContract extends BaseContract {\n      constructor(address, runner = null) {\n        super(address, abi, runner);\n      }\n    }\n    return CustomContract;\n  }\n  /**\n   *  Create a new BaseContract with a specified Interface.\n   */\n  static from(target, abi, runner) {\n    if (runner == null) {\n      runner = null;\n    }\n    const contract = new this(target, abi, runner);\n    return contract;\n  }\n}\nfunction _ContractBase() {\n  return BaseContract;\n}\n/**\n *  A [[BaseContract]] with no type guards on its methods or events.\n */\nexport class Contract extends _ContractBase() {}","map":{"version":3,"names":["Interface","Typed","isAddressable","resolveAddress","copyRequest","Log","defineProperties","getBigInt","isCallException","isHexString","resolveProperties","makeError","assert","assertArgument","ContractEventPayload","ContractUnknownEventPayload","ContractTransactionResponse","EventLog","BN_0","BigInt","canCall","value","call","canEstimate","estimateGas","canResolve","resolveName","canSend","sendTransaction","_filter","WeakMap","PreparedTopicFilter","constructor","contract","fragment","args","_classPrivateFieldInitSpec","writable","_defineProperty","inputs","length","Error","runner","getRunner","resolver","_classPrivateFieldSet","resolvedArgs","Promise","all","map","param","index","arg","walkAsync","type","Array","isArray","v","interface","encodeFilterTopics","getTopicFilter","_classPrivateFieldGet","feature","provider","getProvider","copyOverrides","allowed","_overrides","dereference","overrides","to","indexOf","data","from","resolveArgs","_runner","buildWrappedFallback","populateTransaction","tx","getAddress","iface","noValue","noData","fallback","payable","receive","staticCall","operation","error","send","method","_contract","buildWrappedMethod","key","getFragment","getFunction","info","pop","Object","assign","encodeFunctionData","result","staticCallResult","decodeFunctionResult","constant","name","getFunctionName","_key","defineProperty","configurable","enumerable","get","buildWrappedEvent","getEvent","getEventName","internal","Symbol","for","internalValues","setInternal","values","set","getInternal","isDeferred","getSubInfo","event","topics","topicHashify","topicHash","e","t","items","Set","toLowerCase","sort","tag","join","hasSub","subs","getSub","addr","sub","address","filter","listener","log","foundFragment","_foundFragment","decodeEventLog","emit","starting","start","push","on","stop","started","off","listeners","lastEmit","resolve","_emit","payloadFunc","count","once","passArgs","delete","resultPromise","passProperties","BaseContract","target","abi","_deployTx","addrPromise","deployTx","Map","then","filters","Proxy","_prop","receiver","Reflect","prop","String","has","hasEvent","hasFunction","connect","attach","getDeployedCode","code","getCode","waitForDeployment","deploymentTransaction","wait","reject","checkCode","format","func","queryTransaction","hash","queryFilter","fromBlock","toBlock","getLogs","listenerCount","total","concat","splice","removeAllListeners","addListener","removeListener","buildClass","CustomContract","_ContractBase","Contract"],"sources":["../../src.ts/contract/contract.ts"],"sourcesContent":[null],"mappings":";;;;;AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,iBAAiB;AAClD,SAASC,aAAa,EAAEC,cAAc,QAAQ,qBAAqB;AACnE;AACA;AACA,SAASC,WAAW,EAAEC,GAAG,QAA6B,0BAA0B;AAChF,SACIC,gBAAgB,EAAEC,SAAS,EAAEC,eAAe,EAAEC,WAAW,EAAEC,iBAAiB,EAC5EC,SAAS,EAAEC,MAAM,EAAEC,cAAc,QAC9B,mBAAmB;AAE1B,SACIC,oBAAoB,EAAEC,2BAA2B,EACjDC,2BAA2B,EAC3BC,QAAQ,QACL,eAAe;AAsBtB,MAAMC,IAAI,GAAGC,MAAM,CAAC,CAAC,CAAC;AAkBtB,SAASC,OAAOA,CAACC,KAAU;EACvB,OAAQA,KAAK,IAAI,OAAOA,KAAK,CAACC,IAAK,KAAK,UAAU;AACtD;AAEA,SAASC,WAAWA,CAACF,KAAU;EAC3B,OAAQA,KAAK,IAAI,OAAOA,KAAK,CAACG,WAAY,KAAK,UAAU;AAC7D;AAEA,SAASC,UAAUA,CAACJ,KAAU;EAC1B,OAAQA,KAAK,IAAI,OAAOA,KAAK,CAACK,WAAY,KAAK,UAAU;AAC7D;AAEA,SAASC,OAAOA,CAACN,KAAU;EACvB,OAAQA,KAAK,IAAI,OAAOA,KAAK,CAACO,eAAgB,KAAK,UAAU;AACjE;AAAC,IAAAC,OAAA,oBAAAC,OAAA;AAED,MAAMC,mBAAmB;EAIrBC,YAAYC,QAAsB,EAAEC,QAAuB,EAAEC,IAAgB;IAAAC,0BAAA,OAAAP,OAAA;MAAAQ,QAAA;MAAAhB,KAAA;IAAA;IAAAiB,eAAA;IACzEhC,gBAAgB,CAAsB,IAAI,EAAE;MAAE4B;IAAQ,CAAE,CAAC;IACzD,IAAIA,QAAQ,CAACK,MAAM,CAACC,MAAM,GAAGL,IAAI,CAACK,MAAM,EAAE;MACtC,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;;IAGzC;IACA,MAAMC,MAAM,GAAGC,SAAS,CAACV,QAAQ,CAACS,MAAM,EAAE,aAAa,CAAC;IACxD,MAAME,QAAQ,GAAGnB,UAAU,CAACiB,MAAM,CAAC,GAAGA,MAAM,GAAE,IAAI;IAClDG,qBAAA,KAAI,EAAAhB,OAAA,EAAY,kBAAK;MACjB,MAAMiB,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACd,QAAQ,CAACK,MAAM,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAI;QACxE,MAAMC,GAAG,GAAGjB,IAAI,CAACgB,KAAK,CAAC;QACvB,IAAIC,GAAG,IAAI,IAAI,EAAE;UAAE,OAAO,IAAI;;QAE9B,OAAOF,KAAK,CAACG,SAAS,CAAClB,IAAI,CAACgB,KAAK,CAAC,EAAE,CAACG,IAAI,EAAEjC,KAAK,KAAI;UAChD,IAAIiC,IAAI,KAAK,SAAS,EAAE;YACpB,IAAIC,KAAK,CAACC,OAAO,CAACnC,KAAK,CAAC,EAAE;cACtB,OAAO0B,OAAO,CAACC,GAAG,CAAC3B,KAAK,CAAC4B,GAAG,CAAEQ,CAAC,IAAKtD,cAAc,CAACsD,CAAC,EAAEb,QAAQ,CAAC,CAAC,CAAC;;YAErE,OAAOzC,cAAc,CAACkB,KAAK,EAAEuB,QAAQ,CAAC;;UAE1C,OAAOvB,KAAK;QAChB,CAAC,CAAC;MACN,CAAC,CAAC,CAAC;MAEH,OAAOY,QAAQ,CAACyB,SAAS,CAACC,kBAAkB,CAACzB,QAAQ,EAAEY,YAAY,CAAC;IACxE,CAAC,CAAC,CAAE;EACR;EAEAc,cAAcA,CAAA;IACV,OAAAC,qBAAA,CAAO,IAAI,EAAAhC,OAAA;EACf;;AAIJ;AACA;AACA;AACA;AACA;AACA;AAEA,SAASc,SAASA,CAA2BtB,KAAU,EAAEyC,OAA6B;EAClF,IAAIzC,KAAK,IAAI,IAAI,EAAE;IAAE,OAAO,IAAI;;EAChC,IAAI,OAAOA,KAAK,CAACyC,OAAO,CAAE,KAAK,UAAU,EAAE;IAAE,OAAOzC,KAAK;;EACzD,IAAIA,KAAK,CAAC0C,QAAQ,IAAI,OAAO1C,KAAK,CAAC0C,QAAQ,CAACD,OAAO,CAAE,KAAK,UAAU,EAAE;IAClE,OAAOzC,KAAK,CAAC0C,QAAQ;;EAEzB,OAAO,IAAI;AACf;AAEA,SAASC,WAAWA,CAAC3C,KAA4B;EAC7C,IAAIA,KAAK,IAAI,IAAI,EAAE;IAAE,OAAO,IAAI;;EAChC,OAAOA,KAAK,CAAC0C,QAAQ,IAAI,IAAI;AACjC;AAEA;;;AAGA,OAAO,eAAeE,aAAaA,CAAmCb,GAAQ,EAAEc,OAAuB;EAEnG;EACA,MAAMC,UAAU,GAAGlE,KAAK,CAACmE,WAAW,CAAChB,GAAG,EAAE,WAAW,CAAC;EACtDvC,cAAc,CAAC,OAAOsD,UAAW,KAAK,QAAQ,EAAE,6BAA6B,EAAE,WAAW,EAAEf,GAAG,CAAC;EAEhG;EACA,MAAMiB,SAAS,GAAGjE,WAAW,CAAC+D,UAAU,CAAC;EAEzCtD,cAAc,CAACwD,SAAS,CAACC,EAAE,IAAI,IAAI,IAAI,CAACJ,OAAO,IAAI,EAAG,EAAEK,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EACxE,oBAAoB,EAAE,cAAc,EAAEF,SAAS,CAACC,EAAE,CAAC;EACrDzD,cAAc,CAACwD,SAAS,CAACG,IAAI,IAAI,IAAI,IAAI,CAACN,OAAO,IAAI,EAAG,EAAEK,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAC5E,sBAAsB,EAAE,gBAAgB,EAAEF,SAAS,CAACG,IAAI,CAAC;EAE3D;EACA,IAAIH,SAAS,CAACI,IAAI,EAAE;IAChBJ,SAAS,CAACI,IAAI,GAAG,MAAMtE,cAAc,CAACkE,SAAS,CAACI,IAAI,CAAC;;EAGzD,OAAqCJ,SAAS;AAClD;AAEA;;;AAGA,OAAO,eAAeK,WAAWA,CAACC,OAA8B,EAAEpC,MAAgC,EAAEJ,IAAgB;EAChH;EACA,MAAMO,MAAM,GAAGC,SAAS,CAACgC,OAAO,EAAE,aAAa,CAAC;EAChD,MAAM/B,QAAQ,GAAGnB,UAAU,CAACiB,MAAM,CAAC,GAAGA,MAAM,GAAE,IAAI;EAClD,OAAO,MAAMK,OAAO,CAACC,GAAG,CAACT,MAAM,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAI;IACjD,OAAOD,KAAK,CAACG,SAAS,CAAClB,IAAI,CAACgB,KAAK,CAAC,EAAE,CAACG,IAAI,EAAEjC,KAAK,KAAI;MAChDA,KAAK,GAAGpB,KAAK,CAACmE,WAAW,CAAC/C,KAAK,EAAEiC,IAAI,CAAC;MACtC,IAAIA,IAAI,KAAK,SAAS,EAAE;QAAE,OAAOnD,cAAc,CAACkB,KAAK,EAAEuB,QAAQ,CAAC;;MAChE,OAAOvB,KAAK;IAChB,CAAC,CAAC;EACN,CAAC,CAAC,CAAC;AACP;AAEA,SAASuD,oBAAoBA,CAAC3C,QAAsB;EAEhD,MAAM4C,mBAAmB,GAAG,eAAAA,CAAeR,SAA0C;IACjF;IAEA,MAAMS,EAAE,GAA8B,MAAMb,aAAa,CAASI,SAAS,EAAE,CAAE,MAAM,CAAE,CAAE;IACzFS,EAAE,CAACR,EAAE,GAAG,MAAMrC,QAAQ,CAAC8C,UAAU,EAAE;IAEnC,MAAMC,KAAK,GAAG/C,QAAQ,CAACyB,SAAS;IAEhC,MAAMuB,OAAO,GAAI1E,SAAS,CAAEuE,EAAE,CAACzD,KAAK,IAAIH,IAAI,EAAG,iBAAiB,CAAC,KAAKA,IAAK;IAC3E,MAAMgE,MAAM,GAAI,CAACJ,EAAE,CAACN,IAAI,IAAI,IAAI,MAAM,IAAK;IAE3C,IAAIQ,KAAK,CAACG,QAAQ,IAAI,CAACH,KAAK,CAACG,QAAQ,CAACC,OAAO,IAAIJ,KAAK,CAACK,OAAO,IAAI,CAACH,MAAM,IAAI,CAACD,OAAO,EAAE;MACnFpE,cAAc,CAAC,KAAK,EAAE,mEAAmE,EAAE,WAAW,EAAEwD,SAAS,CAAC;;IAGtHxD,cAAc,CAACmE,KAAK,CAACG,QAAQ,IAAID,MAAM,EACrC,2CAA2C,EAAE,gBAAgB,EAAEJ,EAAE,CAACN,IAAI,CAAC;IAEzE;IACA,MAAMY,OAAO,GAAGJ,KAAK,CAACK,OAAO,IAAKL,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,OAAQ;IAC3EvE,cAAc,CAACuE,OAAO,IAAIH,OAAO,EAC/B,2CAA2C,EAAE,iBAAiB,EAAEH,EAAE,CAACzD,KAAK,CAAC;IAE3E;IACAR,cAAc,CAACmE,KAAK,CAACG,QAAQ,IAAID,MAAM,EACrC,2CAA2C,EAAE,gBAAgB,EAAEJ,EAAE,CAACN,IAAI,CAAC;IAEzE,OAAOM,EAAE;EACb,CAAC;EAED,MAAMQ,UAAU,GAAG,eAAAA,CAAejB,SAA0C;IACxE,MAAM3B,MAAM,GAAGC,SAAS,CAACV,QAAQ,CAACS,MAAM,EAAE,MAAM,CAAC;IACjD9B,MAAM,CAACQ,OAAO,CAACsB,MAAM,CAAC,EAAE,0CAA0C,EAC9D,uBAAuB,EAAE;MAAE6C,SAAS,EAAE;IAAM,CAAE,CAAC;IAEnD,MAAMT,EAAE,GAAG,MAAMD,mBAAmB,CAACR,SAAS,CAAC;IAE/C,IAAI;MACA,OAAO,MAAM3B,MAAM,CAACpB,IAAI,CAACwD,EAAE,CAAC;KAC/B,CAAC,OAAOU,KAAU,EAAE;MACjB,IAAIhF,eAAe,CAACgF,KAAK,CAAC,IAAIA,KAAK,CAAChB,IAAI,EAAE;QACtC,MAAMvC,QAAQ,CAACyB,SAAS,CAAC/C,SAAS,CAAC6E,KAAK,CAAChB,IAAI,EAAEM,EAAE,CAAC;;MAEtD,MAAMU,KAAK;;EAEnB,CAAC;EAED,MAAMC,IAAI,GAAG,eAAAA,CAAepB,SAA0C;IAClE,MAAM3B,MAAM,GAAGT,QAAQ,CAACS,MAAM;IAC9B9B,MAAM,CAACe,OAAO,CAACe,MAAM,CAAC,EAAE,uDAAuD,EAC3E,uBAAuB,EAAE;MAAE6C,SAAS,EAAE;IAAiB,CAAE,CAAC;IAE9D,MAAMT,EAAE,GAAG,MAAMpC,MAAM,CAACd,eAAe,CAAC,MAAMiD,mBAAmB,CAACR,SAAS,CAAC,CAAC;IAC7E,MAAMN,QAAQ,GAAGC,WAAW,CAAC/B,QAAQ,CAACS,MAAM,CAAC;IAC7C;IACA;IACA,OAAO,IAAI1B,2BAA2B,CAACiB,QAAQ,CAACyB,SAAS,EAAYK,QAAQ,EAAEe,EAAE,CAAC;EACtF,CAAC;EAED,MAAMtD,WAAW,GAAG,eAAAA,CAAe6C,SAA0C;IACzE,MAAM3B,MAAM,GAAGC,SAAS,CAACV,QAAQ,CAACS,MAAM,EAAE,aAAa,CAAC;IACxD9B,MAAM,CAACW,WAAW,CAACmB,MAAM,CAAC,EAAE,iDAAiD,EACzE,uBAAuB,EAAE;MAAE6C,SAAS,EAAE;IAAa,CAAE,CAAC;IAE1D,OAAO,MAAM7C,MAAM,CAAClB,WAAW,CAAC,MAAMqD,mBAAmB,CAACR,SAAS,CAAC,CAAC;EACzE,CAAC;EAED,MAAMqB,MAAM,GAAG,MAAOrB,SAA0C,IAAI;IAChE,OAAO,MAAMoB,IAAI,CAACpB,SAAS,CAAC;EAChC,CAAC;EAED/D,gBAAgB,CAAMoF,MAAM,EAAE;IAC1BC,SAAS,EAAE1D,QAAQ;IAEnBT,WAAW;IACXqD,mBAAmB;IACnBY,IAAI;IAAEH;GACT,CAAC;EAEF,OAAwBI,MAAM;AAClC;AAEA,SAASE,kBAAkBA,CAAsH3D,QAAsB,EAAE4D,GAAW;EAEhL,MAAMC,WAAW,GAAG,SAAAA,CAAS,GAAG3D,IAA2B;IACvD,MAAMD,QAAQ,GAAGD,QAAQ,CAACyB,SAAS,CAACqC,WAAW,CAACF,GAAG,EAAE1D,IAAI,CAAC;IAC1DvB,MAAM,CAACsB,QAAQ,EAAE,sBAAsB,EAAE,uBAAuB,EAAE;MAC9DqD,SAAS,EAAE,UAAU;MACrBS,IAAI,EAAE;QAAEH,GAAG;QAAE1D;MAAI;KACpB,CAAC;IACF,OAAOD,QAAQ;EACnB,CAAC;EAED,MAAM2C,mBAAmB,GAAG,eAAAA,CAAe,GAAG1C,IAA2B;IACrE,MAAMD,QAAQ,GAAG4D,WAAW,CAAC,GAAG3D,IAAI,CAAC;IAErC;IACA,IAAIkC,SAAS,GAA6C,EAAG;IAC7D,IAAInC,QAAQ,CAACK,MAAM,CAACC,MAAM,GAAG,CAAC,KAAKL,IAAI,CAACK,MAAM,EAAE;MAC5C6B,SAAS,GAAG,MAAMJ,aAAa,CAAC9B,IAAI,CAAC8D,GAAG,EAAE,CAAC;;IAG/C,IAAI/D,QAAQ,CAACK,MAAM,CAACC,MAAM,KAAKL,IAAI,CAACK,MAAM,EAAE;MACxC,MAAM,IAAIC,KAAK,CAAC,4EAA4E,CAAC;;IAGjG,MAAMK,YAAY,GAAG,MAAM4B,WAAW,CAACzC,QAAQ,CAACS,MAAM,EAAER,QAAQ,CAACK,MAAM,EAAEJ,IAAI,CAAC;IAE9E,OAAO+D,MAAM,CAACC,MAAM,CAAC,EAAG,EAAE9B,SAAS,EAAE,MAAM3D,iBAAiB,CAAC;MACzD4D,EAAE,EAAErC,QAAQ,CAAC8C,UAAU,EAAE;MACzBP,IAAI,EAAEvC,QAAQ,CAACyB,SAAS,CAAC0C,kBAAkB,CAAClE,QAAQ,EAAEY,YAAY;KACrE,CAAC,CAAC;EACP,CAAC;EAED,MAAMwC,UAAU,GAAG,eAAAA,CAAe,GAAGnD,IAA2B;IAC5D,MAAMkE,MAAM,GAAG,MAAMC,gBAAgB,CAAC,GAAGnE,IAAI,CAAC;IAC9C,IAAIkE,MAAM,CAAC7D,MAAM,KAAK,CAAC,EAAE;MAAE,OAAO6D,MAAM,CAAC,CAAC,CAAC;;IAC3C,OAAmBA,MAAM;EAC7B,CAAC;EAED,MAAMZ,IAAI,GAAG,eAAAA,CAAe,GAAGtD,IAA2B;IACtD,MAAMO,MAAM,GAAGT,QAAQ,CAACS,MAAM;IAC9B9B,MAAM,CAACe,OAAO,CAACe,MAAM,CAAC,EAAE,uDAAuD,EAC3E,uBAAuB,EAAE;MAAE6C,SAAS,EAAE;IAAiB,CAAE,CAAC;IAE9D,MAAMT,EAAE,GAAG,MAAMpC,MAAM,CAACd,eAAe,CAAC,MAAMiD,mBAAmB,CAAC,GAAG1C,IAAI,CAAC,CAAC;IAC3E,MAAM4B,QAAQ,GAAGC,WAAW,CAAC/B,QAAQ,CAACS,MAAM,CAAC;IAC7C;IACA;IACA,OAAO,IAAI1B,2BAA2B,CAACiB,QAAQ,CAACyB,SAAS,EAAYK,QAAQ,EAAEe,EAAE,CAAC;EACtF,CAAC;EAED,MAAMtD,WAAW,GAAG,eAAAA,CAAe,GAAGW,IAA2B;IAC7D,MAAMO,MAAM,GAAGC,SAAS,CAACV,QAAQ,CAACS,MAAM,EAAE,aAAa,CAAC;IACxD9B,MAAM,CAACW,WAAW,CAACmB,MAAM,CAAC,EAAE,iDAAiD,EACzE,uBAAuB,EAAE;MAAE6C,SAAS,EAAE;IAAa,CAAE,CAAC;IAE1D,OAAO,MAAM7C,MAAM,CAAClB,WAAW,CAAC,MAAMqD,mBAAmB,CAAC,GAAG1C,IAAI,CAAC,CAAC;EACvE,CAAC;EAED,MAAMmE,gBAAgB,GAAG,eAAAA,CAAe,GAAGnE,IAA2B;IAClE,MAAMO,MAAM,GAAGC,SAAS,CAACV,QAAQ,CAACS,MAAM,EAAE,MAAM,CAAC;IACjD9B,MAAM,CAACQ,OAAO,CAACsB,MAAM,CAAC,EAAE,0CAA0C,EAC9D,uBAAuB,EAAE;MAAE6C,SAAS,EAAE;IAAM,CAAE,CAAC;IAEnD,MAAMT,EAAE,GAAG,MAAMD,mBAAmB,CAAC,GAAG1C,IAAI,CAAC;IAE7C,IAAIkE,MAAM,GAAG,IAAI;IACjB,IAAI;MACAA,MAAM,GAAG,MAAM3D,MAAM,CAACpB,IAAI,CAACwD,EAAE,CAAC;KACjC,CAAC,OAAOU,KAAU,EAAE;MACjB,IAAIhF,eAAe,CAACgF,KAAK,CAAC,IAAIA,KAAK,CAAChB,IAAI,EAAE;QACtC,MAAMvC,QAAQ,CAACyB,SAAS,CAAC/C,SAAS,CAAC6E,KAAK,CAAChB,IAAI,EAAEM,EAAE,CAAC;;MAEtD,MAAMU,KAAK;;IAGf,MAAMtD,QAAQ,GAAG4D,WAAW,CAAC,GAAG3D,IAAI,CAAC;IACrC,OAAOF,QAAQ,CAACyB,SAAS,CAAC6C,oBAAoB,CAACrE,QAAQ,EAAEmE,MAAM,CAAC;EACpE,CAAC;EAED,MAAMX,MAAM,GAAG,MAAAA,CAAO,GAAGvD,IAA2B,KAAI;IACpD,MAAMD,QAAQ,GAAG4D,WAAW,CAAC,GAAG3D,IAAI,CAAC;IACrC,IAAID,QAAQ,CAACsE,QAAQ,EAAE;MAAE,OAAO,MAAMlB,UAAU,CAAC,GAAGnD,IAAI,CAAC;;IACzD,OAAO,MAAMsD,IAAI,CAAC,GAAGtD,IAAI,CAAC;EAC9B,CAAC;EAED7B,gBAAgB,CAAMoF,MAAM,EAAE;IAC1Be,IAAI,EAAExE,QAAQ,CAACyB,SAAS,CAACgD,eAAe,CAACb,GAAG,CAAC;IAC7CF,SAAS,EAAE1D,QAAQ;IAAE0E,IAAI,EAAEd,GAAG;IAE9BC,WAAW;IAEXtE,WAAW;IACXqD,mBAAmB;IACnBY,IAAI;IAAEH,UAAU;IAAEgB;GACrB,CAAC;EAEF;EACAJ,MAAM,CAACU,cAAc,CAAClB,MAAM,EAAE,UAAU,EAAE;IACtCmB,YAAY,EAAE,KAAK;IACnBC,UAAU,EAAE,IAAI;IAChBC,GAAG,EAAEA,CAAA,KAAK;MACN,MAAM7E,QAAQ,GAAGD,QAAQ,CAACyB,SAAS,CAACqC,WAAW,CAACF,GAAG,CAAC;MACpDjF,MAAM,CAACsB,QAAQ,EAAE,sBAAsB,EAAE,uBAAuB,EAAE;QAC9DqD,SAAS,EAAE,UAAU;QACrBS,IAAI,EAAE;UAAEH;QAAG;OACd,CAAC;MACF,OAAO3D,QAAQ;IACnB;GACH,CAAC;EAEF,OAAoCwD,MAAM;AAC9C;AAEA,SAASsB,iBAAiBA,CAAoC/E,QAAsB,EAAE4D,GAAW;EAE7F,MAAMC,WAAW,GAAG,SAAAA,CAAS,GAAG3D,IAA0B;IACtD,MAAMD,QAAQ,GAAGD,QAAQ,CAACyB,SAAS,CAACuD,QAAQ,CAACpB,GAAG,EAAE1D,IAAI,CAAC;IAEvDvB,MAAM,CAACsB,QAAQ,EAAE,sBAAsB,EAAE,uBAAuB,EAAE;MAC9DqD,SAAS,EAAE,UAAU;MACrBS,IAAI,EAAE;QAAEH,GAAG;QAAE1D;MAAI;KACpB,CAAC;IAEF,OAAOD,QAAQ;EACnB,CAAC;EAED,MAAMwD,MAAM,GAAG,SAAAA,CAAS,GAAGvD,IAA2B;IAClD,OAAO,IAAIJ,mBAAmB,CAACE,QAAQ,EAAE6D,WAAW,CAAC,GAAG3D,IAAI,CAAC,EAAEA,IAAI,CAAC;EACxE,CAAC;EAED7B,gBAAgB,CAAMoF,MAAM,EAAE;IAC1Be,IAAI,EAAExE,QAAQ,CAACyB,SAAS,CAACwD,YAAY,CAACrB,GAAG,CAAC;IAC1CF,SAAS,EAAE1D,QAAQ;IAAE0E,IAAI,EAAEd,GAAG;IAE9BC;GACH,CAAC;EAEF;EACAI,MAAM,CAACU,cAAc,CAAClB,MAAM,EAAE,UAAU,EAAE;IACtCmB,YAAY,EAAE,KAAK;IACnBC,UAAU,EAAE,IAAI;IAChBC,GAAG,EAAEA,CAAA,KAAK;MACN,MAAM7E,QAAQ,GAAGD,QAAQ,CAACyB,SAAS,CAACuD,QAAQ,CAACpB,GAAG,CAAC;MAEjDjF,MAAM,CAACsB,QAAQ,EAAE,sBAAsB,EAAE,uBAAuB,EAAE;QAC9DqD,SAAS,EAAE,UAAU;QACrBS,IAAI,EAAE;UAAEH;QAAG;OACd,CAAC;MAEF,OAAO3D,QAAQ;IACnB;GACH,CAAC;EAEF,OAAkCwD,MAAM;AAC5C;AAUA;AACA;AACA;AACA;AAEA,MAAMyB,QAAQ,GAAGC,MAAM,CAACC,GAAG,CAAC,0BAA0B,CAAC;AAUvD,MAAMC,cAAc,GAAoC,IAAIxF,OAAO,EAAE;AAErE,SAASyF,WAAWA,CAACtF,QAAsB,EAAEuF,MAAgB;EACzDF,cAAc,CAACG,GAAG,CAACxF,QAAQ,CAACkF,QAAQ,CAAC,EAAEK,MAAM,CAAC;AAClD;AAEA,SAASE,WAAWA,CAACzF,QAAsB;EACvC,OAAOqF,cAAc,CAACP,GAAG,CAAC9E,QAAQ,CAACkF,QAAQ,CAAC,CAAa;AAC7D;AAEA,SAASQ,UAAUA,CAACtG,KAAU;EAC1B,OAAQA,KAAK,IAAI,OAAOA,KAAM,KAAK,QAAQ,IAAK,gBAAgB,IAAIA,KAAM,IACvE,OAAOA,KAAK,CAACuC,cAAe,KAAK,UAAW,IAAIvC,KAAK,CAACa,QAAQ;AACrE;AAEA,eAAe0F,UAAUA,CAAC3F,QAAsB,EAAE4F,KAAwB;EACtE,IAAIC,MAA4C;EAChD,IAAI5F,QAAQ,GAAyB,IAAI;EAEzC;EACA;EAEA,IAAIqB,KAAK,CAACC,OAAO,CAACqE,KAAK,CAAC,EAAE;IACtB,MAAME,YAAY,GAAG,SAAAA,CAAStB,IAAY;MACtC,IAAIhG,WAAW,CAACgG,IAAI,EAAE,EAAE,CAAC,EAAE;QAAE,OAAOA,IAAI;;MACxC,MAAMvE,QAAQ,GAAGD,QAAQ,CAACyB,SAAS,CAACuD,QAAQ,CAACR,IAAI,CAAC;MAClD5F,cAAc,CAACqB,QAAQ,EAAE,kBAAkB,EAAE,MAAM,EAAEuE,IAAI,CAAC;MAC1D,OAAOvE,QAAQ,CAAC8F,SAAS;IAC7B,CAAC;IAED;IACAF,MAAM,GAAGD,KAAK,CAAC5E,GAAG,CAAEgF,CAAC,IAAI;MACrB,IAAIA,CAAC,IAAI,IAAI,EAAE;QAAE,OAAO,IAAI;;MAC5B,IAAI1E,KAAK,CAACC,OAAO,CAACyE,CAAC,CAAC,EAAE;QAAE,OAAOA,CAAC,CAAChF,GAAG,CAAC8E,YAAY,CAAC;;MAClD,OAAOA,YAAY,CAACE,CAAC,CAAC;IAC1B,CAAC,CAAC;GAEL,MAAM,IAAIJ,KAAK,KAAK,GAAG,EAAE;IACtBC,MAAM,GAAG,CAAE,IAAI,CAAE;GAEpB,MAAM,IAAI,OAAOD,KAAM,KAAK,QAAQ,EAAE;IACnC,IAAIpH,WAAW,CAACoH,KAAK,EAAE,EAAE,CAAC,EAAE;MACxB;MACAC,MAAM,GAAG,CAAED,KAAK,CAAE;KACrB,MAAM;MACJ;MACC3F,QAAQ,GAAGD,QAAQ,CAACyB,SAAS,CAACuD,QAAQ,CAACY,KAAK,CAAC;MAC7ChH,cAAc,CAACqB,QAAQ,EAAE,kBAAkB,EAAE,OAAO,EAAE2F,KAAK,CAAC;MAC5DC,MAAM,GAAG,CAAE5F,QAAQ,CAAC8F,SAAS,CAAE;;GAGtC,MAAM,IAAIL,UAAU,CAACE,KAAK,CAAC,EAAE;IAC1B;IACAC,MAAM,GAAG,MAAMD,KAAK,CAACjE,cAAc,EAAE;GAExC,MAAM,IAAI,UAAU,IAAIiE,KAAK,EAAE;IAC5B;IACA3F,QAAQ,GAAG2F,KAAK,CAAC3F,QAAQ;IACzB4F,MAAM,GAAG,CAAE5F,QAAQ,CAAC8F,SAAS,CAAE;GAElC,MAAM;IACHnH,cAAc,CAAC,KAAK,EAAE,oBAAoB,EAAE,OAAO,EAAEgH,KAAK,CAAC;;EAG/D;EACAC,MAAM,GAAGA,MAAM,CAAC7E,GAAG,CAAEiF,CAAC,IAAI;IACtB,IAAIA,CAAC,IAAI,IAAI,EAAE;MAAE,OAAO,IAAI;;IAC5B,IAAI3E,KAAK,CAACC,OAAO,CAAC0E,CAAC,CAAC,EAAE;MAClB,MAAMC,KAAK,GAAG5E,KAAK,CAACkB,IAAI,CAAC,IAAI2D,GAAG,CAACF,CAAC,CAACjF,GAAG,CAAEiF,CAAC,IAAKA,CAAC,CAACG,WAAW,EAAE,CAAC,CAAC,CAACb,MAAM,EAAE,CAAC;MACzE,IAAIW,KAAK,CAAC3F,MAAM,KAAK,CAAC,EAAE;QAAE,OAAO2F,KAAK,CAAC,CAAC,CAAC;;MACzCA,KAAK,CAACG,IAAI,EAAE;MACZ,OAAOH,KAAK;;IAEhB,OAAOD,CAAC,CAACG,WAAW,EAAE;EAC1B,CAAC,CAAC;EAEF,MAAME,GAAG,GAAGT,MAAM,CAAC7E,GAAG,CAAEiF,CAAC,IAAI;IACzB,IAAIA,CAAC,IAAI,IAAI,EAAE;MAAE,OAAO,MAAM;;IAC9B,IAAI3E,KAAK,CAACC,OAAO,CAAC0E,CAAC,CAAC,EAAE;MAAE,OAAOA,CAAC,CAACM,IAAI,CAAC,GAAG,CAAC;;IAC1C,OAAON,CAAC;EACZ,CAAC,CAAC,CAACM,IAAI,CAAC,GAAG,CAAC;EAEZ,OAAO;IAAEtG,QAAQ;IAAEqG,GAAG;IAAET;EAAM,CAAE;AACpC;AAEA,eAAeW,MAAMA,CAACxG,QAAsB,EAAE4F,KAAwB;EAClE,MAAM;IAAEa;EAAI,CAAE,GAAGhB,WAAW,CAACzF,QAAQ,CAAC;EACtC,OAAOyG,IAAI,CAAC3B,GAAG,CAAC,CAAC,MAAMa,UAAU,CAAC3F,QAAQ,EAAE4F,KAAK,CAAC,EAAEU,GAAG,CAAC,IAAI,IAAI;AACpE;AAEA,eAAeI,MAAMA,CAAC1G,QAAsB,EAAEsD,SAAiB,EAAEsC,KAAwB;EACrF;EACA,MAAM9D,QAAQ,GAAGC,WAAW,CAAC/B,QAAQ,CAACS,MAAM,CAAC;EAC7C9B,MAAM,CAACmD,QAAQ,EAAE,8CAA8C,EAC3D,uBAAuB,EAAE;IAAEwB;EAAS,CAAE,CAAC;EAE3C,MAAM;IAAErD,QAAQ;IAAEqG,GAAG;IAAET;EAAM,CAAE,GAAG,MAAMF,UAAU,CAAC3F,QAAQ,EAAE4F,KAAK,CAAC;EAEnE,MAAM;IAAEe,IAAI;IAAEF;EAAI,CAAE,GAAGhB,WAAW,CAACzF,QAAQ,CAAC;EAE5C,IAAI4G,GAAG,GAAGH,IAAI,CAAC3B,GAAG,CAACwB,GAAG,CAAC;EACvB,IAAI,CAACM,GAAG,EAAE;IACN,MAAMC,OAAO,GAA0BF,IAAI,GAAGA,IAAI,GAAE3G,QAAS;IAC7D,MAAM8G,MAAM,GAAG;MAAED,OAAO;MAAEhB;IAAM,CAAE;IAClC,MAAMkB,QAAQ,GAAIC,GAAQ,IAAI;MAC1B,IAAIC,aAAa,GAAGhH,QAAQ;MAC5B,IAAIgH,aAAa,IAAI,IAAI,EAAE;QACvB,IAAI;UACAA,aAAa,GAAGjH,QAAQ,CAACyB,SAAS,CAACuD,QAAQ,CAACgC,GAAG,CAACnB,MAAM,CAAC,CAAC,CAAC,CAAC;SAC7D,CAAC,OAAOtC,KAAK,EAAE;;MAGpB;MAEA,IAAI0D,aAAa,EAAE;QACf,MAAMC,cAAc,GAAGD,aAAa;QACpC,MAAM/G,IAAI,GAAGD,QAAQ,GAAGD,QAAQ,CAACyB,SAAS,CAAC0F,cAAc,CAAClH,QAAQ,EAAE+G,GAAG,CAACzE,IAAI,EAAEyE,GAAG,CAACnB,MAAM,CAAC,GAAE,EAAG;QAC9FuB,IAAI,CAACpH,QAAQ,EAAE4F,KAAK,EAAE1F,IAAI,EAAG6G,QAAyB,IAAI;UACtD,OAAO,IAAIlI,oBAAoB,CAACmB,QAAQ,EAAE+G,QAAQ,EAAEnB,KAAK,EAAEsB,cAAc,EAAEF,GAAG,CAAC;QACnF,CAAC,CAAC;OACL,MAAM;QACHI,IAAI,CAACpH,QAAQ,EAAE4F,KAAK,EAAE,EAAG,EAAGmB,QAAyB,IAAI;UACrD,OAAO,IAAIjI,2BAA2B,CAACkB,QAAQ,EAAE+G,QAAQ,EAAEnB,KAAK,EAAEoB,GAAG,CAAC;QAC1E,CAAC,CAAC;;IAEV,CAAC;IAED,IAAIK,QAAQ,GAAwB,EAAG;IACvC,MAAMC,KAAK,GAAGA,CAAA,KAAK;MACf,IAAID,QAAQ,CAAC9G,MAAM,EAAE;QAAE;;MACvB8G,QAAQ,CAACE,IAAI,CAACzF,QAAQ,CAAC0F,EAAE,CAACV,MAAM,EAAEC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAED,MAAMU,IAAI,GAAG,MAAAA,CAAA,KAAW;MACpB,IAAIJ,QAAQ,CAAC9G,MAAM,IAAI,CAAC,EAAE;QAAE;;MAE5B,IAAImH,OAAO,GAAGL,QAAQ;MACtBA,QAAQ,GAAG,EAAG;MACd,MAAMvG,OAAO,CAACC,GAAG,CAAC2G,OAAO,CAAC;MAC1B5F,QAAQ,CAAC6F,GAAG,CAACb,MAAM,EAAEC,QAAQ,CAAC;IAClC,CAAC;IAEDH,GAAG,GAAG;MAAEN,GAAG;MAAEsB,SAAS,EAAE,EAAG;MAAEN,KAAK;MAAEG;IAAI,CAAE;IAC1ChB,IAAI,CAACjB,GAAG,CAACc,GAAG,EAAEM,GAAG,CAAC;;EAEtB,OAAOA,GAAG;AACd;AAEA;AACA;AACA;AACA,IAAIiB,QAAQ,GAAiB/G,OAAO,CAACgH,OAAO,EAAE;AAI9C,eAAeC,KAAKA,CAAC/H,QAAsB,EAAE4F,KAAwB,EAAE1F,IAAgB,EAAE8H,WAA+B;EACpH,MAAMH,QAAQ;EAEd,MAAMjB,GAAG,GAAG,MAAMJ,MAAM,CAACxG,QAAQ,EAAE4F,KAAK,CAAC;EACzC,IAAI,CAACgB,GAAG,EAAE;IAAE,OAAO,KAAK;;EAExB,MAAMqB,KAAK,GAAGrB,GAAG,CAACgB,SAAS,CAACrH,MAAM;EAClCqG,GAAG,CAACgB,SAAS,GAAGhB,GAAG,CAACgB,SAAS,CAACd,MAAM,CAAC,CAAC;IAAEC,QAAQ;IAAEmB;EAAI,CAAE,KAAI;IACxD,MAAMC,QAAQ,GAAG7G,KAAK,CAACkB,IAAI,CAACtC,IAAI,CAAC;IACjC,IAAI8H,WAAW,EAAE;MACbG,QAAQ,CAACZ,IAAI,CAACS,WAAW,CAACE,IAAI,GAAG,IAAI,GAAEnB,QAAQ,CAAC,CAAC;;IAErD,IAAI;MACAA,QAAQ,CAAC1H,IAAI,CAACW,QAAQ,EAAE,GAAGmI,QAAQ,CAAC;KACvC,CAAC,OAAO5E,KAAK,EAAE;IAChB,OAAO,CAAC2E,IAAI;EAChB,CAAC,CAAC;EAEF,IAAItB,GAAG,CAACgB,SAAS,CAACrH,MAAM,KAAK,CAAC,EAAE;IAC5BqG,GAAG,CAACa,IAAI,EAAE;IACVhC,WAAW,CAACzF,QAAQ,CAAC,CAACyG,IAAI,CAAC2B,MAAM,CAACxB,GAAG,CAACN,GAAG,CAAC;;EAG9C,OAAQ2B,KAAK,GAAG,CAAC;AACrB;AAEA,eAAeb,IAAIA,CAACpH,QAAsB,EAAE4F,KAAwB,EAAE1F,IAAgB,EAAE8H,WAA+B;EACnH,IAAI;IACA,MAAMH,QAAQ;GACjB,CAAC,OAAOtE,KAAK,EAAE;EAEhB,MAAM8E,aAAa,GAAGN,KAAK,CAAC/H,QAAQ,EAAE4F,KAAK,EAAE1F,IAAI,EAAE8H,WAAW,CAAC;EAC/DH,QAAQ,GAAGQ,aAAa;EACxB,OAAO,MAAMA,aAAa;AAC9B;AAEA,MAAMC,cAAc,GAAG,CAAE,MAAM,CAAE;AACjC,OAAM,MAAOC,YAAY;EAuCrB;;;;;EAKAxI,YAAYyI,MAA4B,EAAEC,GAA6B,EAAEhI,MAA8B,EAAEiI,SAAsC;IA3C/I;;;;;;;IAAArI,eAAA;IASA;;;IAAAA,eAAA;IAKA;;;;;;;IAAAA,eAAA;IASA;;;IAAAA,eAAA;IAKA;;;IAAAA,eAAA,OAGU6E,QAAQ;IAElB;;;IAAA7E,eAAA;IAWIzB,cAAc,CAAC,OAAO4J,MAAO,KAAK,QAAQ,IAAIvK,aAAa,CAACuK,MAAM,CAAC,EAC/D,mCAAmC,EAAE,QAAQ,EAAEA,MAAM,CAAC;IAE1D,IAAI/H,MAAM,IAAI,IAAI,EAAE;MAAEA,MAAM,GAAG,IAAI;;IACnC,MAAMsC,KAAK,GAAGhF,SAAS,CAACyE,IAAI,CAACiG,GAAG,CAAC;IACjCpK,gBAAgB,CAAe,IAAI,EAAE;MAAEmK,MAAM;MAAE/H,MAAM;MAAEgB,SAAS,EAAEsB;IAAK,CAAE,CAAC;IAE1EkB,MAAM,CAACU,cAAc,CAAC,IAAI,EAAEO,QAAQ,EAAE;MAAE9F,KAAK,EAAE;IAAG,CAAE,CAAC;IAErD,IAAIuJ,WAAW;IACf,IAAIhC,IAAI,GAAG,IAAI;IAEf,IAAIiC,QAAQ,GAAuC,IAAI;IACvD,IAAIF,SAAS,EAAE;MACX,MAAM5G,QAAQ,GAAGC,WAAW,CAACtB,MAAM,CAAC;MACpC;MACA;MACAmI,QAAQ,GAAG,IAAI7J,2BAA2B,CAAC,IAAI,CAAC0C,SAAS,EAAYK,QAAQ,EAAE4G,SAAS,CAAC;;IAG7F,IAAIjC,IAAI,GAAG,IAAIoC,GAAG,EAAE;IAEpB;IACA,IAAI,OAAOL,MAAO,KAAK,QAAQ,EAAE;MAC7B,IAAIhK,WAAW,CAACgK,MAAM,CAAC,EAAE;QACrB7B,IAAI,GAAG6B,MAAM;QACbG,WAAW,GAAG7H,OAAO,CAACgH,OAAO,CAACU,MAAM,CAAC;OAExC,MAAM;QACH,MAAM7H,QAAQ,GAAGD,SAAS,CAACD,MAAM,EAAE,aAAa,CAAC;QACjD,IAAI,CAACjB,UAAU,CAACmB,QAAQ,CAAC,EAAE;UACvB,MAAMjC,SAAS,CAAC,kDAAkD,EAAE,uBAAuB,EAAE;YACzF4E,SAAS,EAAE;WACd,CAAC;;QAGNqF,WAAW,GAAGhI,QAAQ,CAAClB,WAAW,CAAC+I,MAAM,CAAC,CAACM,IAAI,CAAEnC,IAAI,IAAI;UACrD,IAAIA,IAAI,IAAI,IAAI,EAAE;YACd,MAAMjI,SAAS,CAAC,qEAAqE,EAAE,mBAAmB,EAAE;cACxGU,KAAK,EAAEoJ;aACV,CAAC;;UAEN/C,WAAW,CAAC,IAAI,CAAC,CAACkB,IAAI,GAAGA,IAAI;UAC7B,OAAOA,IAAI;QACf,CAAC,CAAC;;KAET,MAAM;MACHgC,WAAW,GAAGH,MAAM,CAAC1F,UAAU,EAAE,CAACgG,IAAI,CAAEnC,IAAI,IAAI;QAC5C,IAAIA,IAAI,IAAI,IAAI,EAAE;UAAE,MAAM,IAAInG,KAAK,CAAC,MAAM,CAAC;;QAC3CiF,WAAW,CAAC,IAAI,CAAC,CAACkB,IAAI,GAAGA,IAAI;QAC7B,OAAOA,IAAI;MACf,CAAC,CAAC;;IAGN;IACArB,WAAW,CAAC,IAAI,EAAE;MAAEqD,WAAW;MAAEhC,IAAI;MAAEiC,QAAQ;MAAEnC;IAAI,CAAE,CAAC;IAExD;IACA,MAAMsC,OAAO,GAAG,IAAIC,KAAK,CAAC,EAAG,EAAE;MAC3BlE,GAAG,EAAEA,CAAC0D,MAAM,EAAES,KAAK,EAAEC,QAAQ,KAAI;QAC7B;QACA,IAAIZ,cAAc,CAAChG,OAAO,CAAS2G,KAAK,CAAC,IAAI,CAAC,EAAE;UAC5C,OAAOE,OAAO,CAACrE,GAAG,CAAC0D,MAAM,EAAES,KAAK,EAAEC,QAAQ,CAAC;;QAG/C,MAAME,IAAI,GAAGC,MAAM,CAACJ,KAAK,CAAC;QAE1B,MAAM7E,MAAM,GAAG,IAAI,CAACY,QAAQ,CAACoE,IAAI,CAAC;QAClC,IAAIhF,MAAM,EAAE;UAAE,OAAOA,MAAM;;QAE3B,MAAM,IAAI5D,KAAK,CAAC,2BAA4B4I,IAAK,EAAE,CAAC;MACxD,CAAC;MACDE,GAAG,EAAEA,CAACd,MAAM,EAAEY,IAAI,KAAI;QAClB;QACA,IAAId,cAAc,CAAChG,OAAO,CAAS8G,IAAI,CAAC,IAAI,CAAC,EAAE;UAC3C,OAAOD,OAAO,CAACG,GAAG,CAACd,MAAM,EAAEY,IAAI,CAAC;;QAGpC,OAAOD,OAAO,CAACG,GAAG,CAACd,MAAM,EAAEY,IAAI,CAAC,IAAI,IAAI,CAAC3H,SAAS,CAAC8H,QAAQ,CAACF,MAAM,CAACD,IAAI,CAAC,CAAC;MAC7E;KACH,CAAC;IACF/K,gBAAgB,CAAe,IAAI,EAAE;MAAE0K;IAAO,CAAE,CAAC;IAEjD1K,gBAAgB,CAAe,IAAI,EAAE;MACjC6E,QAAQ,EAAIH,KAAK,CAACK,OAAO,IAAIL,KAAK,CAACG,QAAQ,GAAKP,oBAAoB,CAAC,IAAI,CAAC,GAAG;KAChF,CAAC;IAEF;IACA,OAAO,IAAIqG,KAAK,CAAC,IAAI,EAAE;MACnBlE,GAAG,EAAEA,CAAC0D,MAAM,EAAES,KAAK,EAAEC,QAAQ,KAAI;QAC7B,IAAID,KAAK,IAAIT,MAAM,IAAIF,cAAc,CAAChG,OAAO,CAAS2G,KAAK,CAAC,IAAI,CAAC,IAAI,OAAOA,KAAM,KAAK,QAAQ,EAAE;UAC7F,OAAOE,OAAO,CAACrE,GAAG,CAAC0D,MAAM,EAAES,KAAK,EAAEC,QAAQ,CAAC;;QAG/C,MAAME,IAAI,GAAGC,MAAM,CAACJ,KAAK,CAAC;QAE1B,MAAM7E,MAAM,GAAGoE,MAAM,CAAC1E,WAAW,CAACsF,IAAI,CAAC;QACvC,IAAIhF,MAAM,EAAE;UAAE,OAAOA,MAAM;;QAE3B,MAAM,IAAI5D,KAAK,CAAC,4BAA6B4I,IAAK,EAAE,CAAC;MACzD,CAAC;MACDE,GAAG,EAAEA,CAACd,MAAM,EAAEY,IAAI,KAAI;QAClB,IAAIA,IAAI,IAAIZ,MAAM,IAAIF,cAAc,CAAChG,OAAO,CAAS8G,IAAI,CAAC,IAAI,CAAC,IAAI,OAAOA,IAAK,KAAK,QAAQ,EAAE;UAC1F,OAAOD,OAAO,CAACG,GAAG,CAACd,MAAM,EAAEY,IAAI,CAAC;;QAGpC,OAAOZ,MAAM,CAAC/G,SAAS,CAAC+H,WAAW,CAACH,MAAM,CAACD,IAAI,CAAC,CAAC;MACrD;KACH,CAAC;EAEN;EAEA;;;;EAIAK,OAAOA,CAAChJ,MAA6B;IACjC,OAAO,IAAI8H,YAAY,CAAC,IAAI,CAACC,MAAM,EAAE,IAAI,CAAC/G,SAAS,EAAEhB,MAAM,CAAC;EAChE;EAEA;;;;EAIAiJ,MAAMA,CAAClB,MAA4B;IAC/B,OAAO,IAAID,YAAY,CAACC,MAAM,EAAE,IAAI,CAAC/G,SAAS,EAAE,IAAI,CAAChB,MAAM,CAAC;EAChE;EAEA;;;EAGA,MAAMqC,UAAUA,CAAA;IAAsB,OAAO,MAAM2C,WAAW,CAAC,IAAI,CAAC,CAACkD,WAAW;EAAE;EAElF;;;EAGA,MAAMgB,eAAeA,CAAA;IACjB,MAAM7H,QAAQ,GAAGC,WAAW,CAAC,IAAI,CAACtB,MAAM,CAAC;IACzC9B,MAAM,CAACmD,QAAQ,EAAE,mCAAmC,EAChD,uBAAuB,EAAE;MAAEwB,SAAS,EAAE;IAAiB,CAAE,CAAC;IAE9D,MAAMsG,IAAI,GAAG,MAAM9H,QAAQ,CAAC+H,OAAO,CAAC,MAAM,IAAI,CAAC/G,UAAU,EAAE,CAAC;IAC5D,IAAI8G,IAAI,KAAK,IAAI,EAAE;MAAE,OAAO,IAAI;;IAChC,OAAOA,IAAI;EACf;EAEA;;;;EAIA,MAAME,iBAAiBA,CAAA;IACnB;IACA,MAAMlB,QAAQ,GAAG,IAAI,CAACmB,qBAAqB,EAAE;IAC7C,IAAInB,QAAQ,EAAE;MACV,MAAMA,QAAQ,CAACoB,IAAI,EAAE;MACrB,OAAO,IAAI;;IAGf;IACA,MAAMJ,IAAI,GAAG,MAAM,IAAI,CAACD,eAAe,EAAE;IACzC,IAAIC,IAAI,IAAI,IAAI,EAAE;MAAE,OAAO,IAAI;;IAE/B;IACA,MAAM9H,QAAQ,GAAGC,WAAW,CAAC,IAAI,CAACtB,MAAM,CAAC;IACzC9B,MAAM,CAACmD,QAAQ,IAAI,IAAI,EAAE,4CAA4C,EACjE,uBAAuB,EAAE;MAAEwB,SAAS,EAAE;IAAmB,CAAE,CAAC;IAEhE,OAAO,IAAIxC,OAAO,CAAC,CAACgH,OAAO,EAAEmC,MAAM,KAAI;MACnC,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAW;QACzB,IAAI;UACA,MAAMN,IAAI,GAAG,MAAM,IAAI,CAACD,eAAe,EAAE;UACzC,IAAIC,IAAI,IAAI,IAAI,EAAE;YAAE,OAAO9B,OAAO,CAAC,IAAI,CAAC;;UACxChG,QAAQ,CAACoG,IAAI,CAAC,OAAO,EAAEgC,SAAS,CAAC;SACpC,CAAC,OAAO3G,KAAK,EAAE;UACZ0G,MAAM,CAAC1G,KAAK,CAAC;;MAErB,CAAC;MACD2G,SAAS,EAAE;IACf,CAAC,CAAC;EACN;EAEA;;;;;;EAMAH,qBAAqBA,CAAA;IACjB,OAAOtE,WAAW,CAAC,IAAI,CAAC,CAACmD,QAAQ;EACrC;EAEA;;;;;EAKA9E,WAAWA,CAA4CF,GAA8B;IACjF,IAAI,OAAOA,GAAI,KAAK,QAAQ,EAAE;MAAEA,GAAG,GAAGA,GAAG,CAACuG,MAAM,EAAE;;IAClD,MAAMC,IAAI,GAAGzG,kBAAkB,CAAC,IAAI,EAAEC,GAAG,CAAC;IAC1C,OAAUwG,IAAI;EAClB;EAEA;;;;;EAKApF,QAAQA,CAACpB,GAA2B;IAChC,IAAI,OAAOA,GAAI,KAAK,QAAQ,EAAE;MAAEA,GAAG,GAAGA,GAAG,CAACuG,MAAM,EAAE;;IAClD,OAAOpF,iBAAiB,CAAC,IAAI,EAAEnB,GAAG,CAAC;EACvC;EAEA;;;EAGA,MAAMyG,gBAAgBA,CAACC,IAAY;IAC/B;IACA,MAAM,IAAI9J,KAAK,CAAC,OAAO,CAAC;EAC5B;EAEA;;;;;EAKA,MAAM+J,WAAWA,CAAC3E,KAAwB,EAAE4E,SAAoB,EAAEC,OAAkB;IAChF,IAAID,SAAS,IAAI,IAAI,EAAE;MAAEA,SAAS,GAAG,CAAC;;IACtC,IAAIC,OAAO,IAAI,IAAI,EAAE;MAAEA,OAAO,GAAG,QAAQ;;IACzC,MAAM;MAAE9D,IAAI;MAAEgC;IAAW,CAAE,GAAGlD,WAAW,CAAC,IAAI,CAAC;IAC/C,MAAMoB,OAAO,GAAIF,IAAI,GAAGA,IAAI,GAAG,MAAMgC,WAAa;IAClD,MAAM;MAAE1I,QAAQ;MAAE4F;IAAM,CAAE,GAAG,MAAMF,UAAU,CAAC,IAAI,EAAEC,KAAK,CAAC;IAC1D,MAAMkB,MAAM,GAAG;MAAED,OAAO;MAAEhB,MAAM;MAAE2E,SAAS;MAAEC;IAAO,CAAE;IAEtD,MAAM3I,QAAQ,GAAGC,WAAW,CAAC,IAAI,CAACtB,MAAM,CAAC;IACzC9B,MAAM,CAACmD,QAAQ,EAAE,0CAA0C,EACvD,uBAAuB,EAAE;MAAEwB,SAAS,EAAE;IAAa,CAAE,CAAC;IAE1D,OAAO,CAAC,MAAMxB,QAAQ,CAAC4I,OAAO,CAAC5D,MAAM,CAAC,EAAE9F,GAAG,CAAEgG,GAAG,IAAI;MAChD,IAAIC,aAAa,GAAGhH,QAAQ;MAC5B,IAAIgH,aAAa,IAAI,IAAI,EAAE;QACvB,IAAI;UACAA,aAAa,GAAG,IAAI,CAACxF,SAAS,CAACuD,QAAQ,CAACgC,GAAG,CAACnB,MAAM,CAAC,CAAC,CAAC,CAAC;SACzD,CAAC,OAAOtC,KAAK,EAAE;;MAGpB,IAAI0D,aAAa,EAAE;QACf,IAAI;UACA,OAAO,IAAIjI,QAAQ,CAACgI,GAAG,EAAE,IAAI,CAACvF,SAAS,EAAEwF,aAAa,CAAC;SAC1D,CAAC,OAAO1D,KAAK,EAAE;;MAGpB,OAAO,IAAInF,GAAG,CAAC4I,GAAG,EAAElF,QAAQ,CAAC;IACjC,CAAC,CAAC;EACN;EAEA;;;EAGA,MAAM0F,EAAEA,CAAC5B,KAAwB,EAAEmB,QAAkB;IACjD,MAAMH,GAAG,GAAG,MAAMF,MAAM,CAAC,IAAI,EAAE,IAAI,EAAEd,KAAK,CAAC;IAC3CgB,GAAG,CAACgB,SAAS,CAACL,IAAI,CAAC;MAAER,QAAQ;MAAEmB,IAAI,EAAE;IAAK,CAAE,CAAC;IAC7CtB,GAAG,CAACU,KAAK,EAAE;IACX,OAAO,IAAI;EACf;EAEA;;;;EAIA,MAAMY,IAAIA,CAACtC,KAAwB,EAAEmB,QAAkB;IACnD,MAAMH,GAAG,GAAG,MAAMF,MAAM,CAAC,IAAI,EAAE,MAAM,EAAEd,KAAK,CAAC;IAC7CgB,GAAG,CAACgB,SAAS,CAACL,IAAI,CAAC;MAAER,QAAQ;MAAEmB,IAAI,EAAE;IAAI,CAAE,CAAC;IAC5CtB,GAAG,CAACU,KAAK,EAAE;IACX,OAAO,IAAI;EACf;EAEA;;;;;EAKA,MAAMF,IAAIA,CAACxB,KAAwB,EAAE,GAAG1F,IAAgB;IACpD,OAAO,MAAMkH,IAAI,CAAC,IAAI,EAAExB,KAAK,EAAE1F,IAAI,EAAE,IAAI,CAAC;EAC9C;EAEA;;;;EAIA,MAAMyK,aAAaA,CAAC/E,KAAyB;IACzC,IAAIA,KAAK,EAAE;MACP,MAAMgB,GAAG,GAAG,MAAMJ,MAAM,CAAC,IAAI,EAAEZ,KAAK,CAAC;MACrC,IAAI,CAACgB,GAAG,EAAE;QAAE,OAAO,CAAC;;MACpB,OAAOA,GAAG,CAACgB,SAAS,CAACrH,MAAM;;IAG/B,MAAM;MAAEkG;IAAI,CAAE,GAAGhB,WAAW,CAAC,IAAI,CAAC;IAElC,IAAImF,KAAK,GAAG,CAAC;IACb,KAAK,MAAM;MAAEhD;IAAS,CAAE,IAAInB,IAAI,CAAClB,MAAM,EAAE,EAAE;MACvCqF,KAAK,IAAIhD,SAAS,CAACrH,MAAM;;IAE7B,OAAOqK,KAAK;EAChB;EAEA;;;;EAIA,MAAMhD,SAASA,CAAChC,KAAyB;IACrC,IAAIA,KAAK,EAAE;MACP,MAAMgB,GAAG,GAAG,MAAMJ,MAAM,CAAC,IAAI,EAAEZ,KAAK,CAAC;MACrC,IAAI,CAACgB,GAAG,EAAE;QAAE,OAAO,EAAG;;MACtB,OAAOA,GAAG,CAACgB,SAAS,CAAC5G,GAAG,CAAC,CAAC;QAAE+F;MAAQ,CAAE,KAAKA,QAAQ,CAAC;;IAGxD,MAAM;MAAEN;IAAI,CAAE,GAAGhB,WAAW,CAAC,IAAI,CAAC;IAElC,IAAIrB,MAAM,GAAoB,EAAG;IACjC,KAAK,MAAM;MAAEwD;IAAS,CAAE,IAAInB,IAAI,CAAClB,MAAM,EAAE,EAAE;MACvCnB,MAAM,GAAGA,MAAM,CAACyG,MAAM,CAACjD,SAAS,CAAC5G,GAAG,CAAC,CAAC;QAAE+F;MAAQ,CAAE,KAAKA,QAAQ,CAAC,CAAC;;IAErE,OAAO3C,MAAM;EACjB;EAEA;;;;EAIA,MAAMuD,GAAGA,CAAC/B,KAAwB,EAAEmB,QAAmB;IACnD,MAAMH,GAAG,GAAG,MAAMJ,MAAM,CAAC,IAAI,EAAEZ,KAAK,CAAC;IACrC,IAAI,CAACgB,GAAG,EAAE;MAAE,OAAO,IAAI;;IAEvB,IAAIG,QAAQ,EAAE;MACV,MAAM7F,KAAK,GAAG0F,GAAG,CAACgB,SAAS,CAAC5G,GAAG,CAAC,CAAC;QAAE+F;MAAQ,CAAE,KAAKA,QAAQ,CAAC,CAACzE,OAAO,CAACyE,QAAQ,CAAC;MAC7E,IAAI7F,KAAK,IAAI,CAAC,EAAE;QAAE0F,GAAG,CAACgB,SAAS,CAACkD,MAAM,CAAC5J,KAAK,EAAE,CAAC,CAAC;;;IAGpD,IAAI6F,QAAQ,IAAI,IAAI,IAAIH,GAAG,CAACgB,SAAS,CAACrH,MAAM,KAAK,CAAC,EAAE;MAChDqG,GAAG,CAACa,IAAI,EAAE;MACVhC,WAAW,CAAC,IAAI,CAAC,CAACgB,IAAI,CAAC2B,MAAM,CAACxB,GAAG,CAACN,GAAG,CAAC;;IAG1C,OAAO,IAAI;EACf;EAEA;;;;EAIA,MAAMyE,kBAAkBA,CAACnF,KAAyB;IAC9C,IAAIA,KAAK,EAAE;MACP,MAAMgB,GAAG,GAAG,MAAMJ,MAAM,CAAC,IAAI,EAAEZ,KAAK,CAAC;MACrC,IAAI,CAACgB,GAAG,EAAE;QAAE,OAAO,IAAI;;MACvBA,GAAG,CAACa,IAAI,EAAE;MACVhC,WAAW,CAAC,IAAI,CAAC,CAACgB,IAAI,CAAC2B,MAAM,CAACxB,GAAG,CAACN,GAAG,CAAC;KACzC,MAAM;MACH,MAAM;QAAEG;MAAI,CAAE,GAAGhB,WAAW,CAAC,IAAI,CAAC;MAClC,KAAK,MAAM;QAAEa,GAAG;QAAEmB;MAAI,CAAE,IAAIhB,IAAI,CAAClB,MAAM,EAAE,EAAE;QACvCkC,IAAI,EAAE;QACNhB,IAAI,CAAC2B,MAAM,CAAC9B,GAAG,CAAC;;;IAIxB,OAAO,IAAI;EACf;EAEA;;;EAGA,MAAM0E,WAAWA,CAACpF,KAAwB,EAAEmB,QAAkB;IAC1D,OAAO,MAAM,IAAI,CAACS,EAAE,CAAC5B,KAAK,EAAEmB,QAAQ,CAAC;EACzC;EAEA;;;EAGA,MAAMkE,cAAcA,CAACrF,KAAwB,EAAEmB,QAAkB;IAC7D,OAAO,MAAM,IAAI,CAACY,GAAG,CAAC/B,KAAK,EAAEmB,QAAQ,CAAC;EAC1C;EAEA;;;EAGA,OAAOmE,UAAUA,CAAwBzC,GAA6B;IAClE,MAAM0C,cAAe,SAAQ5C,YAAY;MACrCxI,YAAY8G,OAAe,EAAEpG,MAAA,GAAgC,IAAI;QAC7D,KAAK,CAACoG,OAAO,EAAE4B,GAAG,EAAEhI,MAAM,CAAC;MAC/B;;IAEJ,OAAO0K,cAAqB;EAChC;EAEA;;;EAGA,OAAO3I,IAAIA,CAAwBgG,MAAc,EAAEC,GAA6B,EAAEhI,MAA8B;IAC5G,IAAIA,MAAM,IAAI,IAAI,EAAE;MAAEA,MAAM,GAAG,IAAI;;IACnC,MAAMT,QAAQ,GAAG,IAAI,IAAI,CAACwI,MAAM,EAAEC,GAAG,EAAEhI,MAAM,CAAE;IAC/C,OAAOT,QAAe;EAC1B;;AAGJ,SAASoL,aAAaA,CAAA;EAClB,OAAO7C,YAAmB;AAC9B;AAEA;;;AAGA,OAAM,MAAO8C,QAAS,SAAQD,aAAa,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}