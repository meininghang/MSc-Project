{"ast":null,"code":"import { getEverpayTxMessage, signMessageAsync, transferAsync } from './lib/sign';\nimport { getSwapInfo, getEverpayBalance, getEverpayBalances, getEverpayInfo, getEverpayTransaction, getEverpayTransactions, getExpressInfo, getMintdEverpayTransactionByChainTxHash, postTx, getSwapPrice, placeSwapOrder, getFees, getFee } from './api';\nimport { everpayTxVersion, getExpressHost, getEverpayHost, getSwapHost } from './config';\nimport { getTimestamp, getTokenBySymbol, toBN, getAccountChainType, fromDecimalToUnit, genTokenTag, matchTokenTag, genExpressData, fromUnitToDecimalBN, genBundleData, getTokenBurnFeeByChainType, getChainDecimalByChainType, isArweaveChainPSTMode } from './utils/util';\nimport { checkParams } from './utils/check';\nimport { ERRORS } from './utils/errors';\nimport { utils } from 'ethers';\nimport { EverpayBase, EverpayAction, ChainType } from './types';\nimport { swapParamsClientToServer, swapParamsServerToClient } from './utils/swap';\nexport * from './types';\nclass Everpay extends EverpayBase {\n  constructor(config) {\n    var _a, _b;\n    super();\n    this.getAccountChainType = getAccountChainType;\n    this.cacheHelper = async key => {\n      var _a, _b, _c;\n      const timestamp = getTimestamp();\n      // cache info 3 mins\n      if (((_a = this._cachedInfo[key]) === null || _a === void 0 ? void 0 : _a.value) != null && this._cachedInfo[key].timestamp > timestamp - 3 * 60) {\n        return (_b = this._cachedInfo[key]) === null || _b === void 0 ? void 0 : _b.value;\n      }\n      if (key === 'everpay') {\n        const value = await await getEverpayInfo(this._apiHost);\n        this._cachedInfo[key] = {\n          value,\n          timestamp\n        };\n      } else if (key === 'express') {\n        const value = await await getExpressInfo(this._expressHost);\n        this._cachedInfo[key] = {\n          value,\n          timestamp\n        };\n      } else if (key === 'swap') {\n        const value = await await getSwapInfo(this._swapHost);\n        this._cachedInfo[key] = {\n          value,\n          timestamp\n        };\n      }\n      return (_c = this._cachedInfo[key]) === null || _c === void 0 ? void 0 : _c.value;\n    };\n    this._config = {\n      ...config,\n      account: (_a = config === null || config === void 0 ? void 0 : config.account) !== null && _a !== void 0 ? _a : '',\n      chainType: (_b = config === null || config === void 0 ? void 0 : config.chainType) !== null && _b !== void 0 ? _b : ChainType.ethereum\n    };\n    this._apiHost = getEverpayHost(config === null || config === void 0 ? void 0 : config.debug);\n    this._expressHost = getExpressHost(config === null || config === void 0 ? void 0 : config.debug);\n    this._swapHost = getSwapHost(config === null || config === void 0 ? void 0 : config.debug);\n    this._cachedInfo = {};\n  }\n  async info() {\n    const result = await this.cacheHelper('everpay');\n    return result;\n  }\n  async expressInfo() {\n    const result = await this.cacheHelper('express');\n    return result;\n  }\n  async swapInfo() {\n    const result = await this.cacheHelper('swap');\n    return result;\n  }\n  async balance(params) {\n    var _a, _b;\n    await this.info();\n    const {\n      symbol,\n      account\n    } = params;\n    const acc = account !== null && account !== void 0 ? account : this._config.account;\n    const token = getTokenBySymbol(symbol, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n    checkParams({\n      account: acc,\n      symbol,\n      token\n    });\n    const mergedParams = {\n      tokenTag: genTokenTag(token),\n      account: acc\n    };\n    const everpayBalance = await getEverpayBalance(this._apiHost, mergedParams);\n    return fromDecimalToUnit(everpayBalance.balance.amount, everpayBalance.balance.decimals);\n  }\n  async balances(params) {\n    const info = await this.info();\n    params = params !== null && params !== void 0 ? params : {};\n    const {\n      account\n    } = params;\n    const acc = account !== null && account !== void 0 ? account : this._config.account;\n    checkParams({\n      account: acc\n    });\n    const mergedParams = {\n      account: acc\n    };\n    const everpayBalances = await getEverpayBalances(this._apiHost, mergedParams);\n    const balances = everpayBalances.balances.map(item => {\n      const tag = item.tag;\n      const token = info.tokenList.find(token => token.tag === tag);\n      return {\n        chainType: token === null || token === void 0 ? void 0 : token.chainType,\n        symbol: token === null || token === void 0 ? void 0 : token.symbol.toUpperCase(),\n        address: token.id,\n        balance: fromDecimalToUnit(item.amount, item.decimals)\n      };\n    });\n    return balances;\n  }\n  async getMergedTxsParams(params) {\n    var _a, _b;\n    const {\n      page,\n      symbol,\n      action,\n      withoutAction\n    } = params;\n    const mergedParams = {};\n    if (page !== undefined) {\n      mergedParams.page = page;\n    }\n    if (symbol !== undefined) {\n      await this.info();\n      const token = getTokenBySymbol(symbol, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n      checkParams({\n        token\n      });\n      mergedParams.tokenId = token.id;\n    }\n    if (action !== undefined) {\n      checkParams({\n        action\n      });\n      mergedParams.action = action;\n    }\n    if (withoutAction !== undefined) {\n      mergedParams.withoutAction = withoutAction;\n    }\n    return mergedParams;\n  }\n  async txs(params) {\n    const mergedParams = await this.getMergedTxsParams(params);\n    return await getEverpayTransactions(this._apiHost, mergedParams);\n  }\n  async txsByAccount(params) {\n    var _a, _b;\n    checkParams({\n      account: (_a = params.account) !== null && _a !== void 0 ? _a : this._config.account\n    });\n    const mergedParams = await this.getMergedTxsParams(params);\n    mergedParams.account = (_b = params.account) !== null && _b !== void 0 ? _b : this._config.account;\n    return await getEverpayTransactions(this._apiHost, mergedParams);\n  }\n  async txByHash(everHash) {\n    checkParams({\n      everHash\n    });\n    return await getEverpayTransaction(this._apiHost, everHash);\n  }\n  async mintedTxByChainTxHash(chainTxHash) {\n    checkParams({\n      chainTxHash\n    });\n    return await getMintdEverpayTransactionByChainTxHash(this._apiHost, chainTxHash);\n  }\n  async fees() {\n    return await getFees(this._apiHost);\n  }\n  async fee(symbol) {\n    var _a, _b;\n    await this.info();\n    const token = getTokenBySymbol(symbol, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n    checkParams({\n      symbol,\n      token\n    });\n    return await getFee(this._apiHost, genTokenTag(token));\n  }\n  async deposit(params) {\n    var _a, _b, _c;\n    await this.info();\n    const {\n      amount,\n      symbol\n    } = params;\n    const from = this._config.account;\n    const token = getTokenBySymbol(symbol, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n    const chainType = this._config.chainType;\n    checkParams({\n      account: from,\n      symbol,\n      token,\n      amount\n    });\n    // arweave 上的 PST 充值必须是整数\n    if (isArweaveChainPSTMode(token) && chainType === ChainType.arweave && parseInt(amount) !== +amount) {\n      throw new Error(ERRORS.DEPOSIT_ARWEAVE_PST_MUST_BE_INTEGER);\n    }\n    const chainDecimal = getChainDecimalByChainType(token, chainType);\n    const value = utils.parseUnits(toBN(amount).toString(), chainDecimal);\n    return await transferAsync(this._config, (_c = this._cachedInfo.everpay) === null || _c === void 0 ? void 0 : _c.value, {\n      symbol,\n      token,\n      from: from !== null && from !== void 0 ? from : '',\n      value\n    });\n  }\n  // amount 为实际收款数量\n  async getEverpayTxWithoutSig(type, params) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    await this.info();\n    const {\n      symbol,\n      amount,\n      fee,\n      quickMode\n    } = params;\n    const token = getTokenBySymbol(symbol, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n    const from = this._config.account;\n    let data = params.data;\n    let to = params === null || params === void 0 ? void 0 : params.to;\n    let decimalFeeBN = toBN(0);\n    let decimalOperateAmountBN = toBN(0);\n    let action = EverpayAction.transfer;\n    checkParams({\n      account: from,\n      symbol,\n      token,\n      to\n    });\n    if (type === 'transfer') {\n      checkParams({\n        amount\n      });\n      action = EverpayAction.transfer;\n      decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_c = token === null || token === void 0 ? void 0 : token.decimals) !== null && _c !== void 0 ? _c : 0);\n    } else if (type === 'bundle') {\n      action = EverpayAction.bundle;\n      decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_d = token === null || token === void 0 ? void 0 : token.decimals) !== null && _d !== void 0 ? _d : 0);\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    } else if (type === 'withdraw') {\n      checkParams({\n        amount\n      });\n      const chainType = params.chainType;\n      // PST 提现到 arweave 网络必须是整数\n      if (isArweaveChainPSTMode(token) && chainType === ChainType.arweave && parseInt(amount) !== +amount) {\n        throw new Error(ERRORS.PST_WITHDARW_TO_ARWEAVE_MUST_BE_INTEGER);\n      }\n      const balance = await this.balance({\n        symbol\n      });\n      const decimalBalanceBN = fromUnitToDecimalBN(balance, (_e = token === null || token === void 0 ? void 0 : token.decimals) !== null && _e !== void 0 ? _e : 0);\n      // 快速提现\n      if (quickMode === true) {\n        action = EverpayAction.transfer;\n        const expressInfo = await this.expressInfo();\n        const tokenTag = genTokenTag(token);\n        const foundExpressTokenData = expressInfo.tokens.find(t => matchTokenTag(tokenTag, t.tokenTag));\n        if (foundExpressTokenData == null) {\n          throw new Error(ERRORS.WITHDRAW_TOKEN_NOT_SUPPORT_QUICK_MODE);\n        }\n        const quickWithdrawLimitBN = fromUnitToDecimalBN(foundExpressTokenData.walletBalance, (_f = token === null || token === void 0 ? void 0 : token.decimals) !== null && _f !== void 0 ? _f : 0);\n        // 快速提现的手续费，只放入 data 字段中\n        const quickWithdrawFeeBN = fee !== undefined ? fromUnitToDecimalBN(fee, (_g = token === null || token === void 0 ? void 0 : token.decimals) !== null && _g !== void 0 ? _g : 0) : toBN(foundExpressTokenData.withdrawFee);\n        // 快速提现的 amount 为全部数量\n        decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_h = token === null || token === void 0 ? void 0 : token.decimals) !== null && _h !== void 0 ? _h : 0).plus(quickWithdrawFeeBN);\n        if (decimalOperateAmountBN.gt(decimalBalanceBN)) {\n          throw new Error(ERRORS.WITHDRAW_AMOUNT_LESS_THAN_FEE);\n        }\n        if (decimalOperateAmountBN.gt(quickWithdrawLimitBN)) {\n          throw new Error(ERRORS.INSUFFICIENT_QUICK_WITHDRAWAL_AMOUNT);\n        }\n        const expressData = genExpressData({\n          chainType,\n          to,\n          fee: quickWithdrawFeeBN.toString()\n        });\n        data = data !== undefined ? {\n          ...data,\n          ...expressData\n        } : {\n          ...expressData\n        };\n        // to 需要更改为快速提现收款账户\n        to = expressInfo.address;\n        // 普通提现\n      } else {\n        action = EverpayAction.withdraw;\n        if (fee !== undefined) {\n          decimalFeeBN = fromUnitToDecimalBN(fee, (_j = token === null || token === void 0 ? void 0 : token.decimals) !== null && _j !== void 0 ? _j : 0);\n        } else {\n          const feeItem = await getFee(this._apiHost, genTokenTag(token));\n          decimalFeeBN = toBN((_k = getTokenBurnFeeByChainType(token, feeItem, chainType)) !== null && _k !== void 0 ? _k : '0');\n        }\n        const targetChainType = chainType;\n        data = data !== undefined ? {\n          ...data,\n          targetChainType\n        } : {\n          targetChainType\n        };\n        decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_l = token === null || token === void 0 ? void 0 : token.decimals) !== null && _l !== void 0 ? _l : 0);\n        if (decimalOperateAmountBN.plus(decimalFeeBN).gt(decimalBalanceBN)) {\n          throw new Error(ERRORS.WITHDRAW_AMOUNT_LESS_THAN_FEE);\n        }\n      }\n    }\n    const everpayTxWithoutSig = {\n      tokenSymbol: symbol,\n      action,\n      from,\n      to,\n      amount: decimalOperateAmountBN.toString(),\n      fee: decimalFeeBN.toString(),\n      feeRecipient: (_p = (_o = (_m = this._cachedInfo) === null || _m === void 0 ? void 0 : _m.everpay) === null || _o === void 0 ? void 0 : _o.value.feeRecipient) !== null && _p !== void 0 ? _p : '',\n      nonce: Date.now().toString(),\n      tokenID: token === null || token === void 0 ? void 0 : token.id,\n      chainType: token === null || token === void 0 ? void 0 : token.chainType,\n      chainID: token === null || token === void 0 ? void 0 : token.chainID,\n      data: data !== undefined ? JSON.stringify(data) : '',\n      version: everpayTxVersion\n    };\n    return everpayTxWithoutSig;\n  }\n  getEverpayTxMessage(everpayTxWithoutSig) {\n    return getEverpayTxMessage(everpayTxWithoutSig);\n  }\n  async signedEverpayTx(everpayTxWithoutSig) {\n    const messageData = getEverpayTxMessage(everpayTxWithoutSig);\n    const {\n      sig,\n      everHash\n    } = await signMessageAsync(this._config, messageData);\n    const everpayTx = {\n      ...everpayTxWithoutSig,\n      sig\n    };\n    return {\n      everpayTx,\n      everHash\n    };\n  }\n  async sendEverpayTx(everpayTxWithoutSig) {\n    const {\n      everpayTx,\n      everHash\n    } = await this.signedEverpayTx(everpayTxWithoutSig);\n    const postEverpayTxResult = await postTx(this._apiHost, everpayTx);\n    return {\n      ...postEverpayTxResult,\n      everpayTx,\n      everHash\n    };\n  }\n  async transfer(params) {\n    const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('transfer', params);\n    return await this.sendEverpayTx(everpayTxWithoutSig);\n  }\n  async withdraw(params) {\n    var _a;\n    await this.info();\n    const to = (_a = params.to) !== null && _a !== void 0 ? _a : this._config.account;\n    const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('withdraw', {\n      ...params,\n      to\n    });\n    return await this.sendEverpayTx(everpayTxWithoutSig);\n  }\n  async getBundleData(items, expiration) {\n    var _a, _b;\n    await this.info();\n    return genBundleData({\n      items,\n      tokenList: (_b = (_a = this._cachedInfo.everpay) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.tokenList,\n      // 设置 60s 过期\n      expiration: expiration !== null && expiration !== void 0 ? expiration : Math.round(Date.now() / 1000) + 60\n    });\n  }\n  async signBundleData(bundleData) {\n    const {\n      items,\n      expiration,\n      salt,\n      version\n    } = bundleData;\n    const {\n      sig\n    } = await signMessageAsync(this._config, JSON.stringify({\n      // 只签名这几个字段，并且顺序需要保持一致\n      items,\n      expiration,\n      salt,\n      version\n    }));\n    const sigs = bundleData.sigs != null ? bundleData.sigs : {};\n    sigs[this._config.account] = sig;\n    return {\n      items,\n      expiration,\n      salt,\n      version,\n      sigs\n    };\n  }\n  async bundle(params) {\n    const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('bundle', params);\n    return await this.sendEverpayTx(everpayTxWithoutSig);\n  }\n  async swapPrice(params) {\n    var _a, _b;\n    await Promise.all([this.info(), this.swapInfo()]);\n    const everpayInfo = (_a = this._cachedInfo.everpay) === null || _a === void 0 ? void 0 : _a.value;\n    const swapInfo = (_b = this._cachedInfo.swap) === null || _b === void 0 ? void 0 : _b.value;\n    const paramsToServer = swapParamsClientToServer(params, everpayInfo, swapInfo);\n    const result = await getSwapPrice(this._swapHost, paramsToServer);\n    const formated = swapParamsServerToClient(result, everpayInfo, swapInfo);\n    return {\n      ...formated,\n      indicativePrice: result.indicativePrice,\n      spreadPercent: result.spreadPercent\n    };\n  }\n  async getSwapBundleData(params) {\n    var _a;\n    await Promise.all([this.info(), this.swapInfo()]);\n    const swapInfo = (_a = this._cachedInfo.swap) === null || _a === void 0 ? void 0 : _a.value;\n    const {\n      tokenIn,\n      tokenOut,\n      tokenInAmount,\n      tokenOutAmount\n    } = params;\n    return await this.getBundleData([{\n      from: this._config.account,\n      to: swapInfo.address,\n      symbol: tokenIn,\n      amount: tokenInAmount\n    }, {\n      from: swapInfo.address,\n      to: this._config.account,\n      symbol: tokenOut,\n      amount: tokenOutAmount\n    }]);\n  }\n  async swapOrder(bundleData) {\n    const {\n      items,\n      expiration,\n      salt,\n      version\n    } = bundleData;\n    const {\n      sig\n    } = await signMessageAsync(this._config, JSON.stringify(bundleData));\n    return await placeSwapOrder(this._swapHost, {\n      items,\n      expiration,\n      salt,\n      version,\n      sigs: {\n        [this._config.account]: sig\n      }\n    });\n  }\n}\nexport default Everpay;","map":{"version":3,"names":["getEverpayTxMessage","signMessageAsync","transferAsync","getSwapInfo","getEverpayBalance","getEverpayBalances","getEverpayInfo","getEverpayTransaction","getEverpayTransactions","getExpressInfo","getMintdEverpayTransactionByChainTxHash","postTx","getSwapPrice","placeSwapOrder","getFees","getFee","everpayTxVersion","getExpressHost","getEverpayHost","getSwapHost","getTimestamp","getTokenBySymbol","toBN","getAccountChainType","fromDecimalToUnit","genTokenTag","matchTokenTag","genExpressData","fromUnitToDecimalBN","genBundleData","getTokenBurnFeeByChainType","getChainDecimalByChainType","isArweaveChainPSTMode","checkParams","ERRORS","utils","EverpayBase","EverpayAction","ChainType","swapParamsClientToServer","swapParamsServerToClient","Everpay","constructor","config","_a","_b","cacheHelper","key","_c","timestamp","_cachedInfo","value","_apiHost","_expressHost","_swapHost","_config","account","chainType","ethereum","debug","info","result","expressInfo","swapInfo","balance","params","symbol","acc","token","everpay","tokenList","mergedParams","tokenTag","everpayBalance","amount","decimals","balances","everpayBalances","map","item","tag","find","toUpperCase","address","id","getMergedTxsParams","page","action","withoutAction","undefined","tokenId","txs","txsByAccount","txByHash","everHash","mintedTxByChainTxHash","chainTxHash","fees","fee","deposit","from","arweave","parseInt","Error","DEPOSIT_ARWEAVE_PST_MUST_BE_INTEGER","chainDecimal","parseUnits","toString","getEverpayTxWithoutSig","type","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","quickMode","data","to","decimalFeeBN","decimalOperateAmountBN","transfer","bundle","PST_WITHDARW_TO_ARWEAVE_MUST_BE_INTEGER","decimalBalanceBN","foundExpressTokenData","tokens","t","WITHDRAW_TOKEN_NOT_SUPPORT_QUICK_MODE","quickWithdrawLimitBN","walletBalance","quickWithdrawFeeBN","withdrawFee","plus","gt","WITHDRAW_AMOUNT_LESS_THAN_FEE","INSUFFICIENT_QUICK_WITHDRAWAL_AMOUNT","expressData","withdraw","feeItem","targetChainType","everpayTxWithoutSig","tokenSymbol","feeRecipient","nonce","Date","now","tokenID","chainID","JSON","stringify","version","signedEverpayTx","messageData","sig","everpayTx","sendEverpayTx","postEverpayTxResult","getBundleData","items","expiration","Math","round","signBundleData","bundleData","salt","sigs","swapPrice","Promise","all","everpayInfo","swap","paramsToServer","formated","indicativePrice","spreadPercent","getSwapBundleData","tokenIn","tokenOut","tokenInAmount","tokenOutAmount","swapOrder"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/arseeding-js/node_modules/everpay/esm/index.js"],"sourcesContent":["import { getEverpayTxMessage, signMessageAsync, transferAsync } from './lib/sign';\nimport { getSwapInfo, getEverpayBalance, getEverpayBalances, getEverpayInfo, getEverpayTransaction, getEverpayTransactions, getExpressInfo, getMintdEverpayTransactionByChainTxHash, postTx, getSwapPrice, placeSwapOrder, getFees, getFee } from './api';\nimport { everpayTxVersion, getExpressHost, getEverpayHost, getSwapHost } from './config';\nimport { getTimestamp, getTokenBySymbol, toBN, getAccountChainType, fromDecimalToUnit, genTokenTag, matchTokenTag, genExpressData, fromUnitToDecimalBN, genBundleData, getTokenBurnFeeByChainType, getChainDecimalByChainType, isArweaveChainPSTMode } from './utils/util';\nimport { checkParams } from './utils/check';\nimport { ERRORS } from './utils/errors';\nimport { utils } from 'ethers';\nimport { EverpayBase, EverpayAction, ChainType } from './types';\nimport { swapParamsClientToServer, swapParamsServerToClient } from './utils/swap';\nexport * from './types';\nclass Everpay extends EverpayBase {\n    constructor(config) {\n        var _a, _b;\n        super();\n        this.getAccountChainType = getAccountChainType;\n        this.cacheHelper = async (key) => {\n            var _a, _b, _c;\n            const timestamp = getTimestamp();\n            // cache info 3 mins\n            if (((_a = this._cachedInfo[key]) === null || _a === void 0 ? void 0 : _a.value) != null &&\n                this._cachedInfo[key].timestamp > timestamp - 3 * 60) {\n                return (_b = this._cachedInfo[key]) === null || _b === void 0 ? void 0 : _b.value;\n            }\n            if (key === 'everpay') {\n                const value = await await getEverpayInfo(this._apiHost);\n                this._cachedInfo[key] = { value, timestamp };\n            }\n            else if (key === 'express') {\n                const value = await await getExpressInfo(this._expressHost);\n                this._cachedInfo[key] = { value, timestamp };\n            }\n            else if (key === 'swap') {\n                const value = await await getSwapInfo(this._swapHost);\n                this._cachedInfo[key] = { value, timestamp };\n            }\n            return (_c = this._cachedInfo[key]) === null || _c === void 0 ? void 0 : _c.value;\n        };\n        this._config = {\n            ...config,\n            account: (_a = config === null || config === void 0 ? void 0 : config.account) !== null && _a !== void 0 ? _a : '',\n            chainType: (_b = config === null || config === void 0 ? void 0 : config.chainType) !== null && _b !== void 0 ? _b : ChainType.ethereum\n        };\n        this._apiHost = getEverpayHost(config === null || config === void 0 ? void 0 : config.debug);\n        this._expressHost = getExpressHost(config === null || config === void 0 ? void 0 : config.debug);\n        this._swapHost = getSwapHost(config === null || config === void 0 ? void 0 : config.debug);\n        this._cachedInfo = {};\n    }\n    async info() {\n        const result = await this.cacheHelper('everpay');\n        return result;\n    }\n    async expressInfo() {\n        const result = await this.cacheHelper('express');\n        return result;\n    }\n    async swapInfo() {\n        const result = await this.cacheHelper('swap');\n        return result;\n    }\n    async balance(params) {\n        var _a, _b;\n        await this.info();\n        const { symbol, account } = params;\n        const acc = account !== null && account !== void 0 ? account : this._config.account;\n        const token = getTokenBySymbol(symbol, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n        checkParams({ account: acc, symbol, token });\n        const mergedParams = {\n            tokenTag: genTokenTag(token),\n            account: acc\n        };\n        const everpayBalance = await getEverpayBalance(this._apiHost, mergedParams);\n        return fromDecimalToUnit(everpayBalance.balance.amount, everpayBalance.balance.decimals);\n    }\n    async balances(params) {\n        const info = await this.info();\n        params = (params !== null && params !== void 0 ? params : {});\n        const { account } = params;\n        const acc = account !== null && account !== void 0 ? account : this._config.account;\n        checkParams({ account: acc });\n        const mergedParams = {\n            account: acc\n        };\n        const everpayBalances = await getEverpayBalances(this._apiHost, mergedParams);\n        const balances = everpayBalances.balances.map(item => {\n            const tag = item.tag;\n            const token = info.tokenList.find(token => token.tag === tag);\n            return {\n                chainType: token === null || token === void 0 ? void 0 : token.chainType,\n                symbol: token === null || token === void 0 ? void 0 : token.symbol.toUpperCase(),\n                address: token.id,\n                balance: fromDecimalToUnit(item.amount, item.decimals)\n            };\n        });\n        return balances;\n    }\n    async getMergedTxsParams(params) {\n        var _a, _b;\n        const { page, symbol, action, withoutAction } = params;\n        const mergedParams = {};\n        if (page !== undefined) {\n            mergedParams.page = page;\n        }\n        if (symbol !== undefined) {\n            await this.info();\n            const token = getTokenBySymbol(symbol, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n            checkParams({ token });\n            mergedParams.tokenId = token.id;\n        }\n        if (action !== undefined) {\n            checkParams({ action });\n            mergedParams.action = action;\n        }\n        if (withoutAction !== undefined) {\n            mergedParams.withoutAction = withoutAction;\n        }\n        return mergedParams;\n    }\n    async txs(params) {\n        const mergedParams = await this.getMergedTxsParams(params);\n        return await getEverpayTransactions(this._apiHost, mergedParams);\n    }\n    async txsByAccount(params) {\n        var _a, _b;\n        checkParams({ account: (_a = params.account) !== null && _a !== void 0 ? _a : this._config.account });\n        const mergedParams = await this.getMergedTxsParams(params);\n        mergedParams.account = (_b = params.account) !== null && _b !== void 0 ? _b : this._config.account;\n        return await getEverpayTransactions(this._apiHost, mergedParams);\n    }\n    async txByHash(everHash) {\n        checkParams({ everHash });\n        return await getEverpayTransaction(this._apiHost, everHash);\n    }\n    async mintedTxByChainTxHash(chainTxHash) {\n        checkParams({ chainTxHash });\n        return await getMintdEverpayTransactionByChainTxHash(this._apiHost, chainTxHash);\n    }\n    async fees() {\n        return await getFees(this._apiHost);\n    }\n    async fee(symbol) {\n        var _a, _b;\n        await this.info();\n        const token = getTokenBySymbol(symbol, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n        checkParams({ symbol, token });\n        return await getFee(this._apiHost, genTokenTag(token));\n    }\n    async deposit(params) {\n        var _a, _b, _c;\n        await this.info();\n        const { amount, symbol } = params;\n        const from = this._config.account;\n        const token = getTokenBySymbol(symbol, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n        const chainType = this._config.chainType;\n        checkParams({ account: from, symbol, token, amount });\n        // arweave 上的 PST 充值必须是整数\n        if (isArweaveChainPSTMode(token) && chainType === ChainType.arweave && parseInt(amount) !== +amount) {\n            throw new Error(ERRORS.DEPOSIT_ARWEAVE_PST_MUST_BE_INTEGER);\n        }\n        const chainDecimal = getChainDecimalByChainType(token, chainType);\n        const value = utils.parseUnits(toBN(amount).toString(), chainDecimal);\n        return await transferAsync(this._config, (_c = this._cachedInfo.everpay) === null || _c === void 0 ? void 0 : _c.value, {\n            symbol,\n            token,\n            from: from !== null && from !== void 0 ? from : '',\n            value\n        });\n    }\n    // amount 为实际收款数量\n    async getEverpayTxWithoutSig(type, params) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        await this.info();\n        const { symbol, amount, fee, quickMode } = params;\n        const token = getTokenBySymbol(symbol, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n        const from = this._config.account;\n        let data = params.data;\n        let to = params === null || params === void 0 ? void 0 : params.to;\n        let decimalFeeBN = toBN(0);\n        let decimalOperateAmountBN = toBN(0);\n        let action = EverpayAction.transfer;\n        checkParams({ account: from, symbol, token, to });\n        if (type === 'transfer') {\n            checkParams({ amount });\n            action = EverpayAction.transfer;\n            decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_c = token === null || token === void 0 ? void 0 : token.decimals) !== null && _c !== void 0 ? _c : 0);\n        }\n        else if (type === 'bundle') {\n            action = EverpayAction.bundle;\n            decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_d = token === null || token === void 0 ? void 0 : token.decimals) !== null && _d !== void 0 ? _d : 0);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        }\n        else if (type === 'withdraw') {\n            checkParams({ amount });\n            const chainType = params.chainType;\n            // PST 提现到 arweave 网络必须是整数\n            if (isArweaveChainPSTMode(token) && chainType === ChainType.arweave && parseInt(amount) !== +amount) {\n                throw new Error(ERRORS.PST_WITHDARW_TO_ARWEAVE_MUST_BE_INTEGER);\n            }\n            const balance = await this.balance({ symbol });\n            const decimalBalanceBN = fromUnitToDecimalBN(balance, (_e = token === null || token === void 0 ? void 0 : token.decimals) !== null && _e !== void 0 ? _e : 0);\n            // 快速提现\n            if (quickMode === true) {\n                action = EverpayAction.transfer;\n                const expressInfo = await this.expressInfo();\n                const tokenTag = genTokenTag(token);\n                const foundExpressTokenData = expressInfo.tokens.find(t => matchTokenTag(tokenTag, t.tokenTag));\n                if (foundExpressTokenData == null) {\n                    throw new Error(ERRORS.WITHDRAW_TOKEN_NOT_SUPPORT_QUICK_MODE);\n                }\n                const quickWithdrawLimitBN = fromUnitToDecimalBN(foundExpressTokenData.walletBalance, (_f = token === null || token === void 0 ? void 0 : token.decimals) !== null && _f !== void 0 ? _f : 0);\n                // 快速提现的手续费，只放入 data 字段中\n                const quickWithdrawFeeBN = fee !== undefined\n                    ? fromUnitToDecimalBN(fee, (_g = token === null || token === void 0 ? void 0 : token.decimals) !== null && _g !== void 0 ? _g : 0)\n                    : toBN(foundExpressTokenData.withdrawFee);\n                // 快速提现的 amount 为全部数量\n                decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_h = token === null || token === void 0 ? void 0 : token.decimals) !== null && _h !== void 0 ? _h : 0).plus(quickWithdrawFeeBN);\n                if (decimalOperateAmountBN.gt(decimalBalanceBN)) {\n                    throw new Error(ERRORS.WITHDRAW_AMOUNT_LESS_THAN_FEE);\n                }\n                if (decimalOperateAmountBN.gt(quickWithdrawLimitBN)) {\n                    throw new Error(ERRORS.INSUFFICIENT_QUICK_WITHDRAWAL_AMOUNT);\n                }\n                const expressData = genExpressData({\n                    chainType, to, fee: quickWithdrawFeeBN.toString()\n                });\n                data = data !== undefined ? { ...data, ...expressData } : { ...expressData };\n                // to 需要更改为快速提现收款账户\n                to = expressInfo.address;\n                // 普通提现\n            }\n            else {\n                action = EverpayAction.withdraw;\n                if (fee !== undefined) {\n                    decimalFeeBN = fromUnitToDecimalBN(fee, (_j = token === null || token === void 0 ? void 0 : token.decimals) !== null && _j !== void 0 ? _j : 0);\n                }\n                else {\n                    const feeItem = await getFee(this._apiHost, genTokenTag(token));\n                    decimalFeeBN = toBN((_k = getTokenBurnFeeByChainType(token, feeItem, chainType)) !== null && _k !== void 0 ? _k : '0');\n                }\n                const targetChainType = chainType;\n                data = data !== undefined ? { ...data, targetChainType } : { targetChainType };\n                decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_l = token === null || token === void 0 ? void 0 : token.decimals) !== null && _l !== void 0 ? _l : 0);\n                if (decimalOperateAmountBN.plus(decimalFeeBN).gt(decimalBalanceBN)) {\n                    throw new Error(ERRORS.WITHDRAW_AMOUNT_LESS_THAN_FEE);\n                }\n            }\n        }\n        const everpayTxWithoutSig = {\n            tokenSymbol: symbol,\n            action,\n            from,\n            to,\n            amount: decimalOperateAmountBN.toString(),\n            fee: decimalFeeBN.toString(),\n            feeRecipient: (_p = (_o = (_m = this._cachedInfo) === null || _m === void 0 ? void 0 : _m.everpay) === null || _o === void 0 ? void 0 : _o.value.feeRecipient) !== null && _p !== void 0 ? _p : '',\n            nonce: Date.now().toString(),\n            tokenID: token === null || token === void 0 ? void 0 : token.id,\n            chainType: token === null || token === void 0 ? void 0 : token.chainType,\n            chainID: token === null || token === void 0 ? void 0 : token.chainID,\n            data: data !== undefined ? JSON.stringify(data) : '',\n            version: everpayTxVersion\n        };\n        return everpayTxWithoutSig;\n    }\n    getEverpayTxMessage(everpayTxWithoutSig) {\n        return getEverpayTxMessage(everpayTxWithoutSig);\n    }\n    async signedEverpayTx(everpayTxWithoutSig) {\n        const messageData = getEverpayTxMessage(everpayTxWithoutSig);\n        const { sig, everHash } = await signMessageAsync(this._config, messageData);\n        const everpayTx = {\n            ...everpayTxWithoutSig,\n            sig\n        };\n        return { everpayTx, everHash };\n    }\n    async sendEverpayTx(everpayTxWithoutSig) {\n        const { everpayTx, everHash } = await this.signedEverpayTx(everpayTxWithoutSig);\n        const postEverpayTxResult = await postTx(this._apiHost, everpayTx);\n        return {\n            ...postEverpayTxResult,\n            everpayTx,\n            everHash\n        };\n    }\n    async transfer(params) {\n        const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('transfer', params);\n        return await this.sendEverpayTx(everpayTxWithoutSig);\n    }\n    async withdraw(params) {\n        var _a;\n        await this.info();\n        const to = (_a = params.to) !== null && _a !== void 0 ? _a : this._config.account;\n        const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('withdraw', {\n            ...params,\n            to\n        });\n        return await this.sendEverpayTx(everpayTxWithoutSig);\n    }\n    async getBundleData(items, expiration) {\n        var _a, _b;\n        await this.info();\n        return genBundleData({\n            items,\n            tokenList: (_b = (_a = this._cachedInfo.everpay) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.tokenList,\n            // 设置 60s 过期\n            expiration: expiration !== null && expiration !== void 0 ? expiration : Math.round(Date.now() / 1000) + 60\n        });\n    }\n    async signBundleData(bundleData) {\n        const { items, expiration, salt, version } = bundleData;\n        const { sig } = await signMessageAsync(this._config, JSON.stringify({\n            // 只签名这几个字段，并且顺序需要保持一致\n            items, expiration, salt, version\n        }));\n        const sigs = bundleData.sigs != null ? bundleData.sigs : {};\n        sigs[this._config.account] = sig;\n        return {\n            items, expiration, salt, version, sigs\n        };\n    }\n    async bundle(params) {\n        const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('bundle', params);\n        return await this.sendEverpayTx(everpayTxWithoutSig);\n    }\n    async swapPrice(params) {\n        var _a, _b;\n        await Promise.all([this.info(), this.swapInfo()]);\n        const everpayInfo = (_a = this._cachedInfo.everpay) === null || _a === void 0 ? void 0 : _a.value;\n        const swapInfo = (_b = this._cachedInfo.swap) === null || _b === void 0 ? void 0 : _b.value;\n        const paramsToServer = swapParamsClientToServer(params, everpayInfo, swapInfo);\n        const result = await getSwapPrice(this._swapHost, paramsToServer);\n        const formated = swapParamsServerToClient(result, everpayInfo, swapInfo);\n        return {\n            ...formated,\n            indicativePrice: result.indicativePrice,\n            spreadPercent: result.spreadPercent\n        };\n    }\n    async getSwapBundleData(params) {\n        var _a;\n        await Promise.all([this.info(), this.swapInfo()]);\n        const swapInfo = (_a = this._cachedInfo.swap) === null || _a === void 0 ? void 0 : _a.value;\n        const { tokenIn, tokenOut, tokenInAmount, tokenOutAmount } = params;\n        return await this.getBundleData([\n            {\n                from: this._config.account,\n                to: swapInfo.address,\n                symbol: tokenIn,\n                amount: tokenInAmount\n            },\n            {\n                from: swapInfo.address,\n                to: this._config.account,\n                symbol: tokenOut,\n                amount: tokenOutAmount\n            }\n        ]);\n    }\n    async swapOrder(bundleData) {\n        const { items, expiration, salt, version } = bundleData;\n        const { sig } = await signMessageAsync(this._config, JSON.stringify(bundleData));\n        return await placeSwapOrder(this._swapHost, {\n            items,\n            expiration,\n            salt,\n            version,\n            sigs: {\n                [this._config.account]: sig\n            }\n        });\n    }\n}\nexport default Everpay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}