{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n *\n * @module near\n */\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst account_1 = require(\"./account\");\nconst connection_1 = require(\"./connection\");\nconst contract_1 = require(\"./contract\");\nconst account_creator_1 = require(\"./account_creator\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\nclass Near {\n  constructor(config) {\n    this.config = config;\n    this.connection = connection_1.Connection.fromConfig({\n      networkId: config.networkId,\n      provider: {\n        type: 'JsonRpcProvider',\n        args: {\n          url: config.nodeUrl,\n          headers: config.headers\n        }\n      },\n      signer: config.signer || {\n        type: 'InMemorySigner',\n        keyStore: config.keyStore || config.deps.keyStore\n      }\n    });\n    if (config.masterAccount) {\n      // TODO: figure out better way of specifiying initial balance.\n      // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n      const initialBalance = config.initialBalance ? new bn_js_1.default(config.initialBalance) : new bn_js_1.default('500000000000000000000000000');\n      this.accountCreator = new account_creator_1.LocalAccountCreator(new account_1.Account(this.connection, config.masterAccount), initialBalance);\n    } else if (config.helperUrl) {\n      this.accountCreator = new account_creator_1.UrlAccountCreator(this.connection, config.helperUrl);\n    } else {\n      this.accountCreator = null;\n    }\n  }\n  /**\n   * @param accountId near accountId used to interact with the network.\n   */\n  async account(accountId) {\n    const account = new account_1.Account(this.connection, accountId);\n    return account;\n  }\n  /**\n   * Create an account using the {@link AccountCreator}. Either:\n   * * using a masterAccount with {@link LocalAccountCreator}\n   * * using the helperUrl with {@link UrlAccountCreator}\n   * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-\n   *\n   * @param accountId\n   * @param publicKey\n   */\n  async createAccount(accountId, publicKey) {\n    if (!this.accountCreator) {\n      throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n    }\n    await this.accountCreator.createAccount(accountId, publicKey);\n    return new account_1.Account(this.connection, accountId);\n  }\n  /**\n   * @deprecated Use {@link Contract} instead.\n   * @param contractId\n   * @param options\n   */\n  async loadContract(contractId, options) {\n    const account = new account_1.Account(this.connection, options.sender);\n    return new contract_1.Contract(account, contractId, options);\n  }\n  /**\n   * @deprecated Use {@link Account.sendMoney} instead.\n   * @param amount\n   * @param originator\n   * @param receiver\n   */\n  async sendTokens(amount, originator, receiver) {\n    console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n    const account = new account_1.Account(this.connection, originator);\n    const result = await account.sendMoney(receiver, amount);\n    return result.transaction_outcome.id;\n  }\n}\nexports.Near = Near;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Near","bn_js_1","require","account_1","connection_1","contract_1","account_creator_1","constructor","config","connection","Connection","fromConfig","networkId","provider","type","args","url","nodeUrl","headers","signer","keyStore","deps","masterAccount","initialBalance","default","accountCreator","LocalAccountCreator","Account","helperUrl","UrlAccountCreator","account","accountId","createAccount","publicKey","Error","loadContract","contractId","options","sender","Contract","sendTokens","amount","originator","receiver","console","warn","result","sendMoney","transaction_outcome","id"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/near-api-js/lib/near.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n *\n * @module near\n */\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst account_1 = require(\"./account\");\nconst connection_1 = require(\"./connection\");\nconst contract_1 = require(\"./contract\");\nconst account_creator_1 = require(\"./account_creator\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\nclass Near {\n    constructor(config) {\n        this.config = config;\n        this.connection = connection_1.Connection.fromConfig({\n            networkId: config.networkId,\n            provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl, headers: config.headers } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? new bn_js_1.default(config.initialBalance) : new bn_js_1.default('500000000000000000000000000');\n            this.accountCreator = new account_creator_1.LocalAccountCreator(new account_1.Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new account_creator_1.UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     * @param accountId near accountId used to interact with the network.\n     */\n    async account(accountId) {\n        const account = new account_1.Account(this.connection, accountId);\n        return account;\n    }\n    /**\n     * Create an account using the {@link AccountCreator}. Either:\n     * * using a masterAccount with {@link LocalAccountCreator}\n     * * using the helperUrl with {@link UrlAccountCreator}\n     * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    async createAccount(accountId, publicKey) {\n        if (!this.accountCreator) {\n            throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n        }\n        await this.accountCreator.createAccount(accountId, publicKey);\n        return new account_1.Account(this.connection, accountId);\n    }\n    /**\n     * @deprecated Use {@link Contract} instead.\n     * @param contractId\n     * @param options\n     */\n    async loadContract(contractId, options) {\n        const account = new account_1.Account(this.connection, options.sender);\n        return new contract_1.Contract(account, contractId, options);\n    }\n    /**\n     * @deprecated Use {@link Account.sendMoney} instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n    async sendTokens(amount, originator, receiver) {\n        console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n        const account = new account_1.Account(this.connection, originator);\n        const result = await account.sendMoney(receiver, amount);\n        return result.transaction_outcome.id;\n    }\n}\nexports.Near = Near;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}