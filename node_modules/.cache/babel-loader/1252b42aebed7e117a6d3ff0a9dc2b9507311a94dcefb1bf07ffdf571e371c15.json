{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SiloResource = void 0;\nconst ArweaveUtils = require(\"./lib/utils\");\nclass Silo {\n  constructor(api, crypto, transactions) {\n    this.api = api;\n    this.crypto = crypto;\n    this.transactions = transactions;\n  }\n  async get(siloURI) {\n    if (!siloURI) {\n      throw new Error(`No Silo URI specified`);\n    }\n    const resource = await this.parseUri(siloURI);\n    const ids = await this.transactions.search(\"Silo-Name\", resource.getAccessKey());\n    if (ids.length == 0) {\n      throw new Error(`No data could be found for the Silo URI: ${siloURI}`);\n    }\n    const transaction = await this.transactions.get(ids[0]);\n    if (!transaction) {\n      throw new Error(`No data could be found for the Silo URI: ${siloURI}`);\n    }\n    const encrypted = transaction.get(\"data\", {\n      decode: true,\n      string: false\n    });\n    return this.crypto.decrypt(encrypted, resource.getEncryptionKey());\n  }\n  async readTransactionData(transaction, siloURI) {\n    if (!siloURI) {\n      throw new Error(`No Silo URI specified`);\n    }\n    const resource = await this.parseUri(siloURI);\n    const encrypted = transaction.get(\"data\", {\n      decode: true,\n      string: false\n    });\n    return this.crypto.decrypt(encrypted, resource.getEncryptionKey());\n  }\n  async parseUri(siloURI) {\n    const parsed = siloURI.match(/^([a-z0-9-_]+)\\.([0-9]+)/i);\n    if (!parsed) {\n      throw new Error(`Invalid Silo name, must be a name in the format of [a-z0-9]+.[0-9]+, e.g. 'bubble.7'`);\n    }\n    const siloName = parsed[1];\n    const hashIterations = Math.pow(2, parseInt(parsed[2]));\n    const digest = await this.hash(ArweaveUtils.stringToBuffer(siloName), hashIterations);\n    const accessKey = ArweaveUtils.bufferTob64(digest.slice(0, 15));\n    const encryptionkey = await this.hash(digest.slice(16, 31), 1);\n    return new SiloResource(siloURI, accessKey, encryptionkey);\n  }\n  async hash(input, iterations) {\n    let digest = await this.crypto.hash(input);\n    for (let count = 0; count < iterations - 1; count++) {\n      digest = await this.crypto.hash(digest);\n    }\n    return digest;\n  }\n}\nexports.default = Silo;\nclass SiloResource {\n  constructor(uri, accessKey, encryptionKey) {\n    this.uri = uri;\n    this.accessKey = accessKey;\n    this.encryptionKey = encryptionKey;\n  }\n  getUri() {\n    return this.uri;\n  }\n  getAccessKey() {\n    return this.accessKey;\n  }\n  getEncryptionKey() {\n    return this.encryptionKey;\n  }\n}\nexports.SiloResource = SiloResource;","map":{"version":3,"names":["ArweaveUtils","require","Silo","constructor","api","crypto","transactions","get","siloURI","Error","resource","parseUri","ids","search","getAccessKey","length","transaction","encrypted","decode","string","decrypt","getEncryptionKey","readTransactionData","parsed","match","siloName","hashIterations","Math","pow","parseInt","digest","hash","stringToBuffer","accessKey","bufferTob64","slice","encryptionkey","SiloResource","input","iterations","count","exports","default","uri","encryptionKey","getUri"],"sources":["../../../src/common/silo.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}