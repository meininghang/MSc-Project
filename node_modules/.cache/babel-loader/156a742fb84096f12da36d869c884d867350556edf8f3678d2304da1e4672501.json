{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/Permission.ts\nvar Permission_exports = {};\n__export(Permission_exports, {\n  default: () => Permission\n});\nmodule.exports = __toCommonJS(Permission_exports);\nvar import_MindLake = require(\"./MindLake\");\nvar import_bcl = require(\"./util/bcl\");\nvar import_result = __toESM(require(\"./util/result\"));\nvar Permission = class {\n  constructor(sdk) {\n    this.service = sdk.service;\n    this.web3 = sdk.web3;\n    this.sdk = sdk;\n  }\n  /**\n   *\n   * @param targetWalletAddress\n   */\n  async grant(targetWalletAddress, columns) {\n    try {\n      import_MindLake.MindLake.checkLogin();\n      this.sdk.checkRegistered();\n      if (!columns.length) {\n        throw new Error(\"no columns to need grant\");\n      }\n      const bcl = new import_bcl.Bcl(this.service);\n      const res = await this.service.execute({\n        bizType: 119,\n        targetWalletAddress\n      });\n      if (!res || !res.publicKeyId) {\n        throw new Error(\"Peer user (Subject)'s certificate hasn't been registered.\");\n      }\n      await bcl.createBclBody(this.sdk.registerPukId, res.publicKeyId, \"\");\n      const eachFunc = async data => {\n        for (const tableColumn of data) {\n          const [table, column] = tableColumn.split(\".\");\n          await this._addColumnIntoBcl(bcl, table, column);\n        }\n      };\n      await eachFunc(columns);\n      const {\n        privateKeyPem\n      } = await this.sdk.web3.getPkPem();\n      const sn = await bcl.issueBcl(privateKeyPem, 115);\n      return import_result.default.success(sn);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  /**\n   *\n   * @param policyId\n   */\n  async confirm(policyId) {\n    try {\n      import_MindLake.MindLake.checkLogin();\n      this.sdk.checkRegistered();\n      if (!policyId) {\n        throw new Error(\"The policy id is empty\");\n      }\n      const bcl = new import_bcl.Bcl(this.service);\n      await bcl.loadBclBodyBySN(policyId);\n      if (!bcl.bclBody || !bcl.bclBody.serial_num) {\n        throw new Error(\"The policyID is not correct\");\n      }\n      const {\n        privateKeyPem\n      } = await this.web3.getPkPem();\n      const sn = await bcl.issueBcl(privateKeyPem, 117);\n      return import_result.default.success(sn);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  /**\n   * revoke grant\n   * @param targetWalletAddress\n   * @param columns, if the columns is empty ,will revoke all\n   */\n  async revoke(targetWalletAddress, columns) {\n    try {\n      import_MindLake.MindLake.checkLogin();\n      this.sdk.checkRegistered();\n      const bcl = new import_bcl.Bcl(this.service);\n      const res = await this.service.execute({\n        bizType: 119,\n        targetWalletAddress\n      });\n      if (!res || !res.publicKeyId) {\n        throw new Error(\"Peer user (Subject)'s certificate hasn't been registered.\");\n      }\n      await bcl.loadBclBodyByPukId(this.sdk.registerPukId, res.publicKeyId);\n      if (!bcl.bclBody || !bcl.bclBody.serial_num) {\n        throw new Error(\"No grant required to revoke!\");\n      }\n      if (!columns || !columns.length) {\n        bcl.removeDekGroupAll();\n      } else {\n        const groupIdArray = new Array();\n        const eachFunc = async data => {\n          for (const column of data) {\n            const ccSelf = await this.service.execute({\n              bizType: 108,\n              schema: \"public\",\n              table: column.table,\n              column: column.column\n            });\n            if (!ccSelf.groupId) {\n              throw new Error(\"groupId is not exist\");\n            }\n            groupIdArray.push(ccSelf.groupId);\n          }\n        };\n        await eachFunc(columns);\n        bcl.removeDekGroup(groupIdArray);\n      }\n      const {\n        privateKeyPem\n      } = await this.web3.getPkPem();\n      const sn = await bcl.issueBcl(privateKeyPem, 115);\n      return import_result.default.success(sn);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  async listGrantee() {\n    try {\n      const data = await this.service.execute({\n        bizType: 126\n      });\n      return import_result.default.success(data);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  async listOwner() {\n    try {\n      const data = await this.service.execute({\n        bizType: 130\n      });\n      return import_result.default.success(data);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  async listOwnerColumn(targetWalletAddress) {\n    try {\n      const data = await this.service.execute({\n        bizType: 131,\n        targetWalletAddress\n      });\n      return import_result.default.success(data);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  async listGrantedColumn(targetWalletAddress) {\n    try {\n      const data = await this.service.execute({\n        bizType: 127,\n        targetWalletAddress\n      });\n      return import_result.default.success(data);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  async _addColumnIntoBcl(bcl, table, column, minId = 1, maxId = 1e3) {\n    const ccSelf = await this.service.execute({\n      bizType: 108,\n      table,\n      column\n    });\n    if (!ccSelf.groupId) {\n      throw new Error(\"groupId is not exist\");\n    }\n    const issuerDekGroup = {\n      groupid: ccSelf.groupId,\n      min: minId,\n      max: maxId\n    };\n    bcl.addDekGroup(issuerDekGroup);\n  }\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {});","map":{"version":3,"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toESM","mod","isNodeMode","__esModule","value","__toCommonJS","Permission_exports","default","Permission","module","exports","import_MindLake","require","import_bcl","import_result","constructor","sdk","service","web3","grant","targetWalletAddress","columns","MindLake","checkLogin","checkRegistered","length","Error","bcl","Bcl","res","execute","bizType","publicKeyId","createBclBody","registerPukId","eachFunc","data","tableColumn","table","column","split","_addColumnIntoBcl","privateKeyPem","getPkPem","sn","issueBcl","success","e","console","error","fail","confirm","policyId","loadBclBodyBySN","bclBody","serial_num","revoke","loadBclBodyByPukId","removeDekGroupAll","groupIdArray","Array","ccSelf","schema","groupId","push","removeDekGroup","listGrantee","listOwner","listOwnerColumn","listGrantedColumn","minId","maxId","issuerDekGroup","groupid","min","max","addDekGroup"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/mind-lake-sdk/dist/Permission.js"],"sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/Permission.ts\nvar Permission_exports = {};\n__export(Permission_exports, {\n  default: () => Permission\n});\nmodule.exports = __toCommonJS(Permission_exports);\nvar import_MindLake = require(\"./MindLake\");\nvar import_bcl = require(\"./util/bcl\");\nvar import_result = __toESM(require(\"./util/result\"));\nvar Permission = class {\n  constructor(sdk) {\n    this.service = sdk.service;\n    this.web3 = sdk.web3;\n    this.sdk = sdk;\n  }\n  /**\n   *\n   * @param targetWalletAddress\n   */\n  async grant(targetWalletAddress, columns) {\n    try {\n      import_MindLake.MindLake.checkLogin();\n      this.sdk.checkRegistered();\n      if (!columns.length) {\n        throw new Error(\"no columns to need grant\");\n      }\n      const bcl = new import_bcl.Bcl(this.service);\n      const res = await this.service.execute({ bizType: 119, targetWalletAddress });\n      if (!res || !res.publicKeyId) {\n        throw new Error(\n          \"Peer user (Subject)'s certificate hasn't been registered.\"\n        );\n      }\n      await bcl.createBclBody(this.sdk.registerPukId, res.publicKeyId, \"\");\n      const eachFunc = async (data) => {\n        for (const tableColumn of data) {\n          const [table, column] = tableColumn.split(\".\");\n          await this._addColumnIntoBcl(bcl, table, column);\n        }\n      };\n      await eachFunc(columns);\n      const { privateKeyPem } = await this.sdk.web3.getPkPem();\n      const sn = await bcl.issueBcl(privateKeyPem, 115);\n      return import_result.default.success(sn);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  /**\n   *\n   * @param policyId\n   */\n  async confirm(policyId) {\n    try {\n      import_MindLake.MindLake.checkLogin();\n      this.sdk.checkRegistered();\n      if (!policyId) {\n        throw new Error(\"The policy id is empty\");\n      }\n      const bcl = new import_bcl.Bcl(this.service);\n      await bcl.loadBclBodyBySN(policyId);\n      if (!bcl.bclBody || !bcl.bclBody.serial_num) {\n        throw new Error(\"The policyID is not correct\");\n      }\n      const { privateKeyPem } = await this.web3.getPkPem();\n      const sn = await bcl.issueBcl(privateKeyPem, 117);\n      return import_result.default.success(sn);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  /**\n   * revoke grant\n   * @param targetWalletAddress\n   * @param columns, if the columns is empty ,will revoke all\n   */\n  async revoke(targetWalletAddress, columns) {\n    try {\n      import_MindLake.MindLake.checkLogin();\n      this.sdk.checkRegistered();\n      const bcl = new import_bcl.Bcl(this.service);\n      const res = await this.service.execute({ bizType: 119, targetWalletAddress });\n      if (!res || !res.publicKeyId) {\n        throw new Error(\n          \"Peer user (Subject)'s certificate hasn't been registered.\"\n        );\n      }\n      await bcl.loadBclBodyByPukId(this.sdk.registerPukId, res.publicKeyId);\n      if (!bcl.bclBody || !bcl.bclBody.serial_num) {\n        throw new Error(\"No grant required to revoke!\");\n      }\n      if (!columns || !columns.length) {\n        bcl.removeDekGroupAll();\n      } else {\n        const groupIdArray = new Array();\n        const eachFunc = async (data) => {\n          for (const column of data) {\n            const ccSelf = await this.service.execute({\n              bizType: 108,\n              schema: \"public\",\n              table: column.table,\n              column: column.column\n            });\n            if (!ccSelf.groupId) {\n              throw new Error(\"groupId is not exist\");\n            }\n            groupIdArray.push(ccSelf.groupId);\n          }\n        };\n        await eachFunc(columns);\n        bcl.removeDekGroup(groupIdArray);\n      }\n      const { privateKeyPem } = await this.web3.getPkPem();\n      const sn = await bcl.issueBcl(privateKeyPem, 115);\n      return import_result.default.success(sn);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  async listGrantee() {\n    try {\n      const data = await this.service.execute({ bizType: 126 });\n      return import_result.default.success(data);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  async listOwner() {\n    try {\n      const data = await this.service.execute({ bizType: 130 });\n      return import_result.default.success(data);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  async listOwnerColumn(targetWalletAddress) {\n    try {\n      const data = await this.service.execute({\n        bizType: 131,\n        targetWalletAddress\n      });\n      return import_result.default.success(data);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  async listGrantedColumn(targetWalletAddress) {\n    try {\n      const data = await this.service.execute({\n        bizType: 127,\n        targetWalletAddress\n      });\n      return import_result.default.success(data);\n    } catch (e) {\n      console.error(e);\n      return import_result.default.fail(e);\n    }\n  }\n  async _addColumnIntoBcl(bcl, table, column, minId = 1, maxId = 1e3) {\n    const ccSelf = await this.service.execute({\n      bizType: 108,\n      table,\n      column\n    });\n    if (!ccSelf.groupId) {\n      throw new Error(\"groupId is not exist\");\n    }\n    const issuerDekGroup = { groupid: ccSelf.groupId, min: minId, max: maxId };\n    bcl.addDekGroup(issuerDekGroup);\n  }\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {});\n"],"mappings":";AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAM;AAC5B,IAAIC,SAAS,GAAGF,MAAM,CAACG,cAAc;AACrC,IAAIC,gBAAgB,GAAGJ,MAAM,CAACK,wBAAwB;AACtD,IAAIC,iBAAiB,GAAGN,MAAM,CAACO,mBAAmB;AAClD,IAAIC,YAAY,GAAGR,MAAM,CAACS,cAAc;AACxC,IAAIC,YAAY,GAAGV,MAAM,CAACW,SAAS,CAACC,cAAc;AAClD,IAAIC,QAAQ,GAAGA,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC9B,KAAK,IAAIC,IAAI,IAAID,GAAG,EAClBb,SAAS,CAACY,MAAM,EAAEE,IAAI,EAAE;IAAEC,GAAG,EAAEF,GAAG,CAACC,IAAI,CAAC;IAAEE,UAAU,EAAE;EAAK,CAAC,CAAC;AACjE,CAAC;AACD,IAAIC,WAAW,GAAGA,CAACC,EAAE,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,KAAK;EAC5C,IAAIF,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAE;IAClE,KAAK,IAAIG,GAAG,IAAIlB,iBAAiB,CAACe,IAAI,CAAC,EACrC,IAAI,CAACX,YAAY,CAACe,IAAI,CAACL,EAAE,EAAEI,GAAG,CAAC,IAAIA,GAAG,KAAKF,MAAM,EAC/CpB,SAAS,CAACkB,EAAE,EAAEI,GAAG,EAAE;MAAEP,GAAG,EAAEA,CAAA,KAAMI,IAAI,CAACG,GAAG,CAAC;MAAEN,UAAU,EAAE,EAAEK,IAAI,GAAGnB,gBAAgB,CAACiB,IAAI,EAAEG,GAAG,CAAC,CAAC,IAAID,IAAI,CAACL;IAAW,CAAC,CAAC;EACxH;EACA,OAAOE,EAAE;AACX,CAAC;AACD,IAAIM,OAAO,GAAGA,CAACC,GAAG,EAAEC,UAAU,EAAEd,MAAM,MAAMA,MAAM,GAAGa,GAAG,IAAI,IAAI,GAAG5B,QAAQ,CAACS,YAAY,CAACmB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAER,WAAW;AAC9G;AACA;AACA;AACA;AACAS,UAAU,IAAI,CAACD,GAAG,IAAI,CAACA,GAAG,CAACE,UAAU,GAAG3B,SAAS,CAACY,MAAM,EAAE,SAAS,EAAE;EAAEgB,KAAK,EAAEH,GAAG;EAAET,UAAU,EAAE;AAAK,CAAC,CAAC,GAAGJ,MAAM,EAC/Ga,GACF,CAAC,CAAC;AACF,IAAII,YAAY,GAAIJ,GAAG,IAAKR,WAAW,CAACjB,SAAS,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE;EAAE4B,KAAK,EAAE;AAAK,CAAC,CAAC,EAAEH,GAAG,CAAC;;AAE1F;AACA,IAAIK,kBAAkB,GAAG,CAAC,CAAC;AAC3BnB,QAAQ,CAACmB,kBAAkB,EAAE;EAC3BC,OAAO,EAAEA,CAAA,KAAMC;AACjB,CAAC,CAAC;AACFC,MAAM,CAACC,OAAO,GAAGL,YAAY,CAACC,kBAAkB,CAAC;AACjD,IAAIK,eAAe,GAAGC,OAAO,CAAC,YAAY,CAAC;AAC3C,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC;AACtC,IAAIE,aAAa,GAAGd,OAAO,CAACY,OAAO,CAAC,eAAe,CAAC,CAAC;AACrD,IAAIJ,UAAU,GAAG,MAAM;EACrBO,WAAWA,CAACC,GAAG,EAAE;IACf,IAAI,CAACC,OAAO,GAAGD,GAAG,CAACC,OAAO;IAC1B,IAAI,CAACC,IAAI,GAAGF,GAAG,CAACE,IAAI;IACpB,IAAI,CAACF,GAAG,GAAGA,GAAG;EAChB;EACA;AACF;AACA;AACA;EACE,MAAMG,KAAKA,CAACC,mBAAmB,EAAEC,OAAO,EAAE;IACxC,IAAI;MACFV,eAAe,CAACW,QAAQ,CAACC,UAAU,CAAC,CAAC;MACrC,IAAI,CAACP,GAAG,CAACQ,eAAe,CAAC,CAAC;MAC1B,IAAI,CAACH,OAAO,CAACI,MAAM,EAAE;QACnB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,MAAMC,GAAG,GAAG,IAAId,UAAU,CAACe,GAAG,CAAC,IAAI,CAACX,OAAO,CAAC;MAC5C,MAAMY,GAAG,GAAG,MAAM,IAAI,CAACZ,OAAO,CAACa,OAAO,CAAC;QAAEC,OAAO,EAAE,GAAG;QAAEX;MAAoB,CAAC,CAAC;MAC7E,IAAI,CAACS,GAAG,IAAI,CAACA,GAAG,CAACG,WAAW,EAAE;QAC5B,MAAM,IAAIN,KAAK,CACb,2DACF,CAAC;MACH;MACA,MAAMC,GAAG,CAACM,aAAa,CAAC,IAAI,CAACjB,GAAG,CAACkB,aAAa,EAAEL,GAAG,CAACG,WAAW,EAAE,EAAE,CAAC;MACpE,MAAMG,QAAQ,GAAG,MAAOC,IAAI,IAAK;QAC/B,KAAK,MAAMC,WAAW,IAAID,IAAI,EAAE;UAC9B,MAAM,CAACE,KAAK,EAAEC,MAAM,CAAC,GAAGF,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC;UAC9C,MAAM,IAAI,CAACC,iBAAiB,CAACd,GAAG,EAAEW,KAAK,EAAEC,MAAM,CAAC;QAClD;MACF,CAAC;MACD,MAAMJ,QAAQ,CAACd,OAAO,CAAC;MACvB,MAAM;QAAEqB;MAAc,CAAC,GAAG,MAAM,IAAI,CAAC1B,GAAG,CAACE,IAAI,CAACyB,QAAQ,CAAC,CAAC;MACxD,MAAMC,EAAE,GAAG,MAAMjB,GAAG,CAACkB,QAAQ,CAACH,aAAa,EAAE,GAAG,CAAC;MACjD,OAAO5B,aAAa,CAACP,OAAO,CAACuC,OAAO,CAACF,EAAE,CAAC;IAC1C,CAAC,CAAC,OAAOG,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAChB,OAAOjC,aAAa,CAACP,OAAO,CAAC2C,IAAI,CAACH,CAAC,CAAC;IACtC;EACF;EACA;AACF;AACA;AACA;EACE,MAAMI,OAAOA,CAACC,QAAQ,EAAE;IACtB,IAAI;MACFzC,eAAe,CAACW,QAAQ,CAACC,UAAU,CAAC,CAAC;MACrC,IAAI,CAACP,GAAG,CAACQ,eAAe,CAAC,CAAC;MAC1B,IAAI,CAAC4B,QAAQ,EAAE;QACb,MAAM,IAAI1B,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACA,MAAMC,GAAG,GAAG,IAAId,UAAU,CAACe,GAAG,CAAC,IAAI,CAACX,OAAO,CAAC;MAC5C,MAAMU,GAAG,CAAC0B,eAAe,CAACD,QAAQ,CAAC;MACnC,IAAI,CAACzB,GAAG,CAAC2B,OAAO,IAAI,CAAC3B,GAAG,CAAC2B,OAAO,CAACC,UAAU,EAAE;QAC3C,MAAM,IAAI7B,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAM;QAAEgB;MAAc,CAAC,GAAG,MAAM,IAAI,CAACxB,IAAI,CAACyB,QAAQ,CAAC,CAAC;MACpD,MAAMC,EAAE,GAAG,MAAMjB,GAAG,CAACkB,QAAQ,CAACH,aAAa,EAAE,GAAG,CAAC;MACjD,OAAO5B,aAAa,CAACP,OAAO,CAACuC,OAAO,CAACF,EAAE,CAAC;IAC1C,CAAC,CAAC,OAAOG,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAChB,OAAOjC,aAAa,CAACP,OAAO,CAAC2C,IAAI,CAACH,CAAC,CAAC;IACtC;EACF;EACA;AACF;AACA;AACA;AACA;EACE,MAAMS,MAAMA,CAACpC,mBAAmB,EAAEC,OAAO,EAAE;IACzC,IAAI;MACFV,eAAe,CAACW,QAAQ,CAACC,UAAU,CAAC,CAAC;MACrC,IAAI,CAACP,GAAG,CAACQ,eAAe,CAAC,CAAC;MAC1B,MAAMG,GAAG,GAAG,IAAId,UAAU,CAACe,GAAG,CAAC,IAAI,CAACX,OAAO,CAAC;MAC5C,MAAMY,GAAG,GAAG,MAAM,IAAI,CAACZ,OAAO,CAACa,OAAO,CAAC;QAAEC,OAAO,EAAE,GAAG;QAAEX;MAAoB,CAAC,CAAC;MAC7E,IAAI,CAACS,GAAG,IAAI,CAACA,GAAG,CAACG,WAAW,EAAE;QAC5B,MAAM,IAAIN,KAAK,CACb,2DACF,CAAC;MACH;MACA,MAAMC,GAAG,CAAC8B,kBAAkB,CAAC,IAAI,CAACzC,GAAG,CAACkB,aAAa,EAAEL,GAAG,CAACG,WAAW,CAAC;MACrE,IAAI,CAACL,GAAG,CAAC2B,OAAO,IAAI,CAAC3B,GAAG,CAAC2B,OAAO,CAACC,UAAU,EAAE;QAC3C,MAAM,IAAI7B,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACA,IAAI,CAACL,OAAO,IAAI,CAACA,OAAO,CAACI,MAAM,EAAE;QAC/BE,GAAG,CAAC+B,iBAAiB,CAAC,CAAC;MACzB,CAAC,MAAM;QACL,MAAMC,YAAY,GAAG,IAAIC,KAAK,CAAC,CAAC;QAChC,MAAMzB,QAAQ,GAAG,MAAOC,IAAI,IAAK;UAC/B,KAAK,MAAMG,MAAM,IAAIH,IAAI,EAAE;YACzB,MAAMyB,MAAM,GAAG,MAAM,IAAI,CAAC5C,OAAO,CAACa,OAAO,CAAC;cACxCC,OAAO,EAAE,GAAG;cACZ+B,MAAM,EAAE,QAAQ;cAChBxB,KAAK,EAAEC,MAAM,CAACD,KAAK;cACnBC,MAAM,EAAEA,MAAM,CAACA;YACjB,CAAC,CAAC;YACF,IAAI,CAACsB,MAAM,CAACE,OAAO,EAAE;cACnB,MAAM,IAAIrC,KAAK,CAAC,sBAAsB,CAAC;YACzC;YACAiC,YAAY,CAACK,IAAI,CAACH,MAAM,CAACE,OAAO,CAAC;UACnC;QACF,CAAC;QACD,MAAM5B,QAAQ,CAACd,OAAO,CAAC;QACvBM,GAAG,CAACsC,cAAc,CAACN,YAAY,CAAC;MAClC;MACA,MAAM;QAAEjB;MAAc,CAAC,GAAG,MAAM,IAAI,CAACxB,IAAI,CAACyB,QAAQ,CAAC,CAAC;MACpD,MAAMC,EAAE,GAAG,MAAMjB,GAAG,CAACkB,QAAQ,CAACH,aAAa,EAAE,GAAG,CAAC;MACjD,OAAO5B,aAAa,CAACP,OAAO,CAACuC,OAAO,CAACF,EAAE,CAAC;IAC1C,CAAC,CAAC,OAAOG,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAChB,OAAOjC,aAAa,CAACP,OAAO,CAAC2C,IAAI,CAACH,CAAC,CAAC;IACtC;EACF;EACA,MAAMmB,WAAWA,CAAA,EAAG;IAClB,IAAI;MACF,MAAM9B,IAAI,GAAG,MAAM,IAAI,CAACnB,OAAO,CAACa,OAAO,CAAC;QAAEC,OAAO,EAAE;MAAI,CAAC,CAAC;MACzD,OAAOjB,aAAa,CAACP,OAAO,CAACuC,OAAO,CAACV,IAAI,CAAC;IAC5C,CAAC,CAAC,OAAOW,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAChB,OAAOjC,aAAa,CAACP,OAAO,CAAC2C,IAAI,CAACH,CAAC,CAAC;IACtC;EACF;EACA,MAAMoB,SAASA,CAAA,EAAG;IAChB,IAAI;MACF,MAAM/B,IAAI,GAAG,MAAM,IAAI,CAACnB,OAAO,CAACa,OAAO,CAAC;QAAEC,OAAO,EAAE;MAAI,CAAC,CAAC;MACzD,OAAOjB,aAAa,CAACP,OAAO,CAACuC,OAAO,CAACV,IAAI,CAAC;IAC5C,CAAC,CAAC,OAAOW,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAChB,OAAOjC,aAAa,CAACP,OAAO,CAAC2C,IAAI,CAACH,CAAC,CAAC;IACtC;EACF;EACA,MAAMqB,eAAeA,CAAChD,mBAAmB,EAAE;IACzC,IAAI;MACF,MAAMgB,IAAI,GAAG,MAAM,IAAI,CAACnB,OAAO,CAACa,OAAO,CAAC;QACtCC,OAAO,EAAE,GAAG;QACZX;MACF,CAAC,CAAC;MACF,OAAON,aAAa,CAACP,OAAO,CAACuC,OAAO,CAACV,IAAI,CAAC;IAC5C,CAAC,CAAC,OAAOW,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAChB,OAAOjC,aAAa,CAACP,OAAO,CAAC2C,IAAI,CAACH,CAAC,CAAC;IACtC;EACF;EACA,MAAMsB,iBAAiBA,CAACjD,mBAAmB,EAAE;IAC3C,IAAI;MACF,MAAMgB,IAAI,GAAG,MAAM,IAAI,CAACnB,OAAO,CAACa,OAAO,CAAC;QACtCC,OAAO,EAAE,GAAG;QACZX;MACF,CAAC,CAAC;MACF,OAAON,aAAa,CAACP,OAAO,CAACuC,OAAO,CAACV,IAAI,CAAC;IAC5C,CAAC,CAAC,OAAOW,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAChB,OAAOjC,aAAa,CAACP,OAAO,CAAC2C,IAAI,CAACH,CAAC,CAAC;IACtC;EACF;EACA,MAAMN,iBAAiBA,CAACd,GAAG,EAAEW,KAAK,EAAEC,MAAM,EAAE+B,KAAK,GAAG,CAAC,EAAEC,KAAK,GAAG,GAAG,EAAE;IAClE,MAAMV,MAAM,GAAG,MAAM,IAAI,CAAC5C,OAAO,CAACa,OAAO,CAAC;MACxCC,OAAO,EAAE,GAAG;MACZO,KAAK;MACLC;IACF,CAAC,CAAC;IACF,IAAI,CAACsB,MAAM,CAACE,OAAO,EAAE;MACnB,MAAM,IAAIrC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IACA,MAAM8C,cAAc,GAAG;MAAEC,OAAO,EAAEZ,MAAM,CAACE,OAAO;MAAEW,GAAG,EAAEJ,KAAK;MAAEK,GAAG,EAAEJ;IAAM,CAAC;IAC1E5C,GAAG,CAACiD,WAAW,CAACJ,cAAc,CAAC;EACjC;AACF,CAAC;AACD;AACA,CAAC,KAAK/D,MAAM,CAACC,OAAO,GAAG,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}