{"ast":null,"code":"import storage from \"@/components/storage\";\nexport default {\n  name: \"workBenchPage\",\n  components: {\n    storage\n  },\n  data() {\n    return {\n      fileList: [],\n      fileInfo: null,\n      loading: false,\n      balance: null\n    };\n  },\n  mounted() {\n    this.getList();\n  },\n  computed: {\n    usedNumber() {\n      return Math.round(this.balance * 0.76 * 100) / 100;\n    }\n  },\n  methods: {\n    async getList() {\n      this.loading = true;\n      this.percentage = 0;\n      // 获取当前上传列表\n      // await this.getAccount()\n      await this.getOrders(this.accountStr);\n      // 获取当前账号的tokenList\n      const tokenList = await this.getInfo();\n      // 当前账户上面的所有balance\n      const list = await this.getBalances(this.accountStr);\n      console.log('所有的balance=====》', list);\n      const totalStorage = await this.formatSymbol(tokenList, list);\n      // 拉取余额最多的一个symbol\n      list.sort((a, b) => {\n        return b.balance - a.balance;\n      });\n      this.selectedSymbol = list[0].symbol;\n      // 获取当前symbol的balance\n      this.balance = list[0].balance;\n      const usedNumber = this.getUsedStorage();\n      this.$refs['storage'].inOrigin(usedNumber, totalStorage);\n      await this.getMyStorageList();\n    },\n    uploadFile(fileList) {\n      this.fileInfo = fileList;\n    }\n  }\n};","map":{"version":3,"names":["storage","name","components","data","fileList","fileInfo","loading","balance","mounted","getList","computed","usedNumber","Math","round","methods","percentage","getOrders","accountStr","tokenList","getInfo","list","getBalances","console","log","totalStorage","formatSymbol","sort","a","b","selectedSymbol","symbol","getUsedStorage","$refs","inOrigin","getMyStorageList","uploadFile"],"sources":["src/pages/workBenchPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"work-bench-page__main\">\r\n    <div class=\"content-top\">\r\n      <div class=\"box-style left-storage\">\r\n        <storage ref=\"storage\" :loading=\"loading\" :usedNumber=\"usedNumber\"></storage>\r\n      </div>\r\n      <div class=\"box-style right-upload\">\r\n        <el-upload\r\n            class=\"upload-box\"\r\n            :file-list=\"fileList\"\r\n            :show-file-list=\"false\"\r\n            drag\r\n            action\r\n            :http-request=\"uploadFile\"\r\n            multiple>\r\n          <div class=\"upload-box-content\">\r\n            <i class=\"el-icon-upload upload-icon-i\" style=\"margin-right: 5px\"></i>\r\n            <p>\r\n              Drop file here, or<span style=\"color: #6447F2\">browse.</span>one file at a time.\r\n            </p>\r\n          </div>\r\n        </el-upload>\r\n      </div>\r\n    </div>\r\n    <div class=\"content-list\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport storage from \"@/components/storage\"\r\n\r\nexport default {\r\n  name: \"workBenchPage\",\r\n  components: {\r\n    storage\r\n  },\r\n  data() {\r\n    return {\r\n      fileList: [],\r\n      fileInfo: null,\r\n      loading: false,\r\n      balance: null,\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getList()\r\n  },\r\n  computed: {\r\n    usedNumber() {\r\n      return Math.round((this.balance * 0.76) * 100) / 100\r\n    }\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true\r\n      this.percentage = 0\r\n      // 获取当前上传列表\r\n      // await this.getAccount()\r\n      await this.getOrders(this.accountStr)\r\n      // 获取当前账号的tokenList\r\n      const tokenList = await this.getInfo()\r\n      // 当前账户上面的所有balance\r\n      const list = await this.getBalances(this.accountStr)\r\n      console.log('所有的balance=====》', list)\r\n      const totalStorage = await this.formatSymbol(tokenList, list)\r\n      // 拉取余额最多的一个symbol\r\n      list.sort((a, b) => { return b.balance-a.balance})\r\n      this.selectedSymbol = list[0].symbol\r\n      // 获取当前symbol的balance\r\n      this.balance = list[0].balance\r\n      const usedNumber = this.getUsedStorage()\r\n      this.$refs['storage'].inOrigin(usedNumber, totalStorage)\r\n      await this.getMyStorageList()\r\n\r\n    },\r\n    uploadFile(fileList) {\r\n      this.fileInfo = fileList\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.work-bench-page__main {\r\n  width: 1024px;\r\n  min-height: 90vh;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n\r\n  .content-top {\r\n    margin-top: 30px;\r\n    margin-bottom: 20px;\r\n    height: 300px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    .box-style {\r\n      height: 300px;\r\n      //border: 3px solid #222326;\r\n      border-radius: 20px;\r\n      background: #f5f5f5;\r\n    }\r\n\r\n    .left-storage {\r\n      width: 600px;\r\n\r\n    }\r\n\r\n    .right-upload {\r\n      width: 400px;\r\n    }\r\n\r\n    .upload-box-content {\r\n      height: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-wrap: wrap;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .upload-box {\r\n      width: 100%;\r\n      height: 100%;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .el-icon-upload {\r\n      font-size: 48px;\r\n      //line-height: 100px;\r\n    }\r\n    .upload-icon-i {\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  .content-list {\r\n    height: 300px;\r\n    border-radius: 20px;\r\n    background: #f5f5f5;\r\n  }\r\n\r\n  .el-upload, .el-upload-dragger {\r\n    width: 100%;\r\n    height: 100%;\r\n    //border: 3px solid #222326;\r\n  }\r\n\r\n  .el-upload-dragger {\r\n    border-radius: 20px;\r\n    border: 3px dashed #d9d9d9;\r\n  }\r\n\r\n  .el-upload-dragger .el-icon-upload {\r\n    margin: 0;\r\n  }\r\n}\r\n</style>"],"mappings":"AA6BA,OAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,QAAA;IACAC,WAAA;MACA,OAAAC,IAAA,CAAAC,KAAA,MAAAN,OAAA;IACA;EACA;EACAO,OAAA;IACA,MAAAL,QAAA;MACA,KAAAH,OAAA;MACA,KAAAS,UAAA;MACA;MACA;MACA,WAAAC,SAAA,MAAAC,UAAA;MACA;MACA,MAAAC,SAAA,cAAAC,OAAA;MACA;MACA,MAAAC,IAAA,cAAAC,WAAA,MAAAJ,UAAA;MACAK,OAAA,CAAAC,GAAA,qBAAAH,IAAA;MACA,MAAAI,YAAA,cAAAC,YAAA,CAAAP,SAAA,EAAAE,IAAA;MACA;MACAA,IAAA,CAAAM,IAAA,EAAAC,CAAA,EAAAC,CAAA;QAAA,OAAAA,CAAA,CAAArB,OAAA,GAAAoB,CAAA,CAAApB,OAAA;MAAA;MACA,KAAAsB,cAAA,GAAAT,IAAA,IAAAU,MAAA;MACA;MACA,KAAAvB,OAAA,GAAAa,IAAA,IAAAb,OAAA;MACA,MAAAI,UAAA,QAAAoB,cAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAtB,UAAA,EAAAa,YAAA;MACA,WAAAU,gBAAA;IAEA;IACAC,WAAA/B,QAAA;MACA,KAAAC,QAAA,GAAAD,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}