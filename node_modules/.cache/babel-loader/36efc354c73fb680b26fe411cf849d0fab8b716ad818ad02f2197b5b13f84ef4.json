{"ast":null,"code":"import Everpay from 'everpay';\nimport axios from 'axios';\nimport { redstoneUrl } from '@/utils/constant/apiConst';\nconst everpay = new Everpay();\nconst ajax = axios.create({\n  baseURL: redstoneUrl\n});\nexport default {\n  namespaced: true,\n  state: {\n    accountInfo: null,\n    symbol: null,\n    balance: null\n  },\n  getters: {\n    account(state) {\n      if (!state.accountInfo) {\n        return sessionStorage.getItem('ACCOUNT_STRING') || '';\n      }\n      if (state.accountInfo && state.accountInfo.length !== 0) {\n        sessionStorage.setItem('ACCOUNT_STRING', state.accountInfo);\n        return state.accountInfo;\n      }\n      return '';\n    }\n  },\n  mutations: {\n    METE_MASK_ACCOUNT(state, account) {\n      state.accountInfo = account;\n    },\n    SYMBOL_LIST_INFO(state, symbol) {\n      state.symbol = symbol;\n    },\n    GET_BALANCE(state, balance) {\n      state.balance = balance;\n    }\n  },\n  actions: {\n    async getNewMetaMaskAccount({\n      commit\n    }) {\n      const account = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      commit('METE_MASK_ACCOUNT', account[0]);\n      return account[0];\n    },\n    // eslint-disable-next-line no-empty-pattern\n    async getAccountBalances({}, accountId) {\n      return everpay.balances({\n        account: accountId\n      });\n    },\n    async getAccountInfo({\n      commit\n    }) {\n      const info = await everpay.info();\n      const symbols = info.tokenList;\n      commit('SYMBOL_LIST_INFO', symbols);\n      return symbols;\n    },\n    async updateSelectSymbol({\n      commit\n    }, symbol) {\n      const balance = await everpay.balance({\n        symbol: symbol,\n        account: window.ethereum.selectedAddress\n      });\n      commit('GET_BALANCE', balance);\n      return balance;\n    },\n    // eslint-disable-next-line no-empty-pattern\n    getAllSymbolPrice({}, symbolStr) {\n      return ajax.get(`/prices?provider=redstone&symbols=${symbolStr}`);\n    }\n  }\n};","map":{"version":3,"names":["Everpay","axios","redstoneUrl","everpay","ajax","create","baseURL","namespaced","state","accountInfo","symbol","balance","getters","account","sessionStorage","getItem","length","setItem","mutations","METE_MASK_ACCOUNT","SYMBOL_LIST_INFO","GET_BALANCE","actions","getNewMetaMaskAccount","commit","window","ethereum","request","method","getAccountBalances","accountId","balances","getAccountInfo","info","symbols","tokenList","updateSelectSymbol","selectedAddress","getAllSymbolPrice","symbolStr","get"],"sources":["E:/Amanda-project/vue2-project/project-vue2/src/store/account.js"],"sourcesContent":["import Everpay from 'everpay'\r\nimport axios from 'axios'\r\nimport {redstoneUrl} from '@/utils/constant/apiConst'\r\n\r\nconst everpay = new Everpay()\r\n\r\nconst ajax = axios.create({\r\n    baseURL: redstoneUrl\r\n})\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state: {\r\n        accountInfo: null,\r\n        symbol: null,\r\n        balance: null,\r\n    },\r\n    getters: {\r\n        account(state) {\r\n            if (!state.accountInfo) {\r\n                return sessionStorage.getItem('ACCOUNT_STRING') || ''\r\n            }\r\n            if(state.accountInfo && state.accountInfo.length !== 0) {\r\n                sessionStorage.setItem('ACCOUNT_STRING', state.accountInfo)\r\n                return state.accountInfo\r\n            }\r\n            return ''\r\n        },\r\n    },\r\n    mutations: {\r\n        METE_MASK_ACCOUNT(state, account) {\r\n            state.accountInfo = account\r\n        },\r\n        SYMBOL_LIST_INFO(state, symbol) {\r\n            state.symbol = symbol\r\n        },\r\n        GET_BALANCE(state, balance) {\r\n            state.balance = balance\r\n        },\r\n    },\r\n    actions: {\r\n        async getNewMetaMaskAccount({commit}) {\r\n            const account = await window.ethereum.request({method: 'eth_requestAccounts'})\r\n            commit('METE_MASK_ACCOUNT', account[0])\r\n            return account[0]\r\n        },\r\n        // eslint-disable-next-line no-empty-pattern\r\n        async getAccountBalances({}, accountId) {\r\n            return everpay.balances({account: accountId})\r\n        },\r\n        async getAccountInfo({commit}) {\r\n            const info = await everpay.info()\r\n            const symbols = info.tokenList\r\n            commit('SYMBOL_LIST_INFO', symbols)\r\n            return symbols\r\n        },\r\n        async updateSelectSymbol({commit}, symbol) {\r\n            const balance = await everpay.balance({\r\n                symbol: symbol,\r\n                account: window.ethereum.selectedAddress\r\n            })\r\n            commit('GET_BALANCE', balance)\r\n            return balance\r\n        },\r\n        // eslint-disable-next-line no-empty-pattern\r\n        getAllSymbolPrice({}, symbolStr) {\r\n            return ajax.get(`/prices?provider=redstone&symbols=${symbolStr}`)\r\n        },\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,2BAA2B;AAErD,MAAMC,OAAO,GAAG,IAAIH,OAAO,CAAC,CAAC;AAE7B,MAAMI,IAAI,GAAGH,KAAK,CAACI,MAAM,CAAC;EACtBC,OAAO,EAAEJ;AACb,CAAC,CAAC;AAEF,eAAe;EACXK,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACHC,WAAW,EAAE,IAAI;IACjBC,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE;EACb,CAAC;EACDC,OAAO,EAAE;IACLC,OAAOA,CAACL,KAAK,EAAE;MACX,IAAI,CAACA,KAAK,CAACC,WAAW,EAAE;QACpB,OAAOK,cAAc,CAACC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE;MACzD;MACA,IAAGP,KAAK,CAACC,WAAW,IAAID,KAAK,CAACC,WAAW,CAACO,MAAM,KAAK,CAAC,EAAE;QACpDF,cAAc,CAACG,OAAO,CAAC,gBAAgB,EAAET,KAAK,CAACC,WAAW,CAAC;QAC3D,OAAOD,KAAK,CAACC,WAAW;MAC5B;MACA,OAAO,EAAE;IACb;EACJ,CAAC;EACDS,SAAS,EAAE;IACPC,iBAAiBA,CAACX,KAAK,EAAEK,OAAO,EAAE;MAC9BL,KAAK,CAACC,WAAW,GAAGI,OAAO;IAC/B,CAAC;IACDO,gBAAgBA,CAACZ,KAAK,EAAEE,MAAM,EAAE;MAC5BF,KAAK,CAACE,MAAM,GAAGA,MAAM;IACzB,CAAC;IACDW,WAAWA,CAACb,KAAK,EAAEG,OAAO,EAAE;MACxBH,KAAK,CAACG,OAAO,GAAGA,OAAO;IAC3B;EACJ,CAAC;EACDW,OAAO,EAAE;IACL,MAAMC,qBAAqBA,CAAC;MAACC;IAAM,CAAC,EAAE;MAClC,MAAMX,OAAO,GAAG,MAAMY,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAACC,MAAM,EAAE;MAAqB,CAAC,CAAC;MAC9EJ,MAAM,CAAC,mBAAmB,EAAEX,OAAO,CAAC,CAAC,CAAC,CAAC;MACvC,OAAOA,OAAO,CAAC,CAAC,CAAC;IACrB,CAAC;IACD;IACA,MAAMgB,kBAAkBA,CAAC,CAAC,CAAC,EAAEC,SAAS,EAAE;MACpC,OAAO3B,OAAO,CAAC4B,QAAQ,CAAC;QAAClB,OAAO,EAAEiB;MAAS,CAAC,CAAC;IACjD,CAAC;IACD,MAAME,cAAcA,CAAC;MAACR;IAAM,CAAC,EAAE;MAC3B,MAAMS,IAAI,GAAG,MAAM9B,OAAO,CAAC8B,IAAI,CAAC,CAAC;MACjC,MAAMC,OAAO,GAAGD,IAAI,CAACE,SAAS;MAC9BX,MAAM,CAAC,kBAAkB,EAAEU,OAAO,CAAC;MACnC,OAAOA,OAAO;IAClB,CAAC;IACD,MAAME,kBAAkBA,CAAC;MAACZ;IAAM,CAAC,EAAEd,MAAM,EAAE;MACvC,MAAMC,OAAO,GAAG,MAAMR,OAAO,CAACQ,OAAO,CAAC;QAClCD,MAAM,EAAEA,MAAM;QACdG,OAAO,EAAEY,MAAM,CAACC,QAAQ,CAACW;MAC7B,CAAC,CAAC;MACFb,MAAM,CAAC,aAAa,EAAEb,OAAO,CAAC;MAC9B,OAAOA,OAAO;IAClB,CAAC;IACD;IACA2B,iBAAiBA,CAAC,CAAC,CAAC,EAAEC,SAAS,EAAE;MAC7B,OAAOnC,IAAI,CAACoC,GAAG,CAAE,qCAAoCD,SAAU,EAAC,CAAC;IACrE;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}