{"ast":null,"code":"export default {\n  name: \"chartShow\",\n  methods: {\n    inOrigin(usedNumber, totalNumber) {\n      this.usedNumber = usedNumber;\n      this.totalNumber = this.formatTotalNumber(totalNumber);\n      this.ARNumber = Math.round(totalNumber / 1024 / 0.76 * 100) / 100;\n      let myChart = this.$echarts.init(this.$refs.pie);\n      // 圆形饼状图\n      let option = {\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {},\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          boundaryGap: [0, 0.001]\n        },\n        yAxis: {\n          type: 'category',\n          data: ['USED', 'TOTAL']\n        },\n        series: [{\n          name: 'GB',\n          type: 'bar',\n          data: [134141, 681807]\n        }]\n      };\n      //图标自适应\n      let listener = function () {\n        myChart.resize();\n      };\n      window.addEventListener('resize', listener);\n      //图标自适应\n      myChart.setOption(option);\n    },\n    formatTotalNumber(number) {\n      const formatN = Math.round(number / 1024 * 100) / 100;\n      if (formatN > 1) {\n        return `${formatN} GB`;\n      } else {\n        return `${number} MB`;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","methods","inOrigin","usedNumber","totalNumber","formatTotalNumber","ARNumber","Math","round","myChart","$echarts","init","$refs","pie","option","tooltip","trigger","legend","grid","left","right","bottom","containLabel","xAxis","type","boundaryGap","yAxis","data","series","listener","resize","window","addEventListener","setOption","number","formatN"],"sources":["src/components/chartBanner.vue"],"sourcesContent":["<template>\r\n  <div class=\"charts-banner__main\">\r\n    <div class=\"storage-roseType\" style=\"width: 100%;height: 100%;z-index: 10\">\r\n      <div class=\"pie\" ref=\"pie\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"chartShow\",\r\n  methods: {\r\n    inOrigin (usedNumber, totalNumber) {\r\n      this.usedNumber = usedNumber\r\n      this.totalNumber = this.formatTotalNumber(totalNumber)\r\n      this.ARNumber = Math.round(((totalNumber / 1024) / 0.76) * 100) / 100\r\n      let myChart = this.$echarts.init(this.$refs.pie);\r\n      // 圆形饼状图\r\n      let option = {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {},\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          boundaryGap: [0, 0.001]\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: ['USED', 'TOTAL']\r\n        },\r\n        series: [\r\n          {\r\n            name: 'GB',\r\n            type: 'bar',\r\n            data: [134141, 681807]\r\n          }\r\n        ]\r\n      };\r\n      //图标自适应\r\n      let listener = function () {\r\n        myChart.resize()\r\n      }\r\n      window.addEventListener('resize', listener)\r\n      //图标自适应\r\n      myChart.setOption(option);\r\n    },\r\n    formatTotalNumber(number) {\r\n      const formatN = Math.round(number / 1024 * 100) / 100\r\n      if (formatN > 1) {\r\n        return `${formatN} GB`\r\n      } else {\r\n        return `${number} MB`\r\n      }\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.charts-banner__main {\r\n  width: 100%;\r\n  height: 300px;\r\n  background: #f5f5f5;\r\n  border-radius: 20px;\r\n}\r\n</style>"],"mappings":"AASA;EACAA,IAAA;EACAC,OAAA;IACAC,SAAAC,UAAA,EAAAC,WAAA;MACA,KAAAD,UAAA,GAAAA,UAAA;MACA,KAAAC,WAAA,QAAAC,iBAAA,CAAAD,WAAA;MACA,KAAAE,QAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAJ,WAAA;MACA,IAAAK,OAAA,QAAAC,QAAA,CAAAC,IAAA,MAAAC,KAAA,CAAAC,GAAA;MACA;MACA,IAAAC,MAAA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,MAAA;QACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACAC,WAAA;QACA;QACAC,KAAA;UACAF,IAAA;UACAG,IAAA;QACA;QACAC,MAAA,GACA;UACA5B,IAAA;UACAwB,IAAA;UACAG,IAAA;QACA;MAEA;MACA;MACA,IAAAE,QAAA,YAAAA,CAAA;QACApB,OAAA,CAAAqB,MAAA;MACA;MACAC,MAAA,CAAAC,gBAAA,WAAAH,QAAA;MACA;MACApB,OAAA,CAAAwB,SAAA,CAAAnB,MAAA;IACA;IACAT,kBAAA6B,MAAA;MACA,MAAAC,OAAA,GAAA5B,IAAA,CAAAC,KAAA,CAAA0B,MAAA;MACA,IAAAC,OAAA;QACA,UAAAA,OAAA;MACA;QACA,UAAAD,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}