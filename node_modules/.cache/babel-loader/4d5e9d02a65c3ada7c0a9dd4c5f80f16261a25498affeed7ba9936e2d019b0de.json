{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// import AlgorandConfig from \"./algorand\";\nconst ethereum_1 = __importDefault(require(\"./ethereum\"));\nconst near_1 = __importDefault(require(\"./near\"));\nconst solana_1 = __importDefault(require(\"./solana\"));\nconst erc20_1 = __importDefault(require(\"./erc20\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst utils_1 = __importDefault(require(\"../../common/utils\"));\nfunction getCurrency(currency, wallet, providerUrl, contractAddress) {\n  switch (currency) {\n    case \"ethereum\":\n      return new ethereum_1.default({\n        name: \"ethereum\",\n        ticker: \"ETH\",\n        providerUrl: providerUrl !== null && providerUrl !== void 0 ? providerUrl : \"https://main-light.eth.linkpool.io/\",\n        wallet\n      });\n    case \"matic\":\n      return new ethereum_1.default({\n        name: \"matic\",\n        ticker: \"MATIC\",\n        providerUrl: providerUrl !== null && providerUrl !== void 0 ? providerUrl : \"https://polygon-rpc.com\",\n        wallet,\n        minConfirm: 3\n      });\n    case \"arbitrum\":\n      return new ethereum_1.default({\n        name: \"arbitrum\",\n        ticker: \"ETH\",\n        providerUrl: providerUrl !== null && providerUrl !== void 0 ? providerUrl : \"https://arb1.arbitrum.io/rpc\",\n        wallet\n      });\n    case \"bnb\":\n      return new ethereum_1.default({\n        name: \"bnb\",\n        ticker: \"BNB\",\n        providerUrl: providerUrl !== null && providerUrl !== void 0 ? providerUrl : \"https://bsc-dataseed.binance.org\",\n        wallet\n      });\n    case \"avalanche\":\n      return new ethereum_1.default({\n        name: \"avalanche\",\n        ticker: \"AVAX\",\n        providerUrl: providerUrl !== null && providerUrl !== void 0 ? providerUrl : \"https://api.avax.network/ext/bc/C/rpc\",\n        wallet\n      });\n    case \"boba-eth\":\n      return new ethereum_1.default({\n        name: \"boba-eth\",\n        ticker: \"ETH\",\n        providerUrl: providerUrl !== null && providerUrl !== void 0 ? providerUrl : \"https://mainnet.boba.network/\",\n        minConfirm: 1,\n        wallet\n      });\n    case \"boba\":\n      {\n        const k = new erc20_1.default({\n          name: \"boba\",\n          ticker: \"BOBA\",\n          providerUrl: providerUrl !== null && providerUrl !== void 0 ? providerUrl : \"https://mainnet.boba.network/\",\n          contractAddress: contractAddress !== null && contractAddress !== void 0 ? contractAddress : \"0xa18bF3994C0Cc6E3b63ac420308E5383f53120D7\",\n          minConfirm: 1,\n          wallet\n        });\n        // for L1 mainnet: \"https://main-light.eth.linkpool.io/\" and \"0x42bbfa2e77757c645eeaad1655e0911a7553efbc\"\n        k.price = async () => {\n          var _a;\n          const res = await axios_1.default.post(\"https://api.livecoinwatch.com/coins/single\", JSON.stringify({\n            \"currency\": \"USD\",\n            \"code\": `${k.ticker}`\n          }), {\n            headers: {\n              \"x-api-key\": \"75a7a824-6577-45e6-ad86-511d590c7cc8\",\n              \"content-type\": \"application/json\"\n            }\n          });\n          await utils_1.default.checkAndThrow(res, \"Getting price data\");\n          if (!((_a = res === null || res === void 0 ? void 0 : res.data) === null || _a === void 0 ? void 0 : _a.rate)) {\n            throw new Error(`unable to get price for ${k.name}`);\n          }\n          return +res.data.rate;\n        };\n        return k;\n      }\n    case \"solana\":\n      return new solana_1.default({\n        name: \"solana\",\n        ticker: \"SOL\",\n        providerUrl: providerUrl !== null && providerUrl !== void 0 ? providerUrl : \"https://api.mainnet-beta.solana.com/\",\n        wallet\n      });\n    // case \"algorand\":\n    //     return new AlgorandConfig({ name: \"algorand\", ticker: \"ALGO\", providerUrl: providerUrl ?? \"https://api.mainnet-beta.solana.com/\", wallet })\n    case \"near\":\n      return new near_1.default({\n        name: \"near\",\n        ticker: \"NEAR\",\n        providerUrl: providerUrl !== null && providerUrl !== void 0 ? providerUrl : \"https://rpc.mainnet.near.org\",\n        wallet\n      });\n    default:\n      throw new Error(`Unknown/Unsupported currency ${currency}`);\n  }\n}\nexports.default = getCurrency;","map":{"version":3,"names":["ethereum_1","__importDefault","require","near_1","solana_1","erc20_1","axios_1","utils_1","getCurrency","currency","wallet","providerUrl","contractAddress","default","name","ticker","minConfirm","k","price","res","post","JSON","stringify","headers","checkAndThrow","_a","data","rate","Error","exports"],"sources":["../../../src/web/currencies/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}