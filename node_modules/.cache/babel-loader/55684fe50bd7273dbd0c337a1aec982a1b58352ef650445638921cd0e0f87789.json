{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst ArweaveUtils = require(\"../utils\");\nclass WebCryptoDriver {\n  constructor() {\n    this.keyLength = 4096;\n    this.publicExponent = 0x10001;\n    this.hashAlgorithm = \"sha256\";\n    if (!this.detectWebCrypto()) {\n      throw new Error(\"SubtleCrypto not available!\");\n    }\n    this.driver = crypto.subtle;\n  }\n  async generateJWK() {\n    let cryptoKey = await this.driver.generateKey({\n      name: \"RSA-PSS\",\n      modulusLength: 4096,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: {\n        name: \"SHA-256\"\n      }\n    }, true, [\"sign\"]);\n    let jwk = await this.driver.exportKey(\"jwk\", cryptoKey.privateKey);\n    return {\n      kty: jwk.kty,\n      e: jwk.e,\n      n: jwk.n,\n      d: jwk.d,\n      p: jwk.p,\n      q: jwk.q,\n      dp: jwk.dp,\n      dq: jwk.dq,\n      qi: jwk.qi\n    };\n  }\n  async sign(jwk, data, {\n    saltLength\n  } = {}) {\n    let signature = await this.driver.sign({\n      name: \"RSA-PSS\",\n      saltLength: 32\n    }, await this.jwkToCryptoKey(jwk), data);\n    return new Uint8Array(signature);\n  }\n  async hash(data, algorithm = \"SHA-256\") {\n    let digest = await this.driver.digest(algorithm, data);\n    return new Uint8Array(digest);\n  }\n  async verify(publicModulus, data, signature) {\n    const publicKey = {\n      kty: \"RSA\",\n      e: \"AQAB\",\n      n: publicModulus\n    };\n    const key = await this.jwkToPublicCryptoKey(publicKey);\n    const digest = await this.driver.digest(\"SHA-256\", data);\n    const salt0 = await this.driver.verify({\n      name: \"RSA-PSS\",\n      saltLength: 0\n    }, key, signature, data);\n    const salt32 = await this.driver.verify({\n      name: \"RSA-PSS\",\n      saltLength: 32\n    }, key, signature, data);\n    // saltN's salt-length is derived from a formula described here\n    // https://developer.mozilla.org/en-US/docs/Web/API/RsaPssParams\n    const saltN = await this.driver.verify({\n      name: \"RSA-PSS\",\n      saltLength: Math.ceil((key.algorithm.modulusLength - 1) / 8) - digest.byteLength - 2\n    }, key, signature, data);\n    return salt0 || salt32 || saltN;\n  }\n  async jwkToCryptoKey(jwk) {\n    return this.driver.importKey(\"jwk\", jwk, {\n      name: \"RSA-PSS\",\n      hash: {\n        name: \"SHA-256\"\n      }\n    }, false, [\"sign\"]);\n  }\n  async jwkToPublicCryptoKey(publicJwk) {\n    return this.driver.importKey(\"jwk\", publicJwk, {\n      name: \"RSA-PSS\",\n      hash: {\n        name: \"SHA-256\"\n      }\n    }, false, [\"verify\"]);\n  }\n  detectWebCrypto() {\n    if (typeof crypto === \"undefined\") {\n      return false;\n    }\n    const subtle = crypto === null || crypto === void 0 ? void 0 : crypto.subtle;\n    if (subtle === undefined) {\n      return false;\n    }\n    const names = [\"generateKey\", \"importKey\", \"exportKey\", \"digest\", \"sign\"];\n    return names.every(name => typeof subtle[name] === \"function\");\n  }\n  async encrypt(data, key, salt) {\n    const initialKey = await this.driver.importKey(\"raw\", typeof key == \"string\" ? ArweaveUtils.stringToBuffer(key) : key, {\n      name: \"PBKDF2\",\n      length: 32\n    }, false, [\"deriveKey\"]);\n    // const salt = ArweaveUtils.stringToBuffer(\"salt\");\n    // create a random string for deriving the key\n    // const salt = this.driver.randomBytes(16).toString('hex');\n    const derivedkey = await this.driver.deriveKey({\n      name: \"PBKDF2\",\n      salt: salt ? ArweaveUtils.stringToBuffer(salt) : ArweaveUtils.stringToBuffer(\"salt\"),\n      iterations: 100000,\n      hash: \"SHA-256\"\n    }, initialKey, {\n      name: \"AES-CBC\",\n      length: 256\n    }, false, [\"encrypt\", \"decrypt\"]);\n    const iv = new Uint8Array(16);\n    crypto.getRandomValues(iv);\n    const encryptedData = await this.driver.encrypt({\n      name: \"AES-CBC\",\n      iv: iv\n    }, derivedkey, data);\n    return ArweaveUtils.concatBuffers([iv, encryptedData]);\n  }\n  async decrypt(encrypted, key, salt) {\n    const initialKey = await this.driver.importKey(\"raw\", typeof key == \"string\" ? ArweaveUtils.stringToBuffer(key) : key, {\n      name: \"PBKDF2\",\n      length: 32\n    }, false, [\"deriveKey\"]);\n    // const salt = ArweaveUtils.stringToBuffer(\"pepper\");\n    const derivedkey = await this.driver.deriveKey({\n      name: \"PBKDF2\",\n      salt: salt ? ArweaveUtils.stringToBuffer(salt) : ArweaveUtils.stringToBuffer(\"salt\"),\n      iterations: 100000,\n      hash: \"SHA-256\"\n    }, initialKey, {\n      name: \"AES-CBC\",\n      length: 256\n    }, false, [\"encrypt\", \"decrypt\"]);\n    const iv = encrypted.slice(0, 16);\n    const data = await this.driver.decrypt({\n      name: \"AES-CBC\",\n      iv: iv\n    }, derivedkey, encrypted.slice(16));\n    // We're just using concat to convert from an array buffer to uint8array\n    return ArweaveUtils.concatBuffers([data]);\n  }\n}\nexports.default = WebCryptoDriver;","map":{"version":3,"names":["ArweaveUtils","require","WebCryptoDriver","constructor","keyLength","publicExponent","hashAlgorithm","detectWebCrypto","Error","driver","crypto","subtle","generateJWK","cryptoKey","generateKey","name","modulusLength","Uint8Array","hash","jwk","exportKey","privateKey","kty","e","n","d","p","q","dp","dq","qi","sign","data","saltLength","signature","jwkToCryptoKey","algorithm","digest","verify","publicModulus","publicKey","key","jwkToPublicCryptoKey","salt0","salt32","saltN","Math","ceil","byteLength","importKey","publicJwk","undefined","names","every","encrypt","salt","initialKey","stringToBuffer","length","derivedkey","deriveKey","iterations","iv","getRandomValues","encryptedData","concatBuffers","decrypt","encrypted","slice","exports","default"],"sources":["../../../../../src/common/lib/crypto/webcrypto-driver.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}