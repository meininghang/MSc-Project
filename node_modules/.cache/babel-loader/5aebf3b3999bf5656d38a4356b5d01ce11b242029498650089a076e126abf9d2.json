{"ast":null,"code":"/* jshint browserify: true */\n\n'use strict';\n\n/**\n * Optional entry point for browser builds.\n *\n * To use it: `require('avsc/etc/browser/avsc-services')`.\n */\nvar avroTypes = require('./avsc-types'),\n  services = require('../../lib/services'),\n  specs = require('../../lib/specs'),\n  utils = require('../../lib/utils');\n\n/** Slightly enhanced parsing, supporting IDL declarations. */\nfunction parse(any, opts) {\n  var schemaOrProtocol = specs.read(any);\n  return schemaOrProtocol.protocol ? services.Service.forProtocol(schemaOrProtocol, opts) : avroTypes.Type.forSchema(schemaOrProtocol, opts);\n}\nmodule.exports = {\n  Service: services.Service,\n  assembleProtocol: specs.assembleProtocol,\n  discoverProtocol: services.discoverProtocol,\n  parse: parse,\n  readProtocol: specs.readProtocol,\n  readSchema: specs.readSchema\n};\nutils.copyOwnProperties(avroTypes, module.exports);","map":{"version":3,"names":["avroTypes","require","services","specs","utils","parse","any","opts","schemaOrProtocol","read","protocol","Service","forProtocol","Type","forSchema","module","exports","assembleProtocol","discoverProtocol","readProtocol","readSchema","copyOwnProperties"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/avsc/etc/browser/avsc-services.js"],"sourcesContent":["/* jshint browserify: true */\n\n'use strict';\n\n/**\n * Optional entry point for browser builds.\n *\n * To use it: `require('avsc/etc/browser/avsc-services')`.\n */\n\nvar avroTypes = require('./avsc-types'),\n    services = require('../../lib/services'),\n    specs = require('../../lib/specs'),\n    utils = require('../../lib/utils');\n\n\n/** Slightly enhanced parsing, supporting IDL declarations. */\nfunction parse(any, opts) {\n  var schemaOrProtocol = specs.read(any);\n  return schemaOrProtocol.protocol ?\n    services.Service.forProtocol(schemaOrProtocol, opts) :\n    avroTypes.Type.forSchema(schemaOrProtocol, opts);\n}\n\n\nmodule.exports = {\n  Service: services.Service,\n  assembleProtocol: specs.assembleProtocol,\n  discoverProtocol: services.discoverProtocol,\n  parse: parse,\n  readProtocol: specs.readProtocol,\n  readSchema: specs.readSchema,\n};\n\nutils.copyOwnProperties(avroTypes, module.exports);\n"],"mappings":"AAAA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAc,CAAC;EACnCC,QAAQ,GAAGD,OAAO,CAAC,oBAAoB,CAAC;EACxCE,KAAK,GAAGF,OAAO,CAAC,iBAAiB,CAAC;EAClCG,KAAK,GAAGH,OAAO,CAAC,iBAAiB,CAAC;;AAGtC;AACA,SAASI,KAAKA,CAACC,GAAG,EAAEC,IAAI,EAAE;EACxB,IAAIC,gBAAgB,GAAGL,KAAK,CAACM,IAAI,CAACH,GAAG,CAAC;EACtC,OAAOE,gBAAgB,CAACE,QAAQ,GAC9BR,QAAQ,CAACS,OAAO,CAACC,WAAW,CAACJ,gBAAgB,EAAED,IAAI,CAAC,GACpDP,SAAS,CAACa,IAAI,CAACC,SAAS,CAACN,gBAAgB,EAAED,IAAI,CAAC;AACpD;AAGAQ,MAAM,CAACC,OAAO,GAAG;EACfL,OAAO,EAAET,QAAQ,CAACS,OAAO;EACzBM,gBAAgB,EAAEd,KAAK,CAACc,gBAAgB;EACxCC,gBAAgB,EAAEhB,QAAQ,CAACgB,gBAAgB;EAC3Cb,KAAK,EAAEA,KAAK;EACZc,YAAY,EAAEhB,KAAK,CAACgB,YAAY;EAChCC,UAAU,EAAEjB,KAAK,CAACiB;AACpB,CAAC;AAEDhB,KAAK,CAACiB,iBAAiB,CAACrB,SAAS,EAAEe,MAAM,CAACC,OAAO,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}