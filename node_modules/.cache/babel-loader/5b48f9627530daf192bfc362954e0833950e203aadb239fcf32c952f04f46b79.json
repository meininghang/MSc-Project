{"ast":null,"code":"'use strict';\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @params validators: current or next epoch validators.\n * @params maxNumberOfSeats: maximum number of seats in the network.\n * @params minimumStakeRatio: minimum stake ratio\n * @params protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n  if (protocolVersion && protocolVersion < 49) {\n    return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n  }\n  if (!minimumStakeRatio) {\n    const deprecate = depd_1.default('findSeatPrice(validators, maxNumberOfSeats)');\n    deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n    minimumStakeRatio = [1, 6250]; // harcoded minimumStakeRation from 12/7/21\n  }\n\n  return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n  const stakes = validators.map(v => new bn_js_1.default(v.stake, 10)).sort((a, b) => a.cmp(b));\n  const num = new bn_js_1.default(numSeats);\n  const stakesSum = stakes.reduce((a, b) => a.add(b));\n  if (stakesSum.lt(num)) {\n    throw new Error('Stakes are below seats');\n  }\n  // assert stakesSum >= numSeats\n  let left = new bn_js_1.default(1),\n    right = stakesSum.add(new bn_js_1.default(1));\n  while (!left.eq(right.sub(new bn_js_1.default(1)))) {\n    const mid = left.add(right).div(new bn_js_1.default(2));\n    let found = false;\n    let currentSum = new bn_js_1.default(0);\n    for (let i = 0; i < stakes.length; ++i) {\n      currentSum = currentSum.add(stakes[i].div(mid));\n      if (currentSum.gte(num)) {\n        left = mid;\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      right = mid;\n    }\n  }\n  return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n  if (minimumStakeRatio.length != 2) {\n    throw Error('minimumStakeRatio should have 2 elements');\n  }\n  const stakes = validators.map(v => new bn_js_1.default(v.stake, 10)).sort((a, b) => a.cmp(b));\n  const stakesSum = stakes.reduce((a, b) => a.add(b));\n  if (validators.length < maxNumberOfSeats) {\n    return stakesSum.mul(new bn_js_1.default(minimumStakeRatio[0])).div(new bn_js_1.default(minimumStakeRatio[1]));\n  } else {\n    return stakes[0].add(new bn_js_1.default(1));\n  }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @params currentValidators: list of current validators.\n * @params nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n  const validatorsMap = new Map();\n  currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n  const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n  return {\n    newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n    removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n    changedValidators: nextValidators.filter(v => validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake).map(v => ({\n      current: validatorsMap.get(v.account_id),\n      next: v\n    }))\n  };\n}\nexports.diffEpochValidators = diffEpochValidators;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","diffEpochValidators","findSeatPrice","bn_js_1","require","depd_1","validators","maxNumberOfSeats","minimumStakeRatio","protocolVersion","findSeatPriceForProtocolBefore49","deprecate","default","findSeatPriceForProtocolAfter49","numSeats","stakes","map","v","stake","sort","a","b","cmp","num","stakesSum","reduce","add","lt","Error","left","right","eq","sub","mid","div","found","currentSum","i","length","gte","mul","currentValidators","nextValidators","validatorsMap","Map","forEach","set","account_id","nextValidatorsSet","Set","newValidators","filter","has","removedValidators","changedValidators","get","current","next"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/near-api-js/lib/validators.js"],"sourcesContent":["'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @params validators: current or next epoch validators.\n * @params maxNumberOfSeats: maximum number of seats in the network.\n * @params minimumStakeRatio: minimum stake ratio\n * @params protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = depd_1.default('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // harcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => new bn_js_1.default(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const num = new bn_js_1.default(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (stakesSum.lt(num)) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = new bn_js_1.default(1), right = stakesSum.add(new bn_js_1.default(1));\n    while (!left.eq(right.sub(new bn_js_1.default(1)))) {\n        const mid = left.add(right).div(new bn_js_1.default(2));\n        let found = false;\n        let currentSum = new bn_js_1.default(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum.add(stakes[i].div(mid));\n            if (currentSum.gte(num)) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => new bn_js_1.default(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum.mul(new bn_js_1.default(minimumStakeRatio[0])).div(new bn_js_1.default(minimumStakeRatio[1]));\n    }\n    else {\n        return stakes[0].add(new bn_js_1.default(1));\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @params currentValidators: list of current validators.\n * @params nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}