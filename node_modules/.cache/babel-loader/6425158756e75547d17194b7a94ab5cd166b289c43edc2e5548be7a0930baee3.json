{"ast":null,"code":"/* jshint browser: true, node: true */\n\n'use strict';\n\n/**\n * Main browserify entry point.\n *\n * This version of the entry point adds a couple browser-specific utilities to\n * read and write blobs.\n */\nrequire(\"core-js/modules/es.array.push.js\");\nvar avroServices = require('./avsc-services'),\n  containers = require('../../lib/containers'),\n  utils = require('../../lib/utils'),\n  stream = require('stream'),\n  util = require('util');\n\n/** Transform stream which lazily reads a blob's contents. */\nfunction BlobReader(blob, opts) {\n  stream.Readable.call(this);\n  opts = opts || {};\n  this._batchSize = opts.batchSize || 65536;\n  this._blob = blob;\n  this._pos = 0;\n}\nutil.inherits(BlobReader, stream.Readable);\nBlobReader.prototype._read = function () {\n  var pos = this._pos;\n  if (pos >= this._blob.size) {\n    this.push(null);\n    return;\n  }\n  this._pos += this._batchSize;\n  var blob = this._blob.slice(pos, this._pos, this._blob.type);\n  var reader = new FileReader();\n  var self = this;\n  reader.addEventListener('loadend', function cb(evt) {\n    reader.removeEventListener('loadend', cb, false);\n    if (evt.error) {\n      self.emit('error', evt.error);\n    } else {\n      self.push(utils.bufferFrom(reader.result));\n    }\n  }, false);\n  reader.readAsArrayBuffer(blob);\n};\n\n/** Transform stream which builds a blob from all data written to it. */\nfunction BlobWriter() {\n  stream.Transform.call(this, {\n    readableObjectMode: true\n  });\n  this._bufs = [];\n}\nutil.inherits(BlobWriter, stream.Transform);\nBlobWriter.prototype._transform = function (buf, encoding, cb) {\n  this._bufs.push(buf);\n  cb();\n};\nBlobWriter.prototype._flush = function (cb) {\n  this.push(new Blob(this._bufs, {\n    type: 'application/octet-binary'\n  }));\n  cb();\n};\n\n/** Read an Avro-container stored as a blob. */\nfunction createBlobDecoder(blob, opts) {\n  return new BlobReader(blob).pipe(new containers.streams.BlockDecoder(opts));\n}\n\n/**\n * Store Avro values into an Avro-container blob.\n *\n * The returned stream will emit a single value, the blob, when ended.\n */\nfunction createBlobEncoder(schema, opts) {\n  var encoder = new containers.streams.BlockEncoder(schema, opts);\n  var builder = new BlobWriter();\n  encoder.pipe(builder);\n  return new stream.Duplex({\n    objectMode: true,\n    read: function () {\n      // Not the fastest implementation, but it will only be called at most\n      // once (since the builder only ever emits a single value) so it'll do.\n      // It's also likely impractical to create very large blobs.\n      var val = builder.read();\n      if (val) {\n        done(val);\n      } else {\n        builder.once('readable', done);\n      }\n      var self = this;\n      function done(val) {\n        self.push(val || builder.read());\n        self.push(null);\n      }\n    },\n    write: function (val, encoding, cb) {\n      return encoder.write(val, encoding, cb);\n    }\n  }).on('finish', function () {\n    encoder.end();\n  });\n}\nmodule.exports = {\n  createBlobDecoder: createBlobDecoder,\n  createBlobEncoder: createBlobEncoder,\n  streams: containers.streams\n};\nutils.copyOwnProperties(avroServices, module.exports);","map":{"version":3,"names":["require","avroServices","containers","utils","stream","util","BlobReader","blob","opts","Readable","call","_batchSize","batchSize","_blob","_pos","inherits","prototype","_read","pos","size","push","slice","type","reader","FileReader","self","addEventListener","cb","evt","removeEventListener","error","emit","bufferFrom","result","readAsArrayBuffer","BlobWriter","Transform","readableObjectMode","_bufs","_transform","buf","encoding","_flush","Blob","createBlobDecoder","pipe","streams","BlockDecoder","createBlobEncoder","schema","encoder","BlockEncoder","builder","Duplex","objectMode","read","val","done","once","write","on","end","module","exports","copyOwnProperties"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/avsc/etc/browser/avsc.js"],"sourcesContent":["/* jshint browser: true, node: true */\n\n'use strict';\n\n/**\n * Main browserify entry point.\n *\n * This version of the entry point adds a couple browser-specific utilities to\n * read and write blobs.\n */\n\nvar avroServices = require('./avsc-services'),\n    containers = require('../../lib/containers'),\n    utils = require('../../lib/utils'),\n    stream = require('stream'),\n    util = require('util');\n\n\n/** Transform stream which lazily reads a blob's contents. */\nfunction BlobReader(blob, opts) {\n  stream.Readable.call(this);\n  opts = opts || {};\n\n  this._batchSize = opts.batchSize || 65536;\n  this._blob = blob;\n  this._pos = 0;\n}\nutil.inherits(BlobReader, stream.Readable);\n\nBlobReader.prototype._read = function () {\n  var pos = this._pos;\n  if (pos >= this._blob.size) {\n    this.push(null);\n    return;\n  }\n\n  this._pos += this._batchSize;\n  var blob = this._blob.slice(pos, this._pos, this._blob.type);\n  var reader = new FileReader();\n  var self = this;\n  reader.addEventListener('loadend', function cb(evt) {\n    reader.removeEventListener('loadend', cb, false);\n    if (evt.error) {\n      self.emit('error', evt.error);\n    } else {\n      self.push(utils.bufferFrom(reader.result));\n    }\n  }, false);\n  reader.readAsArrayBuffer(blob);\n};\n\n/** Transform stream which builds a blob from all data written to it. */\nfunction BlobWriter() {\n  stream.Transform.call(this, {readableObjectMode: true});\n  this._bufs = [];\n}\nutil.inherits(BlobWriter, stream.Transform);\n\nBlobWriter.prototype._transform = function (buf, encoding, cb) {\n  this._bufs.push(buf);\n  cb();\n};\n\nBlobWriter.prototype._flush = function (cb) {\n  this.push(new Blob(this._bufs, {type: 'application/octet-binary'}));\n  cb();\n};\n\n/** Read an Avro-container stored as a blob. */\nfunction createBlobDecoder(blob, opts) {\n  return new BlobReader(blob).pipe(new containers.streams.BlockDecoder(opts));\n}\n\n/**\n * Store Avro values into an Avro-container blob.\n *\n * The returned stream will emit a single value, the blob, when ended.\n */\nfunction createBlobEncoder(schema, opts) {\n  var encoder = new containers.streams.BlockEncoder(schema, opts);\n  var builder = new BlobWriter();\n  encoder.pipe(builder);\n  return new stream.Duplex({\n    objectMode: true,\n    read: function () {\n      // Not the fastest implementation, but it will only be called at most\n      // once (since the builder only ever emits a single value) so it'll do.\n      // It's also likely impractical to create very large blobs.\n      var val = builder.read();\n      if (val) {\n        done(val);\n      } else {\n        builder.once('readable', done);\n      }\n      var self = this;\n      function done(val) {\n        self.push(val || builder.read());\n        self.push(null);\n      }\n    },\n    write: function (val, encoding, cb) {\n      return encoder.write(val, encoding, cb);\n    }\n  }).on('finish', function () { encoder.end(); });\n}\n\n\nmodule.exports = {\n  createBlobDecoder: createBlobDecoder,\n  createBlobEncoder: createBlobEncoder,\n  streams: containers.streams\n};\n\nutils.copyOwnProperties(avroServices, module.exports);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}