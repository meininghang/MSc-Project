{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newEverpayByRSA = exports.newEverpayByEcc = exports.payOrders = exports.payOrder = void 0;\nconst everpay_1 = __importDefault(require(\"everpay\"));\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst ethers_1 = require(\"ethers\");\nasync function payOrder(everpay, order) {\n  const ords = [];\n  ords.push(order);\n  return await payOrders(everpay, ords);\n}\nexports.payOrder = payOrder;\nasync function payOrders(everpay, orders) {\n  if (orders.length === 0) {\n    return 'No Order Need to Pay';\n  }\n  const to = orders[0].bundler;\n  const currency = orders[0].currency;\n  const decimals = orders[0].decimals;\n  const ids = [];\n  let fee = new bignumber_js_1.default(0);\n  for (const ord of orders) {\n    ids.push(ord.itemId);\n    fee = fee.plus(ord.fee);\n  }\n  const result = await everpay.transfer({\n    amount: fee.dividedBy(new bignumber_js_1.default(10).pow(decimals.toString())).toString(),\n    symbol: currency,\n    to: to,\n    data: {\n      appName: 'arseeding',\n      action: 'payment',\n      itemIds: ids\n    }\n  });\n  return result.everHash;\n}\nexports.payOrders = payOrders;\nfunction newEverpayByEcc(eccPrivateKey) {\n  const provider = new ethers_1.ethers.providers.InfuraProvider('mainnet');\n  const signer = new ethers_1.ethers.Wallet(eccPrivateKey, provider);\n  const pay = new everpay_1.default({\n    account: signer.address,\n    chainType: 'ethereum',\n    ethConnectedSigner: signer\n  });\n  return pay;\n}\nexports.newEverpayByEcc = newEverpayByEcc;\nfunction newEverpayByRSA(arJWK, arAddress) {\n  const everpay = new everpay_1.default({\n    account: arAddress,\n    chainType: 'arweave',\n    arJWK: arJWK\n  });\n  return everpay;\n}\nexports.newEverpayByRSA = newEverpayByRSA;","map":{"version":3,"names":["require","__importDefault","mod","__esModule","Object","defineProperty","exports","value","newEverpayByRSA","newEverpayByEcc","payOrders","payOrder","everpay_1","bignumber_js_1","ethers_1","everpay","order","ords","push","orders","length","to","bundler","currency","decimals","ids","fee","default","ord","itemId","plus","result","transfer","amount","dividedBy","pow","toString","symbol","data","appName","action","itemIds","everHash","eccPrivateKey","provider","ethers","providers","InfuraProvider","signer","Wallet","pay","account","address","chainType","ethConnectedSigner","arJWK","arAddress"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/arseeding-js/esm/payOrder.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.newEverpayByRSA = exports.newEverpayByEcc = exports.payOrders = exports.payOrder = void 0;\nconst everpay_1 = __importDefault(require(\"everpay\"));\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst ethers_1 = require(\"ethers\");\nasync function payOrder(everpay, order) {\n    const ords = [];\n    ords.push(order);\n    return await payOrders(everpay, ords);\n}\nexports.payOrder = payOrder;\nasync function payOrders(everpay, orders) {\n    if (orders.length === 0) {\n        return 'No Order Need to Pay';\n    }\n    const to = orders[0].bundler;\n    const currency = orders[0].currency;\n    const decimals = orders[0].decimals;\n    const ids = [];\n    let fee = new bignumber_js_1.default(0);\n    for (const ord of orders) {\n        ids.push(ord.itemId);\n        fee = fee.plus(ord.fee);\n    }\n    const result = await everpay.transfer({\n        amount: fee.dividedBy(new bignumber_js_1.default(10).pow(decimals.toString())).toString(),\n        symbol: currency,\n        to: to,\n        data: {\n            appName: 'arseeding',\n            action: 'payment',\n            itemIds: ids\n        }\n    });\n    return result.everHash;\n}\nexports.payOrders = payOrders;\nfunction newEverpayByEcc(eccPrivateKey) {\n    const provider = new ethers_1.ethers.providers.InfuraProvider('mainnet');\n    const signer = new ethers_1.ethers.Wallet(eccPrivateKey, provider);\n    const pay = new everpay_1.default({\n        account: signer.address,\n        chainType: 'ethereum',\n        ethConnectedSigner: signer\n    });\n    return pay;\n}\nexports.newEverpayByEcc = newEverpayByEcc;\nfunction newEverpayByRSA(arJWK, arAddress) {\n    const everpay = new everpay_1.default({\n        account: arAddress,\n        chainType: 'arweave',\n        arJWK: arJWK\n    });\n    return everpay;\n}\nexports.newEverpayByRSA = newEverpayByRSA;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}