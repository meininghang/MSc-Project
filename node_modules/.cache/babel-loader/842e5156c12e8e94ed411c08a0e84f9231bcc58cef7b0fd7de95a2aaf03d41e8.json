{"ast":null,"code":"import storage from \"@/components/storage\";\nimport { mapActions, mapGetters } from 'vuex';\nimport { paymentStatus } from '@/utils/constant/chainConst';\nimport { reportUrl } from '@/utils/constant/apiConst';\nimport { getItemMeta } from \"arseeding-js\";\nexport default {\n  name: \"workBenchPage\",\n  components: {\n    storage\n  },\n  data() {\n    return {\n      fileList: [],\n      fileInfo: null,\n      loading: false,\n      balance: null\n    };\n  },\n  mounted() {\n    this.getList();\n  },\n  computed: {\n    ...mapGetters({\n      accountStr: 'account/account',\n      allOrderList: 'order/getOrders'\n    }),\n    usedNumber() {\n      return Math.round(this.balance * 0.76 * 100) / 100;\n    }\n  },\n  methods: {\n    ...mapActions({\n      getBalances: \"account/getAccountBalances\",\n      getOrders: 'order/getOrders',\n      searchList: 'order/searchArweave',\n      getInfo: 'account/getAccountInfo',\n      updateSelectSymbol: \"account/updateSelectSymbol\",\n      getAllSymbolPrice: \"account/getAllSymbolPrice\"\n      // getFeeInfo: \"account/getFeeInfo\",\n      // setKeepAliveInclude: \"keepAliveInclude/setKeepAliveInclude\"\n    }),\n\n    async getList() {\n      this.loading = true;\n      this.percentage = 0;\n      // 获取当前上传列表\n      await this.getOrders(this.accountStr);\n      // 获取当前账号的tokenList\n      const tokenList = await this.getInfo();\n      // 当前账户上面的所有balance\n      const list = await this.getBalances(this.accountStr);\n      console.log('所有的balance=====》', list);\n      const totalStorage = await this.formatSymbol(tokenList, list);\n      // 拉取余额最多的一个symbol\n      list.sort((a, b) => {\n        return b.balance - a.balance;\n      });\n      this.selectedSymbol = list[0].symbol;\n      // 获取当前symbol的balance\n      this.balance = list[0].balance;\n      const usedNumber = this.getUsedStorage();\n      this.$refs['storage'].inOrigin(usedNumber, totalStorage);\n      await this.getMyStorageList();\n    },\n    async getMyStorageList() {\n      this.tableData = this.allOrderList.slice(0, 10);\n      this.totalTableLength = this.allOrderList.length;\n      this.loading = false;\n      this.$nextTick(async () => {\n        for (let i = 0; i < this.tableData.length; i++) {\n          if (this.tableData[i].paymentStatus !== paymentStatus.EXPIRED) {\n            const id = this.tableData[i].itemId;\n            this.tableData[i].metaInfo = await getItemMeta(reportUrl, id);\n            this.tableData[i] = this.formatMetaInfo(this.tableData[i]);\n          } else {\n            this.tableData[i].metaInfo = {};\n          }\n        }\n      });\n    },\n    formatMetaInfo(item) {\n      let info = {\n        ...item,\n        fileName: item.id,\n        fileType: '',\n        tags: []\n      };\n      if (item.metaInfo && item.metaInfo.tags && item.metaInfo.tags.length !== 0) {\n        const list = item.metaInfo.tags.filter(item => item.name && (item.name.toUpperCase() === 'name'.toUpperCase() || item.name.toUpperCase() === 'fileName'.toUpperCase()));\n        const typeList = item.metaInfo.tags.filter(item => item.name && (item.name.toUpperCase() === 'Content-Type'.toUpperCase() || item.name.toUpperCase() === 'type'.toUpperCase()));\n        info.fileName = list && list.length !== 0 ? list[0].value : item.id;\n        info.fileType = typeList && typeList.length !== 0 ? typeList[0].value : '';\n        info.tags = item.metaInfo.tags;\n        const collectList = info.tags.filter(item => item.name.toUpperCase() === 'weweave-collect'.toUpperCase());\n        item.isCollect = collectList && collectList.length !== 0;\n      }\n      return info;\n    },\n    uploadFile(fileList) {\n      this.fileInfo = fileList;\n    }\n  }\n};","map":{"version":3,"names":["storage","mapActions","mapGetters","paymentStatus","reportUrl","getItemMeta","name","components","data","fileList","fileInfo","loading","balance","mounted","getList","computed","accountStr","allOrderList","usedNumber","Math","round","methods","getBalances","getOrders","searchList","getInfo","updateSelectSymbol","getAllSymbolPrice","percentage","tokenList","list","console","log","totalStorage","formatSymbol","sort","a","b","selectedSymbol","symbol","getUsedStorage","$refs","inOrigin","getMyStorageList","tableData","slice","totalTableLength","length","$nextTick","i","EXPIRED","id","itemId","metaInfo","formatMetaInfo","item","info","fileName","fileType","tags","filter","toUpperCase","typeList","value","collectList","isCollect","uploadFile"],"sources":["src/pages/workBenchPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"work-bench-page__main\">\r\n    <div class=\"content-top\">\r\n      <div class=\"box-style left-storage\">\r\n        <storage ref=\"storage\" :loading=\"loading\" :usedNumber=\"usedNumber\"></storage>\r\n      </div>\r\n      <div class=\"box-style right-upload\">\r\n        <el-upload\r\n            class=\"upload-box\"\r\n            :file-list=\"fileList\"\r\n            :show-file-list=\"false\"\r\n            drag\r\n            action\r\n            :http-request=\"uploadFile\"\r\n            multiple>\r\n          <div class=\"upload-box-content\">\r\n            <i class=\"el-icon-upload upload-icon-i\" style=\"margin-right: 5px\"></i>\r\n            <p>\r\n              Drop file here, or<span style=\"color: #6447F2\">browse.</span>one file at a time.\r\n            </p>\r\n          </div>\r\n        </el-upload>\r\n      </div>\r\n    </div>\r\n    <div class=\"content-list\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport storage from \"@/components/storage\"\r\nimport {mapActions, mapGetters} from 'vuex'\r\nimport {paymentStatus} from '@/utils/constant/chainConst'\r\nimport {reportUrl} from '@/utils/constant/apiConst'\r\nimport {getItemMeta} from \"arseeding-js\"\r\n\r\nexport default {\r\n  name: \"workBenchPage\",\r\n  components: {\r\n    storage\r\n  },\r\n  data() {\r\n    return {\r\n      fileList: [],\r\n      fileInfo: null,\r\n      loading: false,\r\n      balance: null,\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getList()\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      accountStr: 'account/account',\r\n      allOrderList: 'order/getOrders',\r\n    }),\r\n    usedNumber() {\r\n      return Math.round((this.balance * 0.76) * 100) / 100\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      getBalances: \"account/getAccountBalances\",\r\n      getOrders: 'order/getOrders',\r\n      searchList: 'order/searchArweave',\r\n      getInfo: 'account/getAccountInfo',\r\n      updateSelectSymbol: \"account/updateSelectSymbol\",\r\n      getAllSymbolPrice: \"account/getAllSymbolPrice\",\r\n      // getFeeInfo: \"account/getFeeInfo\",\r\n      // setKeepAliveInclude: \"keepAliveInclude/setKeepAliveInclude\"\r\n    }),\r\n    async getList() {\r\n      this.loading = true\r\n      this.percentage = 0\r\n      // 获取当前上传列表\r\n      await this.getOrders(this.accountStr)\r\n      // 获取当前账号的tokenList\r\n      const tokenList = await this.getInfo()\r\n      // 当前账户上面的所有balance\r\n      const list = await this.getBalances(this.accountStr)\r\n      console.log('所有的balance=====》', list)\r\n      const totalStorage = await this.formatSymbol(tokenList, list)\r\n      // 拉取余额最多的一个symbol\r\n      list.sort((a, b) => {\r\n        return b.balance - a.balance\r\n      })\r\n      this.selectedSymbol = list[0].symbol\r\n      // 获取当前symbol的balance\r\n      this.balance = list[0].balance\r\n      const usedNumber = this.getUsedStorage()\r\n      this.$refs['storage'].inOrigin(usedNumber, totalStorage)\r\n      await this.getMyStorageList()\r\n    },\r\n    async getMyStorageList() {\r\n      this.tableData = this.allOrderList.slice(0, 10)\r\n      this.totalTableLength = this.allOrderList.length\r\n      this.loading = false\r\n      this.$nextTick(async () => {\r\n        for (let i = 0; i < this.tableData.length; i++) {\r\n          if (this.tableData[i].paymentStatus !== paymentStatus.EXPIRED) {\r\n            const id = this.tableData[i].itemId\r\n            this.tableData[i].metaInfo = await getItemMeta(reportUrl, id)\r\n            this.tableData[i] = this.formatMetaInfo(this.tableData[i])\r\n          } else {\r\n            this.tableData[i].metaInfo = {}\r\n          }\r\n        }\r\n      })\r\n    },\r\n    formatMetaInfo(item) {\r\n      let info = {\r\n        ...item,\r\n        fileName: item.id,\r\n        fileType: '',\r\n        tags: []\r\n      }\r\n      if (item.metaInfo && item.metaInfo.tags && item.metaInfo.tags.length !== 0) {\r\n        const list = item.metaInfo.tags.filter(item => item.name && (item.name.toUpperCase() === 'name'.toUpperCase() || item.name.toUpperCase() === 'fileName'.toUpperCase()))\r\n        const typeList = item.metaInfo.tags.filter(item => item.name && (item.name.toUpperCase() === 'Content-Type'.toUpperCase() || item.name.toUpperCase() === 'type'.toUpperCase()))\r\n        info.fileName = list && list.length !==0 ? list[0].value : item.id\r\n        info.fileType = typeList && typeList.length !==0 ? typeList[0].value : ''\r\n        info.tags = item.metaInfo.tags\r\n        const collectList = info.tags.filter(item => item.name.toUpperCase() === 'weweave-collect'.toUpperCase())\r\n        item.isCollect = collectList && collectList.length !== 0\r\n      }\r\n      return info\r\n    },\r\n    uploadFile(fileList) {\r\n      this.fileInfo = fileList\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.work-bench-page__main {\r\n  width: 1024px;\r\n  min-height: 90vh;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n\r\n  .content-top {\r\n    margin-top: 30px;\r\n    margin-bottom: 20px;\r\n    height: 300px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    .box-style {\r\n      height: 300px;\r\n      //border: 3px solid #222326;\r\n      border-radius: 20px;\r\n      background: #f5f5f5;\r\n    }\r\n\r\n    .left-storage {\r\n      width: 600px;\r\n\r\n    }\r\n\r\n    .right-upload {\r\n      width: 400px;\r\n    }\r\n\r\n    .upload-box-content {\r\n      height: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-wrap: wrap;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .upload-box {\r\n      width: 100%;\r\n      height: 100%;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .el-icon-upload {\r\n      font-size: 48px;\r\n      //line-height: 100px;\r\n    }\r\n\r\n    .upload-icon-i {\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  .content-list {\r\n    height: 300px;\r\n    border-radius: 20px;\r\n    background: #f5f5f5;\r\n  }\r\n\r\n  .el-upload, .el-upload-dragger {\r\n    width: 100%;\r\n    height: 100%;\r\n    //border: 3px solid #222326;\r\n  }\r\n\r\n  .el-upload-dragger {\r\n    border-radius: 20px;\r\n    border: 3px dashed #d9d9d9;\r\n  }\r\n\r\n  .el-upload-dragger .el-icon-upload {\r\n    margin: 0;\r\n  }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}