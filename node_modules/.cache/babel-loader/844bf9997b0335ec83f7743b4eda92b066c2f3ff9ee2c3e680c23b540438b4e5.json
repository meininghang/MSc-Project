{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InjectedEthereumSigner = exports.InjectedArweaveSigner = exports.ArweaveSigner = exports.EthereumSigner = exports.getTokenTagByEver = exports.submitByApikey = exports.getDataByGW = exports.getOrders = exports.getBundleFee = exports.getItemMeta = exports.genNodeAPI = exports.genArweaveAPI = exports.genAPI = void 0;\nconst ethers_1 = require(\"ethers\");\nconst everpay_1 = __importDefault(require(\"everpay\"));\nconst arseeding_arbundles_1 = require(\"arseeding-arbundles\");\nconst ethereumSigner_1 = __importDefault(require(\"arseeding-arbundles/src/signing/chains/ethereumSigner\"));\nexports.EthereumSigner = ethereumSigner_1.default;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst payOrder_1 = require(\"./payOrder\");\nconst signing_1 = require(\"arseeding-arbundles/src/signing\");\nObject.defineProperty(exports, \"InjectedEthereumSigner\", {\n  enumerable: true,\n  get: function () {\n    return signing_1.InjectedEthereumSigner;\n  }\n});\nObject.defineProperty(exports, \"InjectedArweaveSigner\", {\n  enumerable: true,\n  get: function () {\n    return signing_1.InjectedArweaveSigner;\n  }\n});\nconst ArweaveSigner_1 = __importDefault(require(\"arseeding-arbundles/src/signing/chains/ArweaveSigner\"));\nexports.ArweaveSigner = ArweaveSigner_1.default;\nconst genAPI = async windowEthereum => {\n  await windowEthereum.request({\n    method: 'eth_requestAccounts'\n  });\n  const provider = new ethers_1.providers.Web3Provider(windowEthereum);\n  await provider._ready();\n  const signer = new signing_1.InjectedEthereumSigner(provider);\n  await signer.setPublicKey();\n  return {\n    signer,\n    async sendAndPay(arseedingUrl, data, tag, opts, needSeq, debug) {\n      var _a;\n      const dataItem = (0, arseeding_arbundles_1.createData)(data, signer, opts);\n      await dataItem.sign(signer);\n      const api = axios_1.default.create({\n        baseURL: arseedingUrl\n      });\n      const header = {\n        'Content-Type': 'application/octet-stream'\n      };\n      if (needSeq !== undefined && needSeq) {\n        header.Sort = 'true';\n      }\n      const tokenSymbol = tag.split('-')[1];\n      const res = await api.post(`/bundle/tx/${tokenSymbol}`, dataItem.getRaw(), {\n        headers: header,\n        maxBodyLength: Infinity\n      });\n      const order = {\n        ...res.data,\n        tag\n      };\n      const {\n        fee\n      } = order;\n      if (+fee > 0) {\n        const accounts = await provider.listAccounts();\n        const account = (_a = accounts[0]) !== null && _a !== void 0 ? _a : '';\n        const everpay = new everpay_1.default({\n          debug: debug,\n          account: account,\n          ethConnectedSigner: provider.getSigner(),\n          chainType: 'ethereum'\n        });\n        const everHash = await (0, payOrder_1.payOrder)(everpay, order);\n        return {\n          everHash,\n          order\n        };\n      } else {\n        return {\n          order\n        };\n      }\n    }\n  };\n};\nexports.genAPI = genAPI;\nconst isString = obj => {\n  return Object.prototype.toString.call(obj) === '[object String]';\n};\nconst checkArPermissions = async (windowArweaveWallet, permissions) => {\n  let existingPermissions = [];\n  const checkPermissions = isString(permissions) ? [permissions] : permissions;\n  try {\n    existingPermissions = await windowArweaveWallet.getPermissions();\n  } catch {\n    throw new Error('PLEASE_INSTALL_ARCONNECT');\n  }\n  if (checkPermissions.length === 0) {\n    return;\n  }\n  const checkFunc = permission => {\n    return !existingPermissions.includes(permission);\n  };\n  if (checkPermissions.some(checkFunc)) {\n    await windowArweaveWallet.connect(checkPermissions);\n  }\n};\nconst genArweaveAPI = async windowArweaveWallet => {\n  await checkArPermissions(windowArweaveWallet, ['ACCESS_ADDRESS', 'ACCESS_ALL_ADDRESSES', 'ACCESS_PUBLIC_KEY', 'SIGN_TRANSACTION', 'SIGNATURE']);\n  const signer = new signing_1.InjectedArweaveSigner(windowArweaveWallet);\n  await signer.setPublicKey();\n  return {\n    signer,\n    async sendAndPay(arseedingUrl, data, tag, opts, needSeq, debug) {\n      const dataItem = (0, arseeding_arbundles_1.createData)(data, signer, opts);\n      await dataItem.sign(signer);\n      const api = axios_1.default.create({\n        baseURL: arseedingUrl\n      });\n      const header = {\n        'Content-Type': 'application/octet-stream'\n      };\n      if (needSeq !== undefined && needSeq) {\n        header.Sort = 'true';\n      }\n      const tokenSymbol = tag.split('-')[1];\n      const res = await api.post(`/bundle/tx/${tokenSymbol}`, dataItem.getRaw(), {\n        headers: header,\n        maxBodyLength: Infinity\n      });\n      const order = {\n        ...res.data,\n        tag\n      };\n      const {\n        fee\n      } = order;\n      if (+fee > 0) {\n        const account = await windowArweaveWallet.getActiveAddress();\n        const everpay = new everpay_1.default({\n          debug: debug,\n          account: account,\n          arJWK: 'use_wallet',\n          chainType: 'arweave'\n        });\n        const everHash = await (0, payOrder_1.payOrder)(everpay, order);\n        return {\n          everHash,\n          order\n        };\n      } else {\n        return {\n          order\n        };\n      }\n    }\n  };\n};\nexports.genArweaveAPI = genArweaveAPI;\nconst genNodeAPI = pk => {\n  const signer = new ethereumSigner_1.default(pk);\n  const ethConnectedSigner = new ethers_1.Wallet(pk);\n  return {\n    signer,\n    async sendAndPay(arseedingUrl, data, tag, opts, debug) {\n      const dataItem = (0, arseeding_arbundles_1.createData)(data, signer, opts);\n      await dataItem.sign(signer);\n      const api = axios_1.default.create({\n        baseURL: arseedingUrl\n      });\n      const tokenSymbol = tag.split('-')[1];\n      const res = await api.post(`/bundle/tx/${tokenSymbol}`, dataItem.getRaw(), {\n        headers: {\n          'Content-Type': 'application/octet-stream'\n        },\n        maxBodyLength: Infinity\n      });\n      const order = {\n        ...res.data,\n        tag\n      };\n      const {\n        fee\n      } = order;\n      if (+fee > 0) {\n        const account = ethConnectedSigner.address;\n        const everpay = new everpay_1.default({\n          debug: debug,\n          account: account,\n          ethConnectedSigner: ethConnectedSigner,\n          chainType: 'ethereum'\n        });\n        const everHash = await (0, payOrder_1.payOrder)(everpay, order);\n        return {\n          everHash,\n          order\n        };\n      } else {\n        return {\n          order\n        };\n      }\n    }\n  };\n};\nexports.genNodeAPI = genNodeAPI;\nconst getItemMeta = async (arseedingUrl, itemId) => {\n  const api = axios_1.default.create({\n    baseURL: arseedingUrl\n  });\n  const res = await api.get(`bundle/tx/${itemId}`);\n  return res.data;\n};\nexports.getItemMeta = getItemMeta;\nconst getBundleFee = async (arseedingUrl, size, currency) => {\n  const api = axios_1.default.create({\n    baseURL: arseedingUrl\n  });\n  const res = await api.get(`bundle/fee/${size}/${currency}`);\n  return res.data;\n};\nexports.getBundleFee = getBundleFee;\nconst getOrders = async (arseedingUrl, signerAddr) => {\n  const api = axios_1.default.create({\n    baseURL: arseedingUrl\n  });\n  const res = await api.get(`bundle/orders/${signerAddr}`);\n  return res.data;\n};\nexports.getOrders = getOrders;\nconst getDataByGW = async (arseedingUrl, itemId) => {\n  const api = axios_1.default.create({\n    baseURL: arseedingUrl\n  });\n  const res = await api.get(`/${itemId}`);\n  return res.data;\n};\nexports.getDataByGW = getDataByGW;\nconst submitByApikey = async (arseedingUrl, apiKey, tag, data, contentType, tags) => {\n  const currency = tag.split('-')[1];\n  tags['Content-Type'] = contentType;\n  const api = axios_1.default.create({\n    baseURL: arseedingUrl\n  });\n  const res = await api.post(`/bundle/data/${currency}`, data, {\n    headers: {\n      'X-API-KEY': apiKey\n    },\n    maxBodyLength: Infinity,\n    params: tags\n  });\n  return res.data;\n};\nexports.submitByApikey = submitByApikey;\nconst getTokenTagByEver = async (symbol, debug) => {\n  const info = await new everpay_1.default({\n    debug: debug\n  }).info();\n  const tags = info.tokenList.map(item => {\n    if (item.symbol.toLowerCase() === symbol.toLowerCase()) {\n      return item.tag;\n    }\n    return undefined;\n  }).filter(Boolean);\n  return tags;\n};\nexports.getTokenTagByEver = getTokenTagByEver;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","InjectedEthereumSigner","InjectedArweaveSigner","ArweaveSigner","EthereumSigner","getTokenTagByEver","submitByApikey","getDataByGW","getOrders","getBundleFee","getItemMeta","genNodeAPI","genArweaveAPI","genAPI","ethers_1","require","everpay_1","arseeding_arbundles_1","ethereumSigner_1","default","axios_1","payOrder_1","signing_1","enumerable","get","ArweaveSigner_1","windowEthereum","request","method","provider","providers","Web3Provider","_ready","signer","setPublicKey","sendAndPay","arseedingUrl","data","tag","opts","needSeq","debug","_a","dataItem","createData","sign","api","create","baseURL","header","undefined","Sort","tokenSymbol","split","res","post","getRaw","headers","maxBodyLength","Infinity","order","fee","accounts","listAccounts","account","everpay","ethConnectedSigner","getSigner","chainType","everHash","payOrder","isString","obj","prototype","toString","call","checkArPermissions","windowArweaveWallet","permissions","existingPermissions","checkPermissions","getPermissions","Error","length","checkFunc","permission","includes","some","connect","getActiveAddress","arJWK","pk","Wallet","address","itemId","size","currency","signerAddr","apiKey","contentType","tags","params","symbol","info","tokenList","map","item","toLowerCase","filter","Boolean"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/arseeding-js/esm/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectedEthereumSigner = exports.InjectedArweaveSigner = exports.ArweaveSigner = exports.EthereumSigner = exports.getTokenTagByEver = exports.submitByApikey = exports.getDataByGW = exports.getOrders = exports.getBundleFee = exports.getItemMeta = exports.genNodeAPI = exports.genArweaveAPI = exports.genAPI = void 0;\nconst ethers_1 = require(\"ethers\");\nconst everpay_1 = __importDefault(require(\"everpay\"));\nconst arseeding_arbundles_1 = require(\"arseeding-arbundles\");\nconst ethereumSigner_1 = __importDefault(require(\"arseeding-arbundles/src/signing/chains/ethereumSigner\"));\nexports.EthereumSigner = ethereumSigner_1.default;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst payOrder_1 = require(\"./payOrder\");\nconst signing_1 = require(\"arseeding-arbundles/src/signing\");\nObject.defineProperty(exports, \"InjectedEthereumSigner\", { enumerable: true, get: function () { return signing_1.InjectedEthereumSigner; } });\nObject.defineProperty(exports, \"InjectedArweaveSigner\", { enumerable: true, get: function () { return signing_1.InjectedArweaveSigner; } });\nconst ArweaveSigner_1 = __importDefault(require(\"arseeding-arbundles/src/signing/chains/ArweaveSigner\"));\nexports.ArweaveSigner = ArweaveSigner_1.default;\nconst genAPI = async (windowEthereum) => {\n    await windowEthereum.request({ method: 'eth_requestAccounts' });\n    const provider = new ethers_1.providers.Web3Provider(windowEthereum);\n    await provider._ready();\n    const signer = new signing_1.InjectedEthereumSigner(provider);\n    await signer.setPublicKey();\n    return {\n        signer,\n        async sendAndPay(arseedingUrl, data, tag, opts, needSeq, debug) {\n            var _a;\n            const dataItem = (0, arseeding_arbundles_1.createData)(data, signer, opts);\n            await dataItem.sign(signer);\n            const api = axios_1.default.create({ baseURL: arseedingUrl });\n            const header = {\n                'Content-Type': 'application/octet-stream'\n            };\n            if (needSeq !== undefined && needSeq) {\n                header.Sort = 'true';\n            }\n            const tokenSymbol = tag.split('-')[1];\n            const res = await api.post(`/bundle/tx/${tokenSymbol}`, dataItem.getRaw(), {\n                headers: header,\n                maxBodyLength: Infinity\n            });\n            const order = { ...res.data, tag };\n            const { fee } = order;\n            if (+fee > 0) {\n                const accounts = await provider.listAccounts();\n                const account = (_a = accounts[0]) !== null && _a !== void 0 ? _a : '';\n                const everpay = new everpay_1.default({\n                    debug: debug,\n                    account: account,\n                    ethConnectedSigner: provider.getSigner(),\n                    chainType: 'ethereum'\n                });\n                const everHash = await (0, payOrder_1.payOrder)(everpay, order);\n                return {\n                    everHash,\n                    order\n                };\n            }\n            else {\n                return {\n                    order\n                };\n            }\n        }\n    };\n};\nexports.genAPI = genAPI;\nconst isString = (obj) => {\n    return Object.prototype.toString.call(obj) === '[object String]';\n};\nconst checkArPermissions = async (windowArweaveWallet, permissions) => {\n    let existingPermissions = [];\n    const checkPermissions = isString(permissions) ? [permissions] : permissions;\n    try {\n        existingPermissions = await windowArweaveWallet.getPermissions();\n    }\n    catch {\n        throw new Error('PLEASE_INSTALL_ARCONNECT');\n    }\n    if (checkPermissions.length === 0) {\n        return;\n    }\n    const checkFunc = (permission) => {\n        return !existingPermissions.includes(permission);\n    };\n    if (checkPermissions.some(checkFunc)) {\n        await windowArweaveWallet.connect(checkPermissions);\n    }\n};\nconst genArweaveAPI = async (windowArweaveWallet) => {\n    await checkArPermissions(windowArweaveWallet, [\n        'ACCESS_ADDRESS',\n        'ACCESS_ALL_ADDRESSES',\n        'ACCESS_PUBLIC_KEY',\n        'SIGN_TRANSACTION',\n        'SIGNATURE'\n    ]);\n    const signer = new signing_1.InjectedArweaveSigner(windowArweaveWallet);\n    await signer.setPublicKey();\n    return {\n        signer,\n        async sendAndPay(arseedingUrl, data, tag, opts, needSeq, debug) {\n            const dataItem = (0, arseeding_arbundles_1.createData)(data, signer, opts);\n            await dataItem.sign(signer);\n            const api = axios_1.default.create({ baseURL: arseedingUrl });\n            const header = {\n                'Content-Type': 'application/octet-stream'\n            };\n            if (needSeq !== undefined && needSeq) {\n                header.Sort = 'true';\n            }\n            const tokenSymbol = tag.split('-')[1];\n            const res = await api.post(`/bundle/tx/${tokenSymbol}`, dataItem.getRaw(), {\n                headers: header,\n                maxBodyLength: Infinity\n            });\n            const order = { ...res.data, tag };\n            const { fee } = order;\n            if (+fee > 0) {\n                const account = await windowArweaveWallet.getActiveAddress();\n                const everpay = new everpay_1.default({\n                    debug: debug,\n                    account: account,\n                    arJWK: 'use_wallet',\n                    chainType: 'arweave'\n                });\n                const everHash = await (0, payOrder_1.payOrder)(everpay, order);\n                return {\n                    everHash,\n                    order\n                };\n            }\n            else {\n                return {\n                    order\n                };\n            }\n        }\n    };\n};\nexports.genArweaveAPI = genArweaveAPI;\nconst genNodeAPI = (pk) => {\n    const signer = new ethereumSigner_1.default(pk);\n    const ethConnectedSigner = new ethers_1.Wallet(pk);\n    return {\n        signer,\n        async sendAndPay(arseedingUrl, data, tag, opts, debug) {\n            const dataItem = (0, arseeding_arbundles_1.createData)(data, signer, opts);\n            await dataItem.sign(signer);\n            const api = axios_1.default.create({ baseURL: arseedingUrl });\n            const tokenSymbol = tag.split('-')[1];\n            const res = await api.post(`/bundle/tx/${tokenSymbol}`, dataItem.getRaw(), {\n                headers: { 'Content-Type': 'application/octet-stream' },\n                maxBodyLength: Infinity\n            });\n            const order = { ...res.data, tag };\n            const { fee } = order;\n            if (+fee > 0) {\n                const account = ethConnectedSigner.address;\n                const everpay = new everpay_1.default({\n                    debug: debug,\n                    account: account,\n                    ethConnectedSigner: ethConnectedSigner,\n                    chainType: 'ethereum'\n                });\n                const everHash = await (0, payOrder_1.payOrder)(everpay, order);\n                return {\n                    everHash,\n                    order\n                };\n            }\n            else {\n                return {\n                    order\n                };\n            }\n        }\n    };\n};\nexports.genNodeAPI = genNodeAPI;\nconst getItemMeta = async (arseedingUrl, itemId) => {\n    const api = axios_1.default.create({ baseURL: arseedingUrl });\n    const res = await api.get(`bundle/tx/${itemId}`);\n    return res.data;\n};\nexports.getItemMeta = getItemMeta;\nconst getBundleFee = async (arseedingUrl, size, currency) => {\n    const api = axios_1.default.create({ baseURL: arseedingUrl });\n    const res = await api.get(`bundle/fee/${size}/${currency}`);\n    return res.data;\n};\nexports.getBundleFee = getBundleFee;\nconst getOrders = async (arseedingUrl, signerAddr) => {\n    const api = axios_1.default.create({ baseURL: arseedingUrl });\n    const res = await api.get(`bundle/orders/${signerAddr}`);\n    return res.data;\n};\nexports.getOrders = getOrders;\nconst getDataByGW = async (arseedingUrl, itemId) => {\n    const api = axios_1.default.create({ baseURL: arseedingUrl });\n    const res = await api.get(`/${itemId}`);\n    return res.data;\n};\nexports.getDataByGW = getDataByGW;\nconst submitByApikey = async (arseedingUrl, apiKey, tag, data, contentType, tags) => {\n    const currency = tag.split('-')[1];\n    tags['Content-Type'] = contentType;\n    const api = axios_1.default.create({ baseURL: arseedingUrl });\n    const res = await api.post(`/bundle/data/${currency}`, data, {\n        headers: { 'X-API-KEY': apiKey },\n        maxBodyLength: Infinity,\n        params: tags\n    });\n    return res.data;\n};\nexports.submitByApikey = submitByApikey;\nconst getTokenTagByEver = async (symbol, debug) => {\n    const info = await new everpay_1.default({\n        debug: debug\n    }).info();\n    const tags = info.tokenList.map((item) => {\n        if (item.symbol.toLowerCase() === symbol.toLowerCase()) {\n            return item.tag;\n        }\n        return undefined;\n    }).filter(Boolean);\n    return tags;\n};\nexports.getTokenTagByEver = getTokenTagByEver;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,sBAAsB,GAAGF,OAAO,CAACG,qBAAqB,GAAGH,OAAO,CAACI,aAAa,GAAGJ,OAAO,CAACK,cAAc,GAAGL,OAAO,CAACM,iBAAiB,GAAGN,OAAO,CAACO,cAAc,GAAGP,OAAO,CAACQ,WAAW,GAAGR,OAAO,CAACS,SAAS,GAAGT,OAAO,CAACU,YAAY,GAAGV,OAAO,CAACW,WAAW,GAAGX,OAAO,CAACY,UAAU,GAAGZ,OAAO,CAACa,aAAa,GAAGb,OAAO,CAACc,MAAM,GAAG,KAAK,CAAC;AAClU,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAClC,MAAMC,SAAS,GAAGtB,eAAe,CAACqB,OAAO,CAAC,SAAS,CAAC,CAAC;AACrD,MAAME,qBAAqB,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC5D,MAAMG,gBAAgB,GAAGxB,eAAe,CAACqB,OAAO,CAAC,uDAAuD,CAAC,CAAC;AAC1GhB,OAAO,CAACK,cAAc,GAAGc,gBAAgB,CAACC,OAAO;AACjD,MAAMC,OAAO,GAAG1B,eAAe,CAACqB,OAAO,CAAC,OAAO,CAAC,CAAC;AACjD,MAAMM,UAAU,GAAGN,OAAO,CAAC,YAAY,CAAC;AACxC,MAAMO,SAAS,GAAGP,OAAO,CAAC,iCAAiC,CAAC;AAC5DlB,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,wBAAwB,EAAE;EAAEwB,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,SAAS,CAACrB,sBAAsB;EAAE;AAAE,CAAC,CAAC;AAC7IJ,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,uBAAuB,EAAE;EAAEwB,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,SAAS,CAACpB,qBAAqB;EAAE;AAAE,CAAC,CAAC;AAC3I,MAAMuB,eAAe,GAAG/B,eAAe,CAACqB,OAAO,CAAC,sDAAsD,CAAC,CAAC;AACxGhB,OAAO,CAACI,aAAa,GAAGsB,eAAe,CAACN,OAAO;AAC/C,MAAMN,MAAM,GAAG,MAAOa,cAAc,IAAK;EACrC,MAAMA,cAAc,CAACC,OAAO,CAAC;IAAEC,MAAM,EAAE;EAAsB,CAAC,CAAC;EAC/D,MAAMC,QAAQ,GAAG,IAAIf,QAAQ,CAACgB,SAAS,CAACC,YAAY,CAACL,cAAc,CAAC;EACpE,MAAMG,QAAQ,CAACG,MAAM,CAAC,CAAC;EACvB,MAAMC,MAAM,GAAG,IAAIX,SAAS,CAACrB,sBAAsB,CAAC4B,QAAQ,CAAC;EAC7D,MAAMI,MAAM,CAACC,YAAY,CAAC,CAAC;EAC3B,OAAO;IACHD,MAAM;IACN,MAAME,UAAUA,CAACC,YAAY,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAE;MAC5D,IAAIC,EAAE;MACN,MAAMC,QAAQ,GAAG,CAAC,CAAC,EAAE1B,qBAAqB,CAAC2B,UAAU,EAAEP,IAAI,EAAEJ,MAAM,EAAEM,IAAI,CAAC;MAC1E,MAAMI,QAAQ,CAACE,IAAI,CAACZ,MAAM,CAAC;MAC3B,MAAMa,GAAG,GAAG1B,OAAO,CAACD,OAAO,CAAC4B,MAAM,CAAC;QAAEC,OAAO,EAAEZ;MAAa,CAAC,CAAC;MAC7D,MAAMa,MAAM,GAAG;QACX,cAAc,EAAE;MACpB,CAAC;MACD,IAAIT,OAAO,KAAKU,SAAS,IAAIV,OAAO,EAAE;QAClCS,MAAM,CAACE,IAAI,GAAG,MAAM;MACxB;MACA,MAAMC,WAAW,GAAGd,GAAG,CAACe,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrC,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAE,cAAaH,WAAY,EAAC,EAAET,QAAQ,CAACa,MAAM,CAAC,CAAC,EAAE;QACvEC,OAAO,EAAER,MAAM;QACfS,aAAa,EAAEC;MACnB,CAAC,CAAC;MACF,MAAMC,KAAK,GAAG;QAAE,GAAGN,GAAG,CAACjB,IAAI;QAAEC;MAAI,CAAC;MAClC,MAAM;QAAEuB;MAAI,CAAC,GAAGD,KAAK;MACrB,IAAI,CAACC,GAAG,GAAG,CAAC,EAAE;QACV,MAAMC,QAAQ,GAAG,MAAMjC,QAAQ,CAACkC,YAAY,CAAC,CAAC;QAC9C,MAAMC,OAAO,GAAG,CAACtB,EAAE,GAAGoB,QAAQ,CAAC,CAAC,CAAC,MAAM,IAAI,IAAIpB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;QACtE,MAAMuB,OAAO,GAAG,IAAIjD,SAAS,CAACG,OAAO,CAAC;UAClCsB,KAAK,EAAEA,KAAK;UACZuB,OAAO,EAAEA,OAAO;UAChBE,kBAAkB,EAAErC,QAAQ,CAACsC,SAAS,CAAC,CAAC;UACxCC,SAAS,EAAE;QACf,CAAC,CAAC;QACF,MAAMC,QAAQ,GAAG,MAAM,CAAC,CAAC,EAAEhD,UAAU,CAACiD,QAAQ,EAAEL,OAAO,EAAEL,KAAK,CAAC;QAC/D,OAAO;UACHS,QAAQ;UACRT;QACJ,CAAC;MACL,CAAC,MACI;QACD,OAAO;UACHA;QACJ,CAAC;MACL;IACJ;EACJ,CAAC;AACL,CAAC;AACD7D,OAAO,CAACc,MAAM,GAAGA,MAAM;AACvB,MAAM0D,QAAQ,GAAIC,GAAG,IAAK;EACtB,OAAO3E,MAAM,CAAC4E,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACH,GAAG,CAAC,KAAK,iBAAiB;AACpE,CAAC;AACD,MAAMI,kBAAkB,GAAG,MAAAA,CAAOC,mBAAmB,EAAEC,WAAW,KAAK;EACnE,IAAIC,mBAAmB,GAAG,EAAE;EAC5B,MAAMC,gBAAgB,GAAGT,QAAQ,CAACO,WAAW,CAAC,GAAG,CAACA,WAAW,CAAC,GAAGA,WAAW;EAC5E,IAAI;IACAC,mBAAmB,GAAG,MAAMF,mBAAmB,CAACI,cAAc,CAAC,CAAC;EACpE,CAAC,CACD,MAAM;IACF,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;EACA,IAAIF,gBAAgB,CAACG,MAAM,KAAK,CAAC,EAAE;IAC/B;EACJ;EACA,MAAMC,SAAS,GAAIC,UAAU,IAAK;IAC9B,OAAO,CAACN,mBAAmB,CAACO,QAAQ,CAACD,UAAU,CAAC;EACpD,CAAC;EACD,IAAIL,gBAAgB,CAACO,IAAI,CAACH,SAAS,CAAC,EAAE;IAClC,MAAMP,mBAAmB,CAACW,OAAO,CAACR,gBAAgB,CAAC;EACvD;AACJ,CAAC;AACD,MAAMpE,aAAa,GAAG,MAAOiE,mBAAmB,IAAK;EACjD,MAAMD,kBAAkB,CAACC,mBAAmB,EAAE,CAC1C,gBAAgB,EAChB,sBAAsB,EACtB,mBAAmB,EACnB,kBAAkB,EAClB,WAAW,CACd,CAAC;EACF,MAAM5C,MAAM,GAAG,IAAIX,SAAS,CAACpB,qBAAqB,CAAC2E,mBAAmB,CAAC;EACvE,MAAM5C,MAAM,CAACC,YAAY,CAAC,CAAC;EAC3B,OAAO;IACHD,MAAM;IACN,MAAME,UAAUA,CAACC,YAAY,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAE;MAC5D,MAAME,QAAQ,GAAG,CAAC,CAAC,EAAE1B,qBAAqB,CAAC2B,UAAU,EAAEP,IAAI,EAAEJ,MAAM,EAAEM,IAAI,CAAC;MAC1E,MAAMI,QAAQ,CAACE,IAAI,CAACZ,MAAM,CAAC;MAC3B,MAAMa,GAAG,GAAG1B,OAAO,CAACD,OAAO,CAAC4B,MAAM,CAAC;QAAEC,OAAO,EAAEZ;MAAa,CAAC,CAAC;MAC7D,MAAMa,MAAM,GAAG;QACX,cAAc,EAAE;MACpB,CAAC;MACD,IAAIT,OAAO,KAAKU,SAAS,IAAIV,OAAO,EAAE;QAClCS,MAAM,CAACE,IAAI,GAAG,MAAM;MACxB;MACA,MAAMC,WAAW,GAAGd,GAAG,CAACe,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrC,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAE,cAAaH,WAAY,EAAC,EAAET,QAAQ,CAACa,MAAM,CAAC,CAAC,EAAE;QACvEC,OAAO,EAAER,MAAM;QACfS,aAAa,EAAEC;MACnB,CAAC,CAAC;MACF,MAAMC,KAAK,GAAG;QAAE,GAAGN,GAAG,CAACjB,IAAI;QAAEC;MAAI,CAAC;MAClC,MAAM;QAAEuB;MAAI,CAAC,GAAGD,KAAK;MACrB,IAAI,CAACC,GAAG,GAAG,CAAC,EAAE;QACV,MAAMG,OAAO,GAAG,MAAMa,mBAAmB,CAACY,gBAAgB,CAAC,CAAC;QAC5D,MAAMxB,OAAO,GAAG,IAAIjD,SAAS,CAACG,OAAO,CAAC;UAClCsB,KAAK,EAAEA,KAAK;UACZuB,OAAO,EAAEA,OAAO;UAChB0B,KAAK,EAAE,YAAY;UACnBtB,SAAS,EAAE;QACf,CAAC,CAAC;QACF,MAAMC,QAAQ,GAAG,MAAM,CAAC,CAAC,EAAEhD,UAAU,CAACiD,QAAQ,EAAEL,OAAO,EAAEL,KAAK,CAAC;QAC/D,OAAO;UACHS,QAAQ;UACRT;QACJ,CAAC;MACL,CAAC,MACI;QACD,OAAO;UACHA;QACJ,CAAC;MACL;IACJ;EACJ,CAAC;AACL,CAAC;AACD7D,OAAO,CAACa,aAAa,GAAGA,aAAa;AACrC,MAAMD,UAAU,GAAIgF,EAAE,IAAK;EACvB,MAAM1D,MAAM,GAAG,IAAIf,gBAAgB,CAACC,OAAO,CAACwE,EAAE,CAAC;EAC/C,MAAMzB,kBAAkB,GAAG,IAAIpD,QAAQ,CAAC8E,MAAM,CAACD,EAAE,CAAC;EAClD,OAAO;IACH1D,MAAM;IACN,MAAME,UAAUA,CAACC,YAAY,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAEE,KAAK,EAAE;MACnD,MAAME,QAAQ,GAAG,CAAC,CAAC,EAAE1B,qBAAqB,CAAC2B,UAAU,EAAEP,IAAI,EAAEJ,MAAM,EAAEM,IAAI,CAAC;MAC1E,MAAMI,QAAQ,CAACE,IAAI,CAACZ,MAAM,CAAC;MAC3B,MAAMa,GAAG,GAAG1B,OAAO,CAACD,OAAO,CAAC4B,MAAM,CAAC;QAAEC,OAAO,EAAEZ;MAAa,CAAC,CAAC;MAC7D,MAAMgB,WAAW,GAAGd,GAAG,CAACe,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrC,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAE,cAAaH,WAAY,EAAC,EAAET,QAAQ,CAACa,MAAM,CAAC,CAAC,EAAE;QACvEC,OAAO,EAAE;UAAE,cAAc,EAAE;QAA2B,CAAC;QACvDC,aAAa,EAAEC;MACnB,CAAC,CAAC;MACF,MAAMC,KAAK,GAAG;QAAE,GAAGN,GAAG,CAACjB,IAAI;QAAEC;MAAI,CAAC;MAClC,MAAM;QAAEuB;MAAI,CAAC,GAAGD,KAAK;MACrB,IAAI,CAACC,GAAG,GAAG,CAAC,EAAE;QACV,MAAMG,OAAO,GAAGE,kBAAkB,CAAC2B,OAAO;QAC1C,MAAM5B,OAAO,GAAG,IAAIjD,SAAS,CAACG,OAAO,CAAC;UAClCsB,KAAK,EAAEA,KAAK;UACZuB,OAAO,EAAEA,OAAO;UAChBE,kBAAkB,EAAEA,kBAAkB;UACtCE,SAAS,EAAE;QACf,CAAC,CAAC;QACF,MAAMC,QAAQ,GAAG,MAAM,CAAC,CAAC,EAAEhD,UAAU,CAACiD,QAAQ,EAAEL,OAAO,EAAEL,KAAK,CAAC;QAC/D,OAAO;UACHS,QAAQ;UACRT;QACJ,CAAC;MACL,CAAC,MACI;QACD,OAAO;UACHA;QACJ,CAAC;MACL;IACJ;EACJ,CAAC;AACL,CAAC;AACD7D,OAAO,CAACY,UAAU,GAAGA,UAAU;AAC/B,MAAMD,WAAW,GAAG,MAAAA,CAAO0B,YAAY,EAAE0D,MAAM,KAAK;EAChD,MAAMhD,GAAG,GAAG1B,OAAO,CAACD,OAAO,CAAC4B,MAAM,CAAC;IAAEC,OAAO,EAAEZ;EAAa,CAAC,CAAC;EAC7D,MAAMkB,GAAG,GAAG,MAAMR,GAAG,CAACtB,GAAG,CAAE,aAAYsE,MAAO,EAAC,CAAC;EAChD,OAAOxC,GAAG,CAACjB,IAAI;AACnB,CAAC;AACDtC,OAAO,CAACW,WAAW,GAAGA,WAAW;AACjC,MAAMD,YAAY,GAAG,MAAAA,CAAO2B,YAAY,EAAE2D,IAAI,EAAEC,QAAQ,KAAK;EACzD,MAAMlD,GAAG,GAAG1B,OAAO,CAACD,OAAO,CAAC4B,MAAM,CAAC;IAAEC,OAAO,EAAEZ;EAAa,CAAC,CAAC;EAC7D,MAAMkB,GAAG,GAAG,MAAMR,GAAG,CAACtB,GAAG,CAAE,cAAauE,IAAK,IAAGC,QAAS,EAAC,CAAC;EAC3D,OAAO1C,GAAG,CAACjB,IAAI;AACnB,CAAC;AACDtC,OAAO,CAACU,YAAY,GAAGA,YAAY;AACnC,MAAMD,SAAS,GAAG,MAAAA,CAAO4B,YAAY,EAAE6D,UAAU,KAAK;EAClD,MAAMnD,GAAG,GAAG1B,OAAO,CAACD,OAAO,CAAC4B,MAAM,CAAC;IAAEC,OAAO,EAAEZ;EAAa,CAAC,CAAC;EAC7D,MAAMkB,GAAG,GAAG,MAAMR,GAAG,CAACtB,GAAG,CAAE,iBAAgByE,UAAW,EAAC,CAAC;EACxD,OAAO3C,GAAG,CAACjB,IAAI;AACnB,CAAC;AACDtC,OAAO,CAACS,SAAS,GAAGA,SAAS;AAC7B,MAAMD,WAAW,GAAG,MAAAA,CAAO6B,YAAY,EAAE0D,MAAM,KAAK;EAChD,MAAMhD,GAAG,GAAG1B,OAAO,CAACD,OAAO,CAAC4B,MAAM,CAAC;IAAEC,OAAO,EAAEZ;EAAa,CAAC,CAAC;EAC7D,MAAMkB,GAAG,GAAG,MAAMR,GAAG,CAACtB,GAAG,CAAE,IAAGsE,MAAO,EAAC,CAAC;EACvC,OAAOxC,GAAG,CAACjB,IAAI;AACnB,CAAC;AACDtC,OAAO,CAACQ,WAAW,GAAGA,WAAW;AACjC,MAAMD,cAAc,GAAG,MAAAA,CAAO8B,YAAY,EAAE8D,MAAM,EAAE5D,GAAG,EAAED,IAAI,EAAE8D,WAAW,EAAEC,IAAI,KAAK;EACjF,MAAMJ,QAAQ,GAAG1D,GAAG,CAACe,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAClC+C,IAAI,CAAC,cAAc,CAAC,GAAGD,WAAW;EAClC,MAAMrD,GAAG,GAAG1B,OAAO,CAACD,OAAO,CAAC4B,MAAM,CAAC;IAAEC,OAAO,EAAEZ;EAAa,CAAC,CAAC;EAC7D,MAAMkB,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAE,gBAAeyC,QAAS,EAAC,EAAE3D,IAAI,EAAE;IACzDoB,OAAO,EAAE;MAAE,WAAW,EAAEyC;IAAO,CAAC;IAChCxC,aAAa,EAAEC,QAAQ;IACvB0C,MAAM,EAAED;EACZ,CAAC,CAAC;EACF,OAAO9C,GAAG,CAACjB,IAAI;AACnB,CAAC;AACDtC,OAAO,CAACO,cAAc,GAAGA,cAAc;AACvC,MAAMD,iBAAiB,GAAG,MAAAA,CAAOiG,MAAM,EAAE7D,KAAK,KAAK;EAC/C,MAAM8D,IAAI,GAAG,MAAM,IAAIvF,SAAS,CAACG,OAAO,CAAC;IACrCsB,KAAK,EAAEA;EACX,CAAC,CAAC,CAAC8D,IAAI,CAAC,CAAC;EACT,MAAMH,IAAI,GAAGG,IAAI,CAACC,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAK;IACtC,IAAIA,IAAI,CAACJ,MAAM,CAACK,WAAW,CAAC,CAAC,KAAKL,MAAM,CAACK,WAAW,CAAC,CAAC,EAAE;MACpD,OAAOD,IAAI,CAACpE,GAAG;IACnB;IACA,OAAOY,SAAS;EACpB,CAAC,CAAC,CAAC0D,MAAM,CAACC,OAAO,CAAC;EAClB,OAAOT,IAAI;AACf,CAAC;AACDrG,OAAO,CAACM,iBAAiB,GAAGA,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}