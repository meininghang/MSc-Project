{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst signing_1 = require(\"arseeding-arbundles/src/signing\");\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst currency_1 = __importDefault(require(\"../currency\"));\nconst web3 = __importStar(require(\"@solana/web3.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst async_retry_1 = __importDefault(require(\"async-retry\"));\nclass SolanaConfig extends currency_1.default {\n  constructor(config) {\n    super(config);\n    this.minConfirm = 1;\n    this.base = [\"lamports\", 1e9];\n  }\n  async getProvider() {\n    if (!this.providerInstance) {\n      this.providerInstance = new web3.Connection(this.providerUrl, {\n        confirmTransactionInitialTimeout: 60000,\n        commitment: \"confirmed\"\n      });\n    }\n    return this.providerInstance;\n  }\n  async getTx(txId) {\n    const connection = await this.getProvider();\n    const stx = await connection.getTransaction(txId, {\n      commitment: \"confirmed\"\n    });\n    if (!stx) throw new Error(\"Confirmed tx not found\");\n    const currentSlot = await connection.getSlot(\"confirmed\");\n    const amount = new bignumber_js_1.default(stx.meta.postBalances[1]).minus(new bignumber_js_1.default(stx.meta.preBalances[1]));\n    const tx = {\n      from: stx.transaction.message.accountKeys[0].toBase58(),\n      to: stx.transaction.message.accountKeys[1].toBase58(),\n      amount: amount,\n      blockHeight: new bignumber_js_1.default(stx.slot),\n      pending: false,\n      confirmed: currentSlot - stx.slot >= 1\n    };\n    return tx;\n  }\n  ownerToAddress(owner) {\n    if (typeof owner === \"string\") {\n      owner = Buffer.from(owner);\n    }\n    return bs58_1.default.encode(owner);\n  }\n  async sign(data) {\n    return await (await this.getSigner()).sign(data);\n  }\n  getSigner() {\n    if (!this.signer) {\n      // if (this.wallet?.name === \"Phantom\") {\n      //     this.signer = new PhantomSigner(this.wallet)\n      // } else {\n      //     this.signer = new InjectedSolanaSigner(this.wallet)\n      // }\n      this.signer = new signing_1.HexInjectedSolanaSigner(this.wallet);\n    }\n    return this.signer;\n  }\n  verify(pub, data, signature) {\n    // if (this.wallet?.name === \"Phantom\") {\n    //     return PhantomSigner.verify(pub, data, signature)\n    // }\n    // return InjectedSolanaSigner.verify(pub, data, signature);\n    return signing_1.HexInjectedSolanaSigner.verify(pub, data, signature);\n  }\n  async getCurrentHeight() {\n    return new bignumber_js_1.default((await (await this.getProvider()).getEpochInfo()).blockHeight);\n  }\n  async getFee(_amount, _to) {\n    // const connection = await this.getProvider()\n    // const block = await connection.getRecentBlockhash();\n    // const feeCalc = await connection.getFeeCalculatorForBlockhash(\n    //     block.blockhash,\n    // );\n    // return new BigNumber(feeCalc.value.lamportsPerSignature);\n    return new bignumber_js_1.default(5000); // hardcode it for now\n  }\n\n  async sendTx(data) {\n    return await this.wallet.sendTransaction(data, await this.getProvider(), {\n      skipPreflight: true\n    });\n  }\n  async createTx(amount, to, _fee) {\n    // TODO: figure out how to manually set fees\n    const pubkey = new web3.PublicKey(await this.getPublicKey());\n    const hash = await (0, async_retry_1.default)(async bail => {\n      var _a;\n      try {\n        return (await (await this.getProvider()).getRecentBlockhash()).blockhash;\n      } catch (e) {\n        if ((_a = e.message) === null || _a === void 0 ? void 0 : _a.includes(\"blockhash\")) throw e;else bail(e);\n        throw new Error(\"Unreachable\");\n      }\n    }, {\n      retries: 3,\n      minTimeout: 1000\n    });\n    const transaction = new web3.Transaction({\n      recentBlockhash: hash,\n      feePayer: pubkey\n    });\n    transaction.add(web3.SystemProgram.transfer({\n      fromPubkey: pubkey,\n      toPubkey: new web3.PublicKey(to),\n      lamports: +new bignumber_js_1.default(amount).toNumber()\n    }));\n    return {\n      tx: transaction,\n      txId: undefined\n    };\n  }\n  async getPublicKey() {\n    return this.wallet.publicKey.toBuffer();\n  }\n}\nexports.default = SolanaConfig;","map":{"version":3,"names":["signing_1","require","bignumber_js_1","__importDefault","currency_1","web3","__importStar","bs58_1","async_retry_1","SolanaConfig","default","constructor","config","minConfirm","base","getProvider","providerInstance","Connection","providerUrl","confirmTransactionInitialTimeout","commitment","getTx","txId","connection","stx","getTransaction","Error","currentSlot","getSlot","amount","meta","postBalances","minus","preBalances","tx","from","transaction","message","accountKeys","toBase58","to","blockHeight","slot","pending","confirmed","ownerToAddress","owner","Buffer","encode","sign","data","getSigner","signer","HexInjectedSolanaSigner","wallet","verify","pub","signature","getCurrentHeight","getEpochInfo","getFee","_amount","_to","sendTx","sendTransaction","skipPreflight","createTx","_fee","pubkey","PublicKey","getPublicKey","hash","bail","getRecentBlockhash","blockhash","e","_a","includes","retries","minTimeout","Transaction","recentBlockhash","feePayer","add","SystemProgram","transfer","fromPubkey","toPubkey","lamports","toNumber","undefined","publicKey","toBuffer","exports"],"sources":["../../../src/web/currencies/solana.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}