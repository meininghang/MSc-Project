{"ast":null,"code":"import { getEverpayTxMessage, signMessageAsync, transferAsync, verifySigAsync } from './lib/sign';\nimport { getEverpayBalance, getEverpayBalances, getEverpayInfo, getEverpayTransaction, getEverpayTransactions, getExpressInfo, getMintdEverpayTransactionByChainTxHash, postTx, getFees, getFee } from './api';\nimport { everpayTxVersion, getExpressHost, getEverpayHost } from './config';\nimport { getTimestamp, toBN, getAccountChainType, fromDecimalToUnit, genTokenTag, matchTokenTag, genExpressData, fromUnitToDecimalBN, genBundleData, getTokenBurnFeeByChainType, getChainDecimalByChainType, isArweaveChainPSTMode, getTokenByTag, isArweaveL2PSTTokenSymbol } from './utils/util';\nimport { checkParams } from './utils/check';\nimport { ERRORS } from './utils/errors';\nimport { utils } from 'ethers';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EverpayBase, EverpayAction, ChainType } from './types';\nexport * from './types';\nclass Everpay extends EverpayBase {\n  constructor(config) {\n    var _a, _b;\n    super();\n    this.getAccountChainType = getAccountChainType;\n    this.cacheHelper = async key => {\n      var _a, _b, _c;\n      const timestamp = getTimestamp();\n      // cache info 3 mins\n      if (((_a = this._cachedInfo[key]) === null || _a === void 0 ? void 0 : _a.value) != null && this._cachedInfo[key].timestamp > timestamp - 3 * 60) {\n        return (_b = this._cachedInfo[key]) === null || _b === void 0 ? void 0 : _b.value;\n      }\n      if (key === 'everpay') {\n        const value = await await getEverpayInfo(this._apiHost);\n        this._cachedInfo[key] = {\n          value,\n          timestamp\n        };\n      } else if (key === 'express') {\n        const value = await await getExpressInfo(this._expressHost);\n        this._cachedInfo[key] = {\n          value,\n          timestamp\n        };\n      }\n      return (_c = this._cachedInfo[key]) === null || _c === void 0 ? void 0 : _c.value;\n    };\n    this._config = {\n      ...config,\n      account: (_a = config === null || config === void 0 ? void 0 : config.account) !== null && _a !== void 0 ? _a : '',\n      chainType: (_b = config === null || config === void 0 ? void 0 : config.chainType) !== null && _b !== void 0 ? _b : ChainType.ethereum\n    };\n    this._apiHost = getEverpayHost(config === null || config === void 0 ? void 0 : config.debug);\n    this._expressHost = getExpressHost(config === null || config === void 0 ? void 0 : config.debug);\n    this._cachedInfo = {};\n  }\n  async info() {\n    const result = await this.cacheHelper('everpay');\n    return result;\n  }\n  async expressInfo() {\n    const result = await this.cacheHelper('express');\n    return result;\n  }\n  async balance(params) {\n    var _a, _b;\n    await this.info();\n    const {\n      tag,\n      account\n    } = params;\n    const acc = account !== null && account !== void 0 ? account : this._config.account;\n    const token = getTokenByTag(tag, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n    checkParams({\n      account: acc,\n      tag,\n      token\n    });\n    const mergedParams = {\n      tokenTag: genTokenTag(token),\n      account: acc\n    };\n    const everpayBalance = await getEverpayBalance(this._apiHost, mergedParams);\n    return fromDecimalToUnit(everpayBalance.balance.amount, everpayBalance.balance.decimals);\n  }\n  async balances(params) {\n    const info = await this.info();\n    params = params !== null && params !== void 0 ? params : {};\n    const {\n      account\n    } = params;\n    const acc = account !== null && account !== void 0 ? account : this._config.account;\n    checkParams({\n      account: acc\n    });\n    const mergedParams = {\n      account: acc\n    };\n    const everpayBalances = await getEverpayBalances(this._apiHost, mergedParams);\n    const balances = everpayBalances.balances.map(item => {\n      const tag = item.tag;\n      const token = info.tokenList.find(token => token.tag === tag);\n      return {\n        chainType: token === null || token === void 0 ? void 0 : token.chainType,\n        symbol: token === null || token === void 0 ? void 0 : token.symbol.toUpperCase(),\n        tag: token === null || token === void 0 ? void 0 : token.tag,\n        address: token.id,\n        balance: fromDecimalToUnit(item.amount, item.decimals)\n      };\n    });\n    return balances;\n  }\n  async getMergedTxsParams(params) {\n    var _a, _b;\n    const {\n      page,\n      tag,\n      action,\n      withoutAction\n    } = params;\n    const mergedParams = {};\n    if (page !== undefined) {\n      mergedParams.page = page;\n    }\n    if (tag !== undefined) {\n      await this.info();\n      const token = getTokenByTag(tag, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n      checkParams({\n        token\n      });\n      mergedParams.tokenTag = token.tag;\n    }\n    if (action !== undefined) {\n      checkParams({\n        action\n      });\n      mergedParams.action = action;\n    }\n    if (withoutAction !== undefined) {\n      mergedParams.withoutAction = withoutAction;\n    }\n    return mergedParams;\n  }\n  async txs(params) {\n    const mergedParams = await this.getMergedTxsParams(params);\n    return await getEverpayTransactions(this._apiHost, mergedParams);\n  }\n  async txsByAccount(params) {\n    var _a, _b;\n    checkParams({\n      account: (_a = params.account) !== null && _a !== void 0 ? _a : this._config.account\n    });\n    const mergedParams = await this.getMergedTxsParams(params);\n    mergedParams.account = (_b = params.account) !== null && _b !== void 0 ? _b : this._config.account;\n    return await getEverpayTransactions(this._apiHost, mergedParams);\n  }\n  async txByHash(everHash) {\n    checkParams({\n      everHash\n    });\n    return await getEverpayTransaction(this._apiHost, everHash);\n  }\n  async mintedTxByChainTxHash(chainTxHash) {\n    checkParams({\n      chainTxHash\n    });\n    return await getMintdEverpayTransactionByChainTxHash(this._apiHost, chainTxHash);\n  }\n  async fees() {\n    return await getFees(this._apiHost);\n  }\n  async fee(tag) {\n    var _a, _b;\n    await this.info();\n    const token = getTokenByTag(tag, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n    checkParams({\n      tag,\n      token\n    });\n    return await getFee(this._apiHost, genTokenTag(token));\n  }\n  async deposit(params) {\n    var _a, _b, _c;\n    await this.info();\n    const {\n      amount,\n      tag\n    } = params;\n    const from = this._config.account;\n    const token = getTokenByTag(tag, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n    const chainType = this._config.chainType;\n    checkParams({\n      account: from,\n      tag,\n      token,\n      amount\n    });\n    // arweave 上的 PST 充值必须是整数\n    if (isArweaveChainPSTMode(token) && chainType === ChainType.arweave && !isArweaveL2PSTTokenSymbol(token.symbol) && parseInt(amount) !== +amount) {\n      throw new Error(ERRORS.DEPOSIT_ARWEAVE_PST_MUST_BE_INTEGER);\n    }\n    const chainDecimal = getChainDecimalByChainType(token, chainType);\n    const value = utils.parseUnits(toBN(amount).toString(), chainDecimal);\n    return await transferAsync(this._config, (_c = this._cachedInfo.everpay) === null || _c === void 0 ? void 0 : _c.value, {\n      symbol: token.symbol,\n      token,\n      from: from !== null && from !== void 0 ? from : '',\n      value\n    });\n  }\n  // amount 为实际收款数量\n  async getEverpayTxWithoutSig(type, params) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n    await this.info();\n    const {\n      tag,\n      amount,\n      fee,\n      quickMode\n    } = params;\n    const token = getTokenByTag(tag, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n    const from = this._config.account;\n    let data = params.data;\n    let to = params === null || params === void 0 ? void 0 : params.to;\n    let decimalFeeBN = toBN(0);\n    let decimalOperateAmountBN = toBN(0);\n    let action = EverpayAction.transfer;\n    checkParams({\n      account: from,\n      tag,\n      token,\n      to\n    });\n    if (type === 'transfer') {\n      checkParams({\n        amount\n      });\n      action = EverpayAction.transfer;\n      decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_c = token === null || token === void 0 ? void 0 : token.decimals) !== null && _c !== void 0 ? _c : 0);\n    } else if (type === 'bundle') {\n      action = EverpayAction.bundle;\n      decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_d = token === null || token === void 0 ? void 0 : token.decimals) !== null && _d !== void 0 ? _d : 0);\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    } else if (type === 'set') {\n      action = EverpayAction.set;\n      decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_e = token === null || token === void 0 ? void 0 : token.decimals) !== null && _e !== void 0 ? _e : 0);\n    } else if (type === 'withdraw') {\n      checkParams({\n        amount\n      });\n      const chainType = params.chainType;\n      // PST 提现到 arweave 网络必须是整数\n      if (isArweaveChainPSTMode(token) && chainType === ChainType.arweave && !isArweaveL2PSTTokenSymbol(token === null || token === void 0 ? void 0 : token.symbol) && parseInt(amount) !== +amount) {\n        throw new Error(ERRORS.PST_WITHDARW_TO_ARWEAVE_MUST_BE_INTEGER);\n      }\n      const balance = await this.balance({\n        tag\n      });\n      const decimalBalanceBN = fromUnitToDecimalBN(balance, (_f = token === null || token === void 0 ? void 0 : token.decimals) !== null && _f !== void 0 ? _f : 0);\n      // 快速提现\n      if (quickMode === true) {\n        action = EverpayAction.transfer;\n        const expressInfo = await this.expressInfo();\n        const tokenTag = genTokenTag(token);\n        const foundExpressTokenData = expressInfo.tokens.find(t => matchTokenTag(tokenTag, t.tokenTag));\n        if (foundExpressTokenData == null) {\n          throw new Error(ERRORS.WITHDRAW_TOKEN_NOT_SUPPORT_QUICK_MODE);\n        }\n        const quickWithdrawLimitBN = fromUnitToDecimalBN(foundExpressTokenData.walletBalance, (_g = token === null || token === void 0 ? void 0 : token.decimals) !== null && _g !== void 0 ? _g : 0);\n        // 快速提现的手续费，只放入 data 字段中\n        const quickWithdrawFeeBN = fee !== undefined ? fromUnitToDecimalBN(fee, (_h = token === null || token === void 0 ? void 0 : token.decimals) !== null && _h !== void 0 ? _h : 0) : toBN(foundExpressTokenData.withdrawFee);\n        // 快速提现的 amount 为全部数量\n        decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_j = token === null || token === void 0 ? void 0 : token.decimals) !== null && _j !== void 0 ? _j : 0).plus(quickWithdrawFeeBN);\n        if (decimalOperateAmountBN.gt(decimalBalanceBN)) {\n          throw new Error(ERRORS.WITHDRAW_AMOUNT_LESS_THAN_FEE);\n        }\n        if (decimalOperateAmountBN.gt(quickWithdrawLimitBN)) {\n          throw new Error(ERRORS.INSUFFICIENT_QUICK_WITHDRAWAL_AMOUNT);\n        }\n        const expressData = genExpressData({\n          chainType,\n          to,\n          fee: quickWithdrawFeeBN.toString()\n        });\n        data = data !== undefined ? {\n          ...data,\n          ...expressData\n        } : {\n          ...expressData\n        };\n        // to 需要更改为快速提现收款账户\n        to = expressInfo.address;\n        // 普通提现\n      } else {\n        action = EverpayAction.withdraw;\n        if (fee !== undefined) {\n          decimalFeeBN = fromUnitToDecimalBN(fee, (_k = token === null || token === void 0 ? void 0 : token.decimals) !== null && _k !== void 0 ? _k : 0);\n        } else {\n          const feeItem = await getFee(this._apiHost, genTokenTag(token));\n          decimalFeeBN = toBN((_l = getTokenBurnFeeByChainType(token, feeItem, chainType)) !== null && _l !== void 0 ? _l : '0');\n        }\n        const targetChainType = chainType;\n        data = data !== undefined ? {\n          ...data,\n          targetChainType\n        } : {\n          targetChainType\n        };\n        decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_m = token === null || token === void 0 ? void 0 : token.decimals) !== null && _m !== void 0 ? _m : 0);\n        if (decimalOperateAmountBN.plus(decimalFeeBN).gt(decimalBalanceBN)) {\n          throw new Error(ERRORS.WITHDRAW_AMOUNT_LESS_THAN_FEE);\n        }\n      }\n    }\n    const everpayTxWithoutSig = {\n      tokenSymbol: token === null || token === void 0 ? void 0 : token.symbol,\n      action,\n      from,\n      to,\n      amount: decimalOperateAmountBN.toString(),\n      fee: decimalFeeBN.toString(),\n      feeRecipient: (_q = (_p = (_o = this._cachedInfo) === null || _o === void 0 ? void 0 : _o.everpay) === null || _p === void 0 ? void 0 : _p.value.feeRecipient) !== null && _q !== void 0 ? _q : '',\n      nonce: Date.now().toString(),\n      tokenID: token === null || token === void 0 ? void 0 : token.id,\n      chainType: token === null || token === void 0 ? void 0 : token.chainType,\n      chainID: token === null || token === void 0 ? void 0 : token.chainID,\n      data: data !== undefined ? JSON.stringify(data) : '',\n      version: everpayTxVersion\n    };\n    return everpayTxWithoutSig;\n  }\n  getEverpayTxMessage(everpayTxWithoutSig) {\n    return getEverpayTxMessage(everpayTxWithoutSig);\n  }\n  async signedEverpayTx(everpayTxWithoutSig) {\n    const messageData = getEverpayTxMessage(everpayTxWithoutSig);\n    const {\n      sig,\n      everHash\n    } = await signMessageAsync(this._config, messageData);\n    const everpayTx = {\n      ...everpayTxWithoutSig,\n      sig\n    };\n    return {\n      everpayTx,\n      everHash\n    };\n  }\n  async sendEverpayTx(everpayTxWithoutSig) {\n    const {\n      everpayTx,\n      everHash\n    } = await this.signedEverpayTx(everpayTxWithoutSig);\n    const postEverpayTxResult = await postTx(this._apiHost, everpayTx);\n    return {\n      ...postEverpayTxResult,\n      everpayTx,\n      everHash\n    };\n  }\n  async transfer(params) {\n    const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('transfer', params);\n    return await this.sendEverpayTx(everpayTxWithoutSig);\n  }\n  async withdraw(params) {\n    var _a;\n    await this.info();\n    const to = (_a = params.to) !== null && _a !== void 0 ? _a : this._config.account;\n    const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('withdraw', {\n      ...params,\n      to\n    });\n    return await this.sendEverpayTx(everpayTxWithoutSig);\n  }\n  async getBundleData(items, expiration) {\n    var _a, _b;\n    await this.info();\n    return genBundleData({\n      items,\n      tokenList: (_b = (_a = this._cachedInfo.everpay) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.tokenList,\n      // 设置 60s 过期\n      expiration: expiration !== null && expiration !== void 0 ? expiration : Math.round(Date.now() / 1000) + 60\n    });\n  }\n  async signBundleData(bundleData) {\n    const {\n      items,\n      expiration,\n      salt,\n      version\n    } = bundleData;\n    const {\n      sig\n    } = await signMessageAsync(this._config, JSON.stringify({\n      // 只签名这几个字段，并且顺序需要保持一致\n      items,\n      expiration,\n      salt,\n      version\n    }));\n    const sigs = bundleData.sigs != null ? bundleData.sigs : {};\n    sigs[this._config.account] = sig;\n    return {\n      items,\n      expiration,\n      salt,\n      version,\n      sigs\n    };\n  }\n  async bundle(params) {\n    const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('bundle', params);\n    return await this.sendEverpayTx(everpayTxWithoutSig);\n  }\n  async signAddTokenSet(newToken) {\n    const addToken = {\n      action: 'addToken',\n      operator: this._config.account,\n      salt: uuidv4(),\n      version: 'v1',\n      expiration: Math.round(Date.now() / 1000) + 100,\n      token: newToken,\n      sig: ''\n    };\n    const {\n      sig\n    } = await signMessageAsync(this._config, JSON.stringify({\n      action: addToken.action,\n      operator: addToken.operator,\n      salt: addToken.salt,\n      version: addToken.version,\n      expiration: addToken.expiration,\n      token: addToken.token\n    }));\n    addToken.sig = sig;\n    return addToken;\n  }\n  async signAddTargetChainSet(tokenTag, targetChain) {\n    const addTargetChain = {\n      action: 'addTargetChain',\n      operator: this._config.account,\n      salt: uuidv4(),\n      version: 'v1',\n      expiration: Math.round(Date.now() / 1000) + 100,\n      tokenTag: tokenTag,\n      targetChain: targetChain,\n      sig: ''\n    };\n    const {\n      sig\n    } = await signMessageAsync(this._config, JSON.stringify({\n      action: addTargetChain.action,\n      operator: addTargetChain.operator,\n      salt: addTargetChain.salt,\n      version: addTargetChain.version,\n      expiration: addTargetChain.expiration,\n      tokenTag: addTargetChain.tokenTag,\n      targetChain: addTargetChain.targetChain\n    }));\n    addTargetChain.sig = sig;\n    return addTargetChain;\n  }\n  async signTokenDisplaySet(tokenTag, display) {\n    const tokenDisplay = {\n      action: 'setTokenDisplay',\n      operator: this._config.account,\n      salt: uuidv4(),\n      version: 'v1',\n      expiration: Math.round(Date.now() / 1000) + 100,\n      tokenTag: tokenTag,\n      display: display,\n      sig: ''\n    };\n    const {\n      sig\n    } = await signMessageAsync(this._config, JSON.stringify({\n      action: tokenDisplay.action,\n      operator: tokenDisplay.operator,\n      salt: tokenDisplay.salt,\n      version: tokenDisplay.version,\n      expiration: tokenDisplay.expiration,\n      tokenTag: tokenDisplay.tokenTag,\n      display: tokenDisplay.display\n    }));\n    tokenDisplay.sig = sig;\n    return tokenDisplay;\n  }\n  async signOwnershipSet(newOwner) {\n    const ownership = {\n      action: 'transferOwnership',\n      operator: this._config.account,\n      salt: uuidv4(),\n      version: 'v1',\n      expiration: Math.round(Date.now() / 1000) + 100,\n      newOwner: newOwner,\n      sig: ''\n    };\n    const {\n      sig\n    } = await signMessageAsync(this._config, JSON.stringify({\n      action: ownership.action,\n      operator: ownership.operator,\n      salt: ownership.salt,\n      version: ownership.version,\n      expiration: ownership.expiration,\n      newOwner: ownership.newOwner\n    }));\n    ownership.sig = sig;\n    return ownership;\n  }\n  async setTx(setData) {\n    const setParams = {\n      amount: '0',\n      data: setData,\n      symbol: 'eth',\n      to: this._config.account\n    };\n    const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('set', setParams);\n    return await this.sendEverpayTx(everpayTxWithoutSig);\n  }\n  async verifyTx(tx) {\n    return await verifySigAsync(tx);\n  }\n}\nexport default Everpay;","map":{"version":3,"names":["getEverpayTxMessage","signMessageAsync","transferAsync","verifySigAsync","getEverpayBalance","getEverpayBalances","getEverpayInfo","getEverpayTransaction","getEverpayTransactions","getExpressInfo","getMintdEverpayTransactionByChainTxHash","postTx","getFees","getFee","everpayTxVersion","getExpressHost","getEverpayHost","getTimestamp","toBN","getAccountChainType","fromDecimalToUnit","genTokenTag","matchTokenTag","genExpressData","fromUnitToDecimalBN","genBundleData","getTokenBurnFeeByChainType","getChainDecimalByChainType","isArweaveChainPSTMode","getTokenByTag","isArweaveL2PSTTokenSymbol","checkParams","ERRORS","utils","v4","uuidv4","EverpayBase","EverpayAction","ChainType","Everpay","constructor","config","_a","_b","cacheHelper","key","_c","timestamp","_cachedInfo","value","_apiHost","_expressHost","_config","account","chainType","ethereum","debug","info","result","expressInfo","balance","params","tag","acc","token","everpay","tokenList","mergedParams","tokenTag","everpayBalance","amount","decimals","balances","everpayBalances","map","item","find","symbol","toUpperCase","address","id","getMergedTxsParams","page","action","withoutAction","undefined","txs","txsByAccount","txByHash","everHash","mintedTxByChainTxHash","chainTxHash","fees","fee","deposit","from","arweave","parseInt","Error","DEPOSIT_ARWEAVE_PST_MUST_BE_INTEGER","chainDecimal","parseUnits","toString","getEverpayTxWithoutSig","type","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","quickMode","data","to","decimalFeeBN","decimalOperateAmountBN","transfer","bundle","set","PST_WITHDARW_TO_ARWEAVE_MUST_BE_INTEGER","decimalBalanceBN","foundExpressTokenData","tokens","t","WITHDRAW_TOKEN_NOT_SUPPORT_QUICK_MODE","quickWithdrawLimitBN","walletBalance","quickWithdrawFeeBN","withdrawFee","plus","gt","WITHDRAW_AMOUNT_LESS_THAN_FEE","INSUFFICIENT_QUICK_WITHDRAWAL_AMOUNT","expressData","withdraw","feeItem","targetChainType","everpayTxWithoutSig","tokenSymbol","feeRecipient","nonce","Date","now","tokenID","chainID","JSON","stringify","version","signedEverpayTx","messageData","sig","everpayTx","sendEverpayTx","postEverpayTxResult","getBundleData","items","expiration","Math","round","signBundleData","bundleData","salt","sigs","signAddTokenSet","newToken","addToken","operator","signAddTargetChainSet","targetChain","addTargetChain","signTokenDisplaySet","display","tokenDisplay","signOwnershipSet","newOwner","ownership","setTx","setData","setParams","verifyTx","tx"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/everpay/esm/index.js"],"sourcesContent":["import { getEverpayTxMessage, signMessageAsync, transferAsync, verifySigAsync } from './lib/sign';\nimport { getEverpayBalance, getEverpayBalances, getEverpayInfo, getEverpayTransaction, getEverpayTransactions, getExpressInfo, getMintdEverpayTransactionByChainTxHash, postTx, getFees, getFee } from './api';\nimport { everpayTxVersion, getExpressHost, getEverpayHost } from './config';\nimport { getTimestamp, toBN, getAccountChainType, fromDecimalToUnit, genTokenTag, matchTokenTag, genExpressData, fromUnitToDecimalBN, genBundleData, getTokenBurnFeeByChainType, getChainDecimalByChainType, isArweaveChainPSTMode, getTokenByTag, isArweaveL2PSTTokenSymbol } from './utils/util';\nimport { checkParams } from './utils/check';\nimport { ERRORS } from './utils/errors';\nimport { utils } from 'ethers';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EverpayBase, EverpayAction, ChainType } from './types';\nexport * from './types';\nclass Everpay extends EverpayBase {\n    constructor(config) {\n        var _a, _b;\n        super();\n        this.getAccountChainType = getAccountChainType;\n        this.cacheHelper = async (key) => {\n            var _a, _b, _c;\n            const timestamp = getTimestamp();\n            // cache info 3 mins\n            if (((_a = this._cachedInfo[key]) === null || _a === void 0 ? void 0 : _a.value) != null &&\n                this._cachedInfo[key].timestamp > timestamp - 3 * 60) {\n                return (_b = this._cachedInfo[key]) === null || _b === void 0 ? void 0 : _b.value;\n            }\n            if (key === 'everpay') {\n                const value = await await getEverpayInfo(this._apiHost);\n                this._cachedInfo[key] = { value, timestamp };\n            }\n            else if (key === 'express') {\n                const value = await await getExpressInfo(this._expressHost);\n                this._cachedInfo[key] = { value, timestamp };\n            }\n            return (_c = this._cachedInfo[key]) === null || _c === void 0 ? void 0 : _c.value;\n        };\n        this._config = {\n            ...config,\n            account: (_a = config === null || config === void 0 ? void 0 : config.account) !== null && _a !== void 0 ? _a : '',\n            chainType: (_b = config === null || config === void 0 ? void 0 : config.chainType) !== null && _b !== void 0 ? _b : ChainType.ethereum\n        };\n        this._apiHost = getEverpayHost(config === null || config === void 0 ? void 0 : config.debug);\n        this._expressHost = getExpressHost(config === null || config === void 0 ? void 0 : config.debug);\n        this._cachedInfo = {};\n    }\n    async info() {\n        const result = await this.cacheHelper('everpay');\n        return result;\n    }\n    async expressInfo() {\n        const result = await this.cacheHelper('express');\n        return result;\n    }\n    async balance(params) {\n        var _a, _b;\n        await this.info();\n        const { tag, account } = params;\n        const acc = account !== null && account !== void 0 ? account : this._config.account;\n        const token = getTokenByTag(tag, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n        checkParams({ account: acc, tag, token });\n        const mergedParams = {\n            tokenTag: genTokenTag(token),\n            account: acc\n        };\n        const everpayBalance = await getEverpayBalance(this._apiHost, mergedParams);\n        return fromDecimalToUnit(everpayBalance.balance.amount, everpayBalance.balance.decimals);\n    }\n    async balances(params) {\n        const info = await this.info();\n        params = (params !== null && params !== void 0 ? params : {});\n        const { account } = params;\n        const acc = account !== null && account !== void 0 ? account : this._config.account;\n        checkParams({ account: acc });\n        const mergedParams = {\n            account: acc\n        };\n        const everpayBalances = await getEverpayBalances(this._apiHost, mergedParams);\n        const balances = everpayBalances.balances.map(item => {\n            const tag = item.tag;\n            const token = info.tokenList.find(token => token.tag === tag);\n            return {\n                chainType: token === null || token === void 0 ? void 0 : token.chainType,\n                symbol: token === null || token === void 0 ? void 0 : token.symbol.toUpperCase(),\n                tag: token === null || token === void 0 ? void 0 : token.tag,\n                address: token.id,\n                balance: fromDecimalToUnit(item.amount, item.decimals)\n            };\n        });\n        return balances;\n    }\n    async getMergedTxsParams(params) {\n        var _a, _b;\n        const { page, tag, action, withoutAction } = params;\n        const mergedParams = {};\n        if (page !== undefined) {\n            mergedParams.page = page;\n        }\n        if (tag !== undefined) {\n            await this.info();\n            const token = getTokenByTag(tag, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n            checkParams({ token });\n            mergedParams.tokenTag = token.tag;\n        }\n        if (action !== undefined) {\n            checkParams({ action });\n            mergedParams.action = action;\n        }\n        if (withoutAction !== undefined) {\n            mergedParams.withoutAction = withoutAction;\n        }\n        return mergedParams;\n    }\n    async txs(params) {\n        const mergedParams = await this.getMergedTxsParams(params);\n        return await getEverpayTransactions(this._apiHost, mergedParams);\n    }\n    async txsByAccount(params) {\n        var _a, _b;\n        checkParams({ account: (_a = params.account) !== null && _a !== void 0 ? _a : this._config.account });\n        const mergedParams = await this.getMergedTxsParams(params);\n        mergedParams.account = (_b = params.account) !== null && _b !== void 0 ? _b : this._config.account;\n        return await getEverpayTransactions(this._apiHost, mergedParams);\n    }\n    async txByHash(everHash) {\n        checkParams({ everHash });\n        return await getEverpayTransaction(this._apiHost, everHash);\n    }\n    async mintedTxByChainTxHash(chainTxHash) {\n        checkParams({ chainTxHash });\n        return await getMintdEverpayTransactionByChainTxHash(this._apiHost, chainTxHash);\n    }\n    async fees() {\n        return await getFees(this._apiHost);\n    }\n    async fee(tag) {\n        var _a, _b;\n        await this.info();\n        const token = getTokenByTag(tag, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n        checkParams({ tag, token });\n        return await getFee(this._apiHost, genTokenTag(token));\n    }\n    async deposit(params) {\n        var _a, _b, _c;\n        await this.info();\n        const { amount, tag } = params;\n        const from = this._config.account;\n        const token = getTokenByTag(tag, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n        const chainType = this._config.chainType;\n        checkParams({ account: from, tag, token, amount });\n        // arweave 上的 PST 充值必须是整数\n        if (isArweaveChainPSTMode(token) && chainType === ChainType.arweave && !isArweaveL2PSTTokenSymbol(token.symbol) && parseInt(amount) !== +amount) {\n            throw new Error(ERRORS.DEPOSIT_ARWEAVE_PST_MUST_BE_INTEGER);\n        }\n        const chainDecimal = getChainDecimalByChainType(token, chainType);\n        const value = utils.parseUnits(toBN(amount).toString(), chainDecimal);\n        return await transferAsync(this._config, (_c = this._cachedInfo.everpay) === null || _c === void 0 ? void 0 : _c.value, {\n            symbol: token.symbol,\n            token,\n            from: from !== null && from !== void 0 ? from : '',\n            value\n        });\n    }\n    // amount 为实际收款数量\n    async getEverpayTxWithoutSig(type, params) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n        await this.info();\n        const { tag, amount, fee, quickMode } = params;\n        const token = getTokenByTag(tag, (_b = (_a = this._cachedInfo) === null || _a === void 0 ? void 0 : _a.everpay) === null || _b === void 0 ? void 0 : _b.value.tokenList);\n        const from = this._config.account;\n        let data = params.data;\n        let to = params === null || params === void 0 ? void 0 : params.to;\n        let decimalFeeBN = toBN(0);\n        let decimalOperateAmountBN = toBN(0);\n        let action = EverpayAction.transfer;\n        checkParams({ account: from, tag, token, to });\n        if (type === 'transfer') {\n            checkParams({ amount });\n            action = EverpayAction.transfer;\n            decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_c = token === null || token === void 0 ? void 0 : token.decimals) !== null && _c !== void 0 ? _c : 0);\n        }\n        else if (type === 'bundle') {\n            action = EverpayAction.bundle;\n            decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_d = token === null || token === void 0 ? void 0 : token.decimals) !== null && _d !== void 0 ? _d : 0);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        }\n        else if (type === 'set') {\n            action = EverpayAction.set;\n            decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_e = token === null || token === void 0 ? void 0 : token.decimals) !== null && _e !== void 0 ? _e : 0);\n        }\n        else if (type === 'withdraw') {\n            checkParams({ amount });\n            const chainType = params.chainType;\n            // PST 提现到 arweave 网络必须是整数\n            if (isArweaveChainPSTMode(token) && chainType === ChainType.arweave && !isArweaveL2PSTTokenSymbol(token === null || token === void 0 ? void 0 : token.symbol) && parseInt(amount) !== +amount) {\n                throw new Error(ERRORS.PST_WITHDARW_TO_ARWEAVE_MUST_BE_INTEGER);\n            }\n            const balance = await this.balance({ tag });\n            const decimalBalanceBN = fromUnitToDecimalBN(balance, (_f = token === null || token === void 0 ? void 0 : token.decimals) !== null && _f !== void 0 ? _f : 0);\n            // 快速提现\n            if (quickMode === true) {\n                action = EverpayAction.transfer;\n                const expressInfo = await this.expressInfo();\n                const tokenTag = genTokenTag(token);\n                const foundExpressTokenData = expressInfo.tokens.find(t => matchTokenTag(tokenTag, t.tokenTag));\n                if (foundExpressTokenData == null) {\n                    throw new Error(ERRORS.WITHDRAW_TOKEN_NOT_SUPPORT_QUICK_MODE);\n                }\n                const quickWithdrawLimitBN = fromUnitToDecimalBN(foundExpressTokenData.walletBalance, (_g = token === null || token === void 0 ? void 0 : token.decimals) !== null && _g !== void 0 ? _g : 0);\n                // 快速提现的手续费，只放入 data 字段中\n                const quickWithdrawFeeBN = fee !== undefined\n                    ? fromUnitToDecimalBN(fee, (_h = token === null || token === void 0 ? void 0 : token.decimals) !== null && _h !== void 0 ? _h : 0)\n                    : toBN(foundExpressTokenData.withdrawFee);\n                // 快速提现的 amount 为全部数量\n                decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_j = token === null || token === void 0 ? void 0 : token.decimals) !== null && _j !== void 0 ? _j : 0).plus(quickWithdrawFeeBN);\n                if (decimalOperateAmountBN.gt(decimalBalanceBN)) {\n                    throw new Error(ERRORS.WITHDRAW_AMOUNT_LESS_THAN_FEE);\n                }\n                if (decimalOperateAmountBN.gt(quickWithdrawLimitBN)) {\n                    throw new Error(ERRORS.INSUFFICIENT_QUICK_WITHDRAWAL_AMOUNT);\n                }\n                const expressData = genExpressData({\n                    chainType, to, fee: quickWithdrawFeeBN.toString()\n                });\n                data = data !== undefined ? { ...data, ...expressData } : { ...expressData };\n                // to 需要更改为快速提现收款账户\n                to = expressInfo.address;\n                // 普通提现\n            }\n            else {\n                action = EverpayAction.withdraw;\n                if (fee !== undefined) {\n                    decimalFeeBN = fromUnitToDecimalBN(fee, (_k = token === null || token === void 0 ? void 0 : token.decimals) !== null && _k !== void 0 ? _k : 0);\n                }\n                else {\n                    const feeItem = await getFee(this._apiHost, genTokenTag(token));\n                    decimalFeeBN = toBN((_l = getTokenBurnFeeByChainType(token, feeItem, chainType)) !== null && _l !== void 0 ? _l : '0');\n                }\n                const targetChainType = chainType;\n                data = data !== undefined ? { ...data, targetChainType } : { targetChainType };\n                decimalOperateAmountBN = fromUnitToDecimalBN(amount, (_m = token === null || token === void 0 ? void 0 : token.decimals) !== null && _m !== void 0 ? _m : 0);\n                if (decimalOperateAmountBN.plus(decimalFeeBN).gt(decimalBalanceBN)) {\n                    throw new Error(ERRORS.WITHDRAW_AMOUNT_LESS_THAN_FEE);\n                }\n            }\n        }\n        const everpayTxWithoutSig = {\n            tokenSymbol: token === null || token === void 0 ? void 0 : token.symbol,\n            action,\n            from,\n            to,\n            amount: decimalOperateAmountBN.toString(),\n            fee: decimalFeeBN.toString(),\n            feeRecipient: (_q = (_p = (_o = this._cachedInfo) === null || _o === void 0 ? void 0 : _o.everpay) === null || _p === void 0 ? void 0 : _p.value.feeRecipient) !== null && _q !== void 0 ? _q : '',\n            nonce: Date.now().toString(),\n            tokenID: token === null || token === void 0 ? void 0 : token.id,\n            chainType: token === null || token === void 0 ? void 0 : token.chainType,\n            chainID: token === null || token === void 0 ? void 0 : token.chainID,\n            data: data !== undefined ? JSON.stringify(data) : '',\n            version: everpayTxVersion\n        };\n        return everpayTxWithoutSig;\n    }\n    getEverpayTxMessage(everpayTxWithoutSig) {\n        return getEverpayTxMessage(everpayTxWithoutSig);\n    }\n    async signedEverpayTx(everpayTxWithoutSig) {\n        const messageData = getEverpayTxMessage(everpayTxWithoutSig);\n        const { sig, everHash } = await signMessageAsync(this._config, messageData);\n        const everpayTx = {\n            ...everpayTxWithoutSig,\n            sig\n        };\n        return { everpayTx, everHash };\n    }\n    async sendEverpayTx(everpayTxWithoutSig) {\n        const { everpayTx, everHash } = await this.signedEverpayTx(everpayTxWithoutSig);\n        const postEverpayTxResult = await postTx(this._apiHost, everpayTx);\n        return {\n            ...postEverpayTxResult,\n            everpayTx,\n            everHash\n        };\n    }\n    async transfer(params) {\n        const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('transfer', params);\n        return await this.sendEverpayTx(everpayTxWithoutSig);\n    }\n    async withdraw(params) {\n        var _a;\n        await this.info();\n        const to = (_a = params.to) !== null && _a !== void 0 ? _a : this._config.account;\n        const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('withdraw', {\n            ...params,\n            to\n        });\n        return await this.sendEverpayTx(everpayTxWithoutSig);\n    }\n    async getBundleData(items, expiration) {\n        var _a, _b;\n        await this.info();\n        return genBundleData({\n            items,\n            tokenList: (_b = (_a = this._cachedInfo.everpay) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.tokenList,\n            // 设置 60s 过期\n            expiration: expiration !== null && expiration !== void 0 ? expiration : Math.round(Date.now() / 1000) + 60\n        });\n    }\n    async signBundleData(bundleData) {\n        const { items, expiration, salt, version } = bundleData;\n        const { sig } = await signMessageAsync(this._config, JSON.stringify({\n            // 只签名这几个字段，并且顺序需要保持一致\n            items, expiration, salt, version\n        }));\n        const sigs = bundleData.sigs != null ? bundleData.sigs : {};\n        sigs[this._config.account] = sig;\n        return {\n            items, expiration, salt, version, sigs\n        };\n    }\n    async bundle(params) {\n        const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('bundle', params);\n        return await this.sendEverpayTx(everpayTxWithoutSig);\n    }\n    async signAddTokenSet(newToken) {\n        const addToken = {\n            action: 'addToken',\n            operator: this._config.account,\n            salt: uuidv4(),\n            version: 'v1',\n            expiration: Math.round(Date.now() / 1000) + 100,\n            token: newToken,\n            sig: ''\n        };\n        const { sig } = await signMessageAsync(this._config, JSON.stringify({\n            action: addToken.action,\n            operator: addToken.operator,\n            salt: addToken.salt,\n            version: addToken.version,\n            expiration: addToken.expiration,\n            token: addToken.token\n        }));\n        addToken.sig = sig;\n        return addToken;\n    }\n    async signAddTargetChainSet(tokenTag, targetChain) {\n        const addTargetChain = {\n            action: 'addTargetChain',\n            operator: this._config.account,\n            salt: uuidv4(),\n            version: 'v1',\n            expiration: Math.round(Date.now() / 1000) + 100,\n            tokenTag: tokenTag,\n            targetChain: targetChain,\n            sig: ''\n        };\n        const { sig } = await signMessageAsync(this._config, JSON.stringify({\n            action: addTargetChain.action,\n            operator: addTargetChain.operator,\n            salt: addTargetChain.salt,\n            version: addTargetChain.version,\n            expiration: addTargetChain.expiration,\n            tokenTag: addTargetChain.tokenTag,\n            targetChain: addTargetChain.targetChain\n        }));\n        addTargetChain.sig = sig;\n        return addTargetChain;\n    }\n    async signTokenDisplaySet(tokenTag, display) {\n        const tokenDisplay = {\n            action: 'setTokenDisplay',\n            operator: this._config.account,\n            salt: uuidv4(),\n            version: 'v1',\n            expiration: Math.round(Date.now() / 1000) + 100,\n            tokenTag: tokenTag,\n            display: display,\n            sig: ''\n        };\n        const { sig } = await signMessageAsync(this._config, JSON.stringify({\n            action: tokenDisplay.action,\n            operator: tokenDisplay.operator,\n            salt: tokenDisplay.salt,\n            version: tokenDisplay.version,\n            expiration: tokenDisplay.expiration,\n            tokenTag: tokenDisplay.tokenTag,\n            display: tokenDisplay.display\n        }));\n        tokenDisplay.sig = sig;\n        return tokenDisplay;\n    }\n    async signOwnershipSet(newOwner) {\n        const ownership = {\n            action: 'transferOwnership',\n            operator: this._config.account,\n            salt: uuidv4(),\n            version: 'v1',\n            expiration: Math.round(Date.now() / 1000) + 100,\n            newOwner: newOwner,\n            sig: ''\n        };\n        const { sig } = await signMessageAsync(this._config, JSON.stringify({\n            action: ownership.action,\n            operator: ownership.operator,\n            salt: ownership.salt,\n            version: ownership.version,\n            expiration: ownership.expiration,\n            newOwner: ownership.newOwner\n        }));\n        ownership.sig = sig;\n        return ownership;\n    }\n    async setTx(setData) {\n        const setParams = { amount: '0', data: setData, symbol: 'eth', to: this._config.account };\n        const everpayTxWithoutSig = await this.getEverpayTxWithoutSig('set', setParams);\n        return await this.sendEverpayTx(everpayTxWithoutSig);\n    }\n    async verifyTx(tx) {\n        return await verifySigAsync(tx);\n    }\n}\nexport default Everpay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}