{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst ethers_1 = require(\"ethers\");\nconst constants_1 = require(\"../../constants\");\nclass InjectedEthereumSigner {\n  constructor(provider) {\n    this.ownerLength = constants_1.SIG_CONFIG[constants_1.SignatureConfig.ETHEREUM].pubLength;\n    this.signatureLength = constants_1.SIG_CONFIG[constants_1.SignatureConfig.ETHEREUM].sigLength;\n    this.signatureType = constants_1.SignatureConfig.ETHEREUM;\n    this.signer = provider.getSigner();\n  }\n  async setPublicKey() {\n    const address = \"sign this message to get public key\";\n    const signedMsg = await this.signer.signMessage(address);\n    const hash = await ethers_1.ethers.utils.hashMessage(address);\n    const recoveredKey = ethers_1.ethers.utils.recoverPublicKey(ethers_1.ethers.utils.arrayify(hash), signedMsg);\n    this.publicKey = Buffer.from(ethers_1.ethers.utils.arrayify(recoveredKey));\n  }\n  async sign(message) {\n    if (!this.publicKey) {\n      await this.setPublicKey();\n    }\n    const sig = await this.signer.signMessage(message);\n    return Buffer.from(sig.slice(2), \"hex\");\n  }\n  static verify(pk, message, signature) {\n    const address = ethers_1.ethers.utils.computeAddress(pk);\n    return ethers_1.ethers.utils.verifyMessage(message, signature) === address;\n  }\n}\nexports.default = InjectedEthereumSigner;","map":{"version":3,"names":["ethers_1","require","constants_1","InjectedEthereumSigner","constructor","provider","ownerLength","SIG_CONFIG","SignatureConfig","ETHEREUM","pubLength","signatureLength","sigLength","signatureType","signer","getSigner","setPublicKey","address","signedMsg","signMessage","hash","ethers","utils","hashMessage","recoveredKey","recoverPublicKey","arrayify","publicKey","Buffer","from","sign","message","sig","slice","verify","pk","signature","computeAddress","verifyMessage","exports","default"],"sources":["injectedEthereumSigner.ts"],"sourcesContent":[null],"mappings":";;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAEA,MAAAC,WAAA,GAAAD,OAAA;AAEA,MAAqBE,sBAAsB;EAQzCC,YAAYC,QAAuC;IAL1C,KAAAC,WAAW,GAAWJ,WAAA,CAAAK,UAAU,CAACL,WAAA,CAAAM,eAAe,CAACC,QAAQ,CAAC,CAACC,SAAS;IACpE,KAAAC,eAAe,GACtBT,WAAA,CAAAK,UAAU,CAACL,WAAA,CAAAM,eAAe,CAACC,QAAQ,CAAC,CAACG,SAAS;IACvC,KAAAC,aAAa,GAAoBX,WAAA,CAAAM,eAAe,CAACC,QAAQ;IAGhE,IAAI,CAACK,MAAM,GAAGT,QAAQ,CAACU,SAAS,EAAE;EACpC;EAEA,MAAMC,YAAYA,CAAA;IAChB,MAAMC,OAAO,GAAG,qCAAqC;IACrD,MAAMC,SAAS,GAAG,MAAM,IAAI,CAACJ,MAAM,CAACK,WAAW,CAACF,OAAO,CAAC;IACxD,MAAMG,IAAI,GAAG,MAAMpB,QAAA,CAAAqB,MAAM,CAACC,KAAK,CAACC,WAAW,CAACN,OAAO,CAAC;IACpD,MAAMO,YAAY,GAAGxB,QAAA,CAAAqB,MAAM,CAACC,KAAK,CAACG,gBAAgB,CAChDzB,QAAA,CAAAqB,MAAM,CAACC,KAAK,CAACI,QAAQ,CAACN,IAAI,CAAC,EAC3BF,SAAS,CACV;IACD,IAAI,CAACS,SAAS,GAAGC,MAAM,CAACC,IAAI,CAAC7B,QAAA,CAAAqB,MAAM,CAACC,KAAK,CAACI,QAAQ,CAACF,YAAY,CAAC,CAAC;EACnE;EAEA,MAAMM,IAAIA,CAACC,OAAmB;IAC5B,IAAI,CAAC,IAAI,CAACJ,SAAS,EAAE;MACnB,MAAM,IAAI,CAACX,YAAY,EAAE;;IAE3B,MAAMgB,GAAG,GAAG,MAAM,IAAI,CAAClB,MAAM,CAACK,WAAW,CAACY,OAAO,CAAC;IAClD,OAAOH,MAAM,CAACC,IAAI,CAACG,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;EACzC;EAEA,OAAOC,MAAMA,CACXC,EAAU,EACVJ,OAAmB,EACnBK,SAAqB;IAErB,MAAMnB,OAAO,GAAGjB,QAAA,CAAAqB,MAAM,CAACC,KAAK,CAACe,cAAc,CAACF,EAAE,CAAC;IAC/C,OAAOnC,QAAA,CAAAqB,MAAM,CAACC,KAAK,CAACgB,aAAa,CAACP,OAAO,EAAEK,SAAS,CAAC,KAAKnB,OAAO;EACnE;;AAtCFsB,OAAA,CAAAC,OAAA,GAAArC,sBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}