{"ast":null,"code":"var Class = require(\"o3\").Class,\n  Frame = require(\"./Frame\"),\n  cache = require(\"u3\").cache;\nvar FrameStringParser = Class(Object, {\n  prototype: {\n    stackParser: null,\n    frameParser: null,\n    locationParsers: null,\n    constructor: function (options) {\n      Class.prototype.merge.call(this, options);\n    },\n    getFrames: function (frameStrings, functionValues) {\n      var frames = [];\n      for (var index = 0, length = frameStrings.length; index < length; ++index) frames[index] = this.getFrame(frameStrings[index], functionValues[index]);\n      return frames;\n    },\n    getFrame: function (frameString, functionValue) {\n      var config = {\n        frameString: frameString,\n        functionValue: functionValue\n      };\n      return new Frame(config);\n    }\n  }\n});\nmodule.exports = {\n  getClass: cache(function () {\n    return FrameStringParser;\n  }),\n  getInstance: cache(function () {\n    var FrameStringParser = this.getClass();\n    var instance = new FrameStringParser();\n    return instance;\n  })\n};","map":{"version":3,"names":["Class","require","Frame","cache","FrameStringParser","Object","prototype","stackParser","frameParser","locationParsers","constructor","options","merge","call","getFrames","frameStrings","functionValues","frames","index","length","getFrame","frameString","functionValue","config","module","exports","getClass","getInstance","instance"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/error-polyfill/lib/non-v8/FrameStringParser.js"],"sourcesContent":["var Class = require(\"o3\").Class,\r\n    Frame = require(\"./Frame\"),\r\n    cache = require(\"u3\").cache;\r\n\r\nvar FrameStringParser = Class(Object, {\r\n    prototype: {\r\n        stackParser: null,\r\n        frameParser: null,\r\n        locationParsers: null,\r\n        constructor: function (options) {\r\n            Class.prototype.merge.call(this, options);\r\n        },\r\n        getFrames: function (frameStrings, functionValues) {\r\n            var frames = [];\r\n            for (var index = 0, length = frameStrings.length; index < length; ++index)\r\n                frames[index] = this.getFrame(frameStrings[index], functionValues[index]);\r\n            return frames;\r\n        },\r\n        getFrame: function (frameString, functionValue) {\r\n            var config = {\r\n                frameString: frameString,\r\n                functionValue: functionValue\r\n            };\r\n            return new Frame(config);\r\n        }\r\n    }\r\n});\r\n\r\nmodule.exports = {\r\n    getClass: cache(function () {\r\n        return FrameStringParser;\r\n    }),\r\n    getInstance: cache(function () {\r\n        var FrameStringParser = this.getClass();\r\n        var instance = new FrameStringParser();\r\n        return instance;\r\n    })\r\n};"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,IAAI,CAAC,CAACD,KAAK;EAC3BE,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;EAC1BE,KAAK,GAAGF,OAAO,CAAC,IAAI,CAAC,CAACE,KAAK;AAE/B,IAAIC,iBAAiB,GAAGJ,KAAK,CAACK,MAAM,EAAE;EAClCC,SAAS,EAAE;IACPC,WAAW,EAAE,IAAI;IACjBC,WAAW,EAAE,IAAI;IACjBC,eAAe,EAAE,IAAI;IACrBC,WAAW,EAAE,SAAAA,CAAUC,OAAO,EAAE;MAC5BX,KAAK,CAACM,SAAS,CAACM,KAAK,CAACC,IAAI,CAAC,IAAI,EAAEF,OAAO,CAAC;IAC7C,CAAC;IACDG,SAAS,EAAE,SAAAA,CAAUC,YAAY,EAAEC,cAAc,EAAE;MAC/C,IAAIC,MAAM,GAAG,EAAE;MACf,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAGJ,YAAY,CAACI,MAAM,EAAED,KAAK,GAAGC,MAAM,EAAE,EAAED,KAAK,EACrED,MAAM,CAACC,KAAK,CAAC,GAAG,IAAI,CAACE,QAAQ,CAACL,YAAY,CAACG,KAAK,CAAC,EAAEF,cAAc,CAACE,KAAK,CAAC,CAAC;MAC7E,OAAOD,MAAM;IACjB,CAAC;IACDG,QAAQ,EAAE,SAAAA,CAAUC,WAAW,EAAEC,aAAa,EAAE;MAC5C,IAAIC,MAAM,GAAG;QACTF,WAAW,EAAEA,WAAW;QACxBC,aAAa,EAAEA;MACnB,CAAC;MACD,OAAO,IAAIpB,KAAK,CAACqB,MAAM,CAAC;IAC5B;EACJ;AACJ,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG;EACbC,QAAQ,EAAEvB,KAAK,CAAC,YAAY;IACxB,OAAOC,iBAAiB;EAC5B,CAAC,CAAC;EACFuB,WAAW,EAAExB,KAAK,CAAC,YAAY;IAC3B,IAAIC,iBAAiB,GAAG,IAAI,CAACsB,QAAQ,CAAC,CAAC;IACvC,IAAIE,QAAQ,GAAG,IAAIxB,iBAAiB,CAAC,CAAC;IACtC,OAAOwB,QAAQ;EACnB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}