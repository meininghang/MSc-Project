{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from 'vuex';\nimport Storage from \"@/components/storage\";\nimport { getBundleFee, getItemMeta, genAPI } from \"arseeding-js\";\nimport Bignumber from \"bignumber.js\";\nimport fileList from \"@/components/commonComponent/list\";\nimport { reportUrl } from '@/utils/constant/apiConst';\nimport { paymentStatus } from '@/utils/constant/chainConst';\nimport uploadFile from '@/components/__dialog/uploadFileDialog';\nimport chartBanner from \"@/components/chartBanner\";\nexport default {\n  name: \"HomePage\",\n  components: {\n    Storage,\n    fileList,\n    uploadFile,\n    chartBanner\n  },\n  data() {\n    return {\n      fileList: [],\n      instance: {},\n      pubId: undefined,\n      tableData: undefined,\n      fileInfo: undefined,\n      ShowNextStep: false,\n      balance: undefined,\n      selectedSymbol: '',\n      loading: false,\n      symbolList: [],\n      selectSymbolValue: \"ETH\",\n      totalTableLength: 0,\n      percentage: 0,\n      showPercentage: false,\n      sendApi: undefined,\n      changeFileName: ''\n    };\n  },\n  computed: {\n    ...mapGetters({\n      accountStr: 'account/account',\n      allOrderList: 'order/getOrders'\n      // selectedSymbol: 'account/selectedSymbol',\n      // balance: 'account/balance',\n      // instance: 'account/instanceInfo'\n    }),\n\n    usedNumber() {\n      return Math.round(this.balance * 0.76 * 100) / 100;\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    if (to.name === 'FileDetail') {\n      this.setKeepAliveInclude(['HomePage']);\n    } else if (to.name === 'Deposit') {\n      this.setKeepAliveInclude(['HomePage']);\n    } else {\n      this.setKeepAliveInclude([]);\n    }\n    // next()\n    setTimeout(() => {\n      next();\n    }, 10);\n  },\n  async mounted() {\n    await this.getList();\n  },\n  methods: {\n    ...mapActions({\n      getAccount: 'account/getMetaMaskAccount',\n      getBalances: \"account/getAccountBalances\",\n      getOrders: 'order/getOrders',\n      searchList: 'order/searchArweave',\n      getInfo: 'account/getAccountInfo',\n      updateSelectSymbol: \"account/updateSelectSymbol\",\n      getAllSymbolPrice: \"account/getAllSymbolPrice\",\n      getFeeInfo: \"account/getFeeInfo\",\n      setKeepAliveInclude: \"keepAliveInclude/setKeepAliveInclude\"\n    }),\n    // 拉取列表，包括获取当前存储大小\n    async getList() {\n      this.loading = true;\n      this.percentage = 0;\n      // 获取当前上传列表\n      // await this.getAccount()\n      await this.getOrders(this.accountStr);\n      // 获取当前账号的tokenList\n      const tokenList = await this.getInfo();\n      // 当前账户上面的所有balance\n      const list = await this.getBalances(this.accountStr);\n      const totalStorage = await this.formatSymbol(tokenList, list);\n      // 拉取余额最多的一个symbol\n      list.sort((a, b) => {\n        return b.balance - a.balance;\n      });\n      this.selectedSymbol = list[0].symbol;\n      // 获取当前symbol的balance\n      this.balance = list[0].balance;\n      const usedNumber = this.getUsedStorage();\n      this.$refs['chartMain'].inOrigin(usedNumber, totalStorage);\n      await this.getMyStorageList();\n    },\n    async getMyStorageList() {\n      this.tableData = this.allOrderList.slice(0, 10);\n      console.log(44444, this.tableData);\n      this.totalTableLength = this.allOrderList.length;\n      this.loading = false;\n      this.$nextTick(async () => {\n        for (let i = 0; i < this.tableData.length; i++) {\n          if (this.tableData[i].paymentStatus !== paymentStatus.EXPIRED) {\n            const id = this.tableData[i].itemId;\n            this.tableData[i].metaInfo = await getItemMeta(reportUrl, id);\n            this.tableData[i] = this.formatMetaInfo(this.tableData[i]);\n          } else {\n            this.tableData[i].metaInfo = {};\n          }\n        }\n      });\n    },\n    async combineFileList(files, tags) {\n      this.showPercentage = true;\n      this.percentage = 10;\n      // const selectedSymbol = this.selectedSymbol ? this.selectedSymbol : JSON.parse(sessionStorage.getItem(\"SELECT_SYMBOL_INFO\"))\n      const file = files.file;\n      const fee = await getBundleFee(reportUrl, files.file.size, this.selectedSymbol);\n      const formatedFee = new Bignumber(fee.finalFee).dividedBy(new Bignumber(10).pow(fee.decimals)).toString();\n      if (+this.balance >= +formatedFee) {\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onload = async () => {\n          const data = reader.result;\n          // const data = new Blob([reader.result], { type: files.file.type })\n          const ops = {\n            tags: [{\n              name: \"FileName\",\n              value: this.changeFileName ? this.changeFileName : file.name\n            }, {\n              name: \"Content-Type\",\n              value: file.type\n            },\n            // The official version has two new fixed tags\n            // todo... need modify you app name\n            {\n              name: \"APP-Name\",\n              value: \"weave\"\n            }, {\n              name: \"community\",\n              value: \"permaDao\"\n            },\n            // Facilitate adot to obtain data and display increased\n            {\n              name: \"file-size\",\n              value: String(files.file.size)\n            }, ...tags]\n          };\n          if (!this.sendApi) {\n            this.sendApi = await genAPI(window.ethereum);\n          }\n          this.percentage = 30;\n          let interval;\n          if (this.percentage <= 50) {\n            interval = setInterval(() => {\n              this.percentage = this.percentage + 1;\n              if (this.percentage > 70) {\n                clearInterval(interval);\n              }\n            }, 100);\n          }\n          // Submit data and pay interface (this interface is not applicable because progress display is required)\n          try {\n            const res = await this.sendApi.sendAndPay(reportUrl, data, this.selectedSymbol, ops);\n            this.percentage = 70;\n            this.submitResp = JSON.stringify(res);\n          } catch (e) {\n            this.showPercentage = false;\n            this.ShowNextStep = false;\n            this.percentage = 0;\n            this.$message.error(e.message);\n          }\n          this.percentage = 100;\n          setTimeout(() => {\n            this.showPercentage = false;\n            this.percentage = 0;\n          }, 1000);\n          await this.getOrders(this.accountStr);\n          await this.getList();\n          this.ShowNextStep = false;\n        };\n      } else {\n        alert(`need ${formatedFee} ${this.selectedSymbol} to upload`);\n      }\n    },\n    uploadTagAndFile(tagList) {\n      this.combineFileList(this.fileInfo, tagList);\n    },\n    changeName(name) {\n      this.changeFileName = name;\n    },\n    formatMetaInfo(item) {\n      let info = {\n        ...item,\n        fileName: item.id,\n        fileType: '',\n        tags: []\n      };\n      if (item.metaInfo && item.metaInfo.tags && item.metaInfo.tags.length !== 0) {\n        const list = item.metaInfo.tags.filter(item => item.name && (item.name.toUpperCase() === 'name'.toUpperCase() || item.name.toUpperCase() === 'fileName'.toUpperCase()));\n        const typeList = item.metaInfo.tags.filter(item => item.name && (item.name.toUpperCase() === 'Content-Type'.toUpperCase() || item.name.toUpperCase() === 'type'.toUpperCase()));\n        info.fileName = list && list.length !== 0 ? list[0].value : item.id;\n        info.fileType = typeList && typeList.length !== 0 ? typeList[0].value : '';\n        info.tags = item.metaInfo.tags;\n        const collectList = info.tags.filter(item => item.name.toUpperCase() === 'weave-collect'.toUpperCase());\n        item.isCollect = collectList && collectList.length !== 0;\n      }\n      return info;\n    },\n    uploadFile(fileList) {\n      this.fileInfo = fileList;\n      this.ShowNextStep = true;\n      if (this.ShowNextStep) {\n        this.$refs['uploadFile'].openDialog();\n      }\n    },\n    cancelUploadBox() {\n      this.ShowNextStep = false;\n    },\n    changeTableData(value) {\n      this.tableData = this.tableData.map(item => {\n        if (item.itemId === value.itemId) {\n          item.showButton = true;\n        } else {\n          item.showButton = false;\n        }\n        return item;\n      });\n    },\n    changePagination(pageIndex) {\n      this.tableData = this.allOrderList.slice((pageIndex - 1) * 10, pageIndex * 10);\n      this.$nextTick(async () => {\n        for (let i = 0; i < this.tableData.length; i++) {\n          if (this.tableData[i].paymentStatus !== paymentStatus.EXPIRED) {\n            const id = this.tableData[i].itemId;\n            this.tableData[i].metaInfo = await getItemMeta(reportUrl, id);\n            this.tableData[i] = this.formatMetaInfo(this.tableData[i]);\n          } else {\n            this.tableData[i].metaInfo = {};\n          }\n        }\n      });\n    },\n    async formatSymbol(tokenList, balances) {\n      const formatToken = tokenList.map(item => {\n        return {\n          tag: item.tag,\n          symbol: item.symbol\n        };\n      });\n      //将tokenList和balance列表合并\n      let list = balances.reduce((pre, cur) => {\n        let target = pre.find(ee => ee.symbol === cur.symbol);\n        if (target) {\n          Object.assign(target, cur);\n          // } else {\n          //   pre.push(cur)\n        }\n\n        return pre;\n      }, formatToken);\n      // 提取列表里面的symbol，用来求price\n      let symbolStr = list.map(item => item.symbol);\n      symbolStr = symbolStr.join(\",\");\n      // console.info('请求price的币种', symbolStr)\n      // 获取symbol列表里面对应的price\n      const resultObj = await this.getAllSymbolPrice(symbolStr);\n      // 整理列表，只提取value和symbol\n      const resultList = Object.values(resultObj.data).map(item => {\n        return {\n          value: item.value,\n          symbol: item.symbol\n        };\n      });\n      // console.log('实际返回的price列表', resultList)\n      let final = list.reduce((pre, cur) => {\n        let target = pre.find(ee => ee.symbol === cur.symbol);\n        if (target) {\n          Object.assign(target, cur);\n        } else {\n          pre.push(cur);\n        }\n        return pre;\n      }, resultList);\n      this.symbolList = final;\n      const number = final.reduce(function (total, cur) {\n        const value = cur.value ? cur.value : 0;\n        return total + Math.round(cur.balance * value * 100) / 100;\n      }, 0);\n      const feeInfo = await this.getFeeInfo('USDC');\n      // total*（10^decimals）/ finalFee\n      const decimalNumber = Math.pow(10, Number(feeInfo.data.decimals));\n      const resul = number * decimalNumber / Number(feeInfo.data.finalFee);\n      return Math.round(resul * 100) / 100;\n    },\n    getUsedStorage() {\n      const sizeList = this.allOrderList.map(item => item.size);\n      const sizeTotal = sizeList.reduce(function (total, cur) {\n        return total + cur;\n      }, 0);\n      return Math.round(sizeTotal / 1024 / 1024 * 100) / 100;\n    }\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","Storage","getBundleFee","getItemMeta","genAPI","Bignumber","fileList","reportUrl","paymentStatus","uploadFile","chartBanner","name","components","data","instance","pubId","undefined","tableData","fileInfo","ShowNextStep","balance","selectedSymbol","loading","symbolList","selectSymbolValue","totalTableLength","percentage","showPercentage","sendApi","changeFileName","computed","accountStr","allOrderList","usedNumber","Math","round","beforeRouteLeave","to","from","next","setKeepAliveInclude","setTimeout","mounted","getList","methods","getAccount","getBalances","getOrders","searchList","getInfo","updateSelectSymbol","getAllSymbolPrice","getFeeInfo","tokenList","list","totalStorage","formatSymbol","sort","a","b","symbol","getUsedStorage","$refs","inOrigin","getMyStorageList","slice","console","log","length","$nextTick","i","EXPIRED","id","itemId","metaInfo","formatMetaInfo","combineFileList","files","tags","file","fee","size","formatedFee","finalFee","dividedBy","pow","decimals","toString","reader","FileReader","readAsArrayBuffer","onload","result","ops","value","type","String","window","ethereum","interval","setInterval","clearInterval","res","sendAndPay","submitResp","JSON","stringify","e","$message","error","message","alert","uploadTagAndFile","tagList","changeName","item","info","fileName","fileType","filter","toUpperCase","typeList","collectList","isCollect","openDialog","cancelUploadBox","changeTableData","map","showButton","changePagination","pageIndex","balances","formatToken","tag","reduce","pre","cur","target","find","ee","Object","assign","symbolStr","join","resultObj","resultList","values","final","push","number","total","feeInfo","decimalNumber","Number","resul","sizeList","sizeTotal"],"sources":["src/pages/workBenchPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"work-bench-page__main\">\r\n    <div class=\"chart-display-show\">\r\n      <chartBanner ref=\"chartMain\"></chartBanner>\r\n    </div>\r\n    <div class=\"content-top\">\r\n      <div class=\"box-style left-storage\">\r\n        <storage ref=\"storage\" :loading=\"loading\" :usedNumber=\"usedNumber\"></storage>\r\n      </div>\r\n      <div class=\"box-style right-upload\">\r\n        <el-upload\r\n            class=\"upload-box\"\r\n            :file-list=\"fileList\"\r\n            :show-file-list=\"false\"\r\n            drag\r\n            action\r\n            :http-request=\"uploadFile\"\r\n            multiple>\r\n          <div class=\"upload-box-content\">\r\n            <i class=\"el-icon-upload upload-icon-i\" style=\"margin-right: 5px\"></i>\r\n            <p>\r\n              Drop file here, or <span style=\"color: #6447F2\">browse. </span>one file at a time.\r\n            </p>\r\n          </div>\r\n        </el-upload>\r\n      </div>\r\n    </div>\r\n    <div class=\"content-list\">\r\n      <fileList :allOrderList=\"tableData\" :totalTableLength=\"totalTableLength\" :loading=\"loading\" @changeTableData=\"changeTableData\" @changePagination=\"changePagination\"></fileList>\r\n    </div>\r\n<!--    <uploadFile ref=\"uploadFile\" :fileInfo=\"fileInfo\" @uploadTagAndFile=\"uploadTagAndFile\" @cancelUploadBox=\"cancelUploadBox\" @changeName=\"changeName\"></uploadFile>-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapGetters} from 'vuex'\r\nimport Storage from \"@/components/storage\"\r\nimport {getBundleFee, getItemMeta, genAPI} from \"arseeding-js\"\r\nimport Bignumber from \"bignumber.js\"\r\nimport fileList from \"@/components/commonComponent/list\"\r\nimport { reportUrl} from '@/utils/constant/apiConst'\r\nimport { paymentStatus} from '@/utils/constant/chainConst'\r\nimport uploadFile from '@/components/__dialog/uploadFileDialog'\r\nimport chartBanner from \"@/components/chartBanner\"\r\n\r\nexport default {\r\n  name: \"HomePage\",\r\n  components: {\r\n    Storage,\r\n    fileList,\r\n    uploadFile,\r\n    chartBanner\r\n  },\r\n  data() {\r\n    return {\r\n      fileList: [],\r\n      instance: {},\r\n      pubId: undefined,\r\n      tableData: undefined,\r\n      fileInfo: undefined,\r\n      ShowNextStep: false,\r\n      balance: undefined,\r\n      selectedSymbol: '',\r\n      loading: false,\r\n      symbolList: [],\r\n      selectSymbolValue: \"ETH\",\r\n      totalTableLength: 0,\r\n      percentage: 0,\r\n      showPercentage: false,\r\n      sendApi: undefined,\r\n      changeFileName: '',\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      accountStr: 'account/account',\r\n      allOrderList: 'order/getOrders',\r\n      // selectedSymbol: 'account/selectedSymbol',\r\n      // balance: 'account/balance',\r\n      // instance: 'account/instanceInfo'\r\n    }),\r\n    usedNumber() {\r\n      return Math.round((this.balance * 0.76) * 100) / 100\r\n    }\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    if(to.name === 'FileDetail'){\r\n      this.setKeepAliveInclude(['HomePage'])\r\n    } else if(to.name === 'Deposit') {\r\n      this.setKeepAliveInclude(['HomePage'])\r\n    } else {\r\n      this.setKeepAliveInclude([])\r\n    }\r\n    // next()\r\n    setTimeout(() => { next(); }, 10);\r\n  },\r\n  async mounted() {\r\n    await this.getList()\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      getAccount: 'account/getMetaMaskAccount',\r\n      getBalances: \"account/getAccountBalances\",\r\n      getOrders: 'order/getOrders',\r\n      searchList: 'order/searchArweave',\r\n      getInfo: 'account/getAccountInfo',\r\n      updateSelectSymbol: \"account/updateSelectSymbol\",\r\n      getAllSymbolPrice: \"account/getAllSymbolPrice\",\r\n      getFeeInfo: \"account/getFeeInfo\",\r\n      setKeepAliveInclude: \"keepAliveInclude/setKeepAliveInclude\"\r\n    }),\r\n    // 拉取列表，包括获取当前存储大小\r\n    async getList() {\r\n      this.loading = true\r\n      this.percentage = 0\r\n      // 获取当前上传列表\r\n      // await this.getAccount()\r\n      await this.getOrders(this.accountStr)\r\n      // 获取当前账号的tokenList\r\n      const tokenList = await this.getInfo()\r\n      // 当前账户上面的所有balance\r\n      const list = await this.getBalances(this.accountStr)\r\n      const totalStorage = await this.formatSymbol(tokenList, list)\r\n      // 拉取余额最多的一个symbol\r\n      list.sort((a, b) => { return b.balance-a.balance})\r\n      this.selectedSymbol = list[0].symbol\r\n      // 获取当前symbol的balance\r\n      this.balance = list[0].balance\r\n      const usedNumber = this.getUsedStorage()\r\n      this.$refs['chartMain'].inOrigin(usedNumber, totalStorage)\r\n      await this.getMyStorageList()\r\n\r\n    },\r\n\r\n    async getMyStorageList() {\r\n      this.tableData = this.allOrderList.slice(0, 10)\r\n      console.log(44444, this.tableData)\r\n      this.totalTableLength = this.allOrderList.length\r\n      this.loading = false\r\n      this.$nextTick(async () => {\r\n        for (let i = 0; i < this.tableData.length; i++) {\r\n          if (this.tableData[i].paymentStatus !== paymentStatus.EXPIRED) {\r\n            const id = this.tableData[i].itemId\r\n            this.tableData[i].metaInfo = await getItemMeta(reportUrl, id)\r\n            this.tableData[i] = this.formatMetaInfo(this.tableData[i])\r\n          } else {\r\n            this.tableData[i].metaInfo = {}\r\n          }\r\n        }\r\n      })\r\n    },\r\n    async combineFileList(files, tags) {\r\n      this.showPercentage = true\r\n      this.percentage = 10\r\n      // const selectedSymbol = this.selectedSymbol ? this.selectedSymbol : JSON.parse(sessionStorage.getItem(\"SELECT_SYMBOL_INFO\"))\r\n      const file = files.file\r\n      const fee = await getBundleFee(reportUrl, files.file.size, this.selectedSymbol)\r\n      const formatedFee = new Bignumber(fee.finalFee).dividedBy(new Bignumber(10).pow(fee.decimals)).toString()\r\n      if (+this.balance >= +formatedFee) {\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(file);\r\n        reader.onload= async () => {\r\n          const data = reader.result\r\n          // const data = new Blob([reader.result], { type: files.file.type })\r\n          const ops = {\r\n            tags: [\r\n              {name: \"FileName\", value:this.changeFileName ? this.changeFileName : file.name},\r\n              {name: \"Content-Type\",value:file.type},\r\n              // The official version has two new fixed tags\r\n                // todo... need modify you app name\r\n              {name: \"APP-Name\",value:\"weave\"},\r\n              {name: \"community\",value:\"permaDao\"},\r\n              // Facilitate adot to obtain data and display increased\r\n              {name: \"file-size\",value: String(files.file.size)},\r\n              ...tags\r\n            ]\r\n          }\r\n          if (!this.sendApi) {\r\n            this.sendApi = await genAPI(window.ethereum)\r\n          }\r\n          this.percentage = 30\r\n          let interval\r\n          if (this.percentage <= 50) {\r\n            interval = setInterval(() => {\r\n              this.percentage = this.percentage + 1\r\n              if (this.percentage > 70) {\r\n                clearInterval(interval)\r\n              }\r\n            }, 100)\r\n          }\r\n          // Submit data and pay interface (this interface is not applicable because progress display is required)\r\n          try {\r\n            const res = await this.sendApi.sendAndPay(reportUrl, data, this.selectedSymbol, ops)\r\n            this.percentage = 70\r\n            this.submitResp = JSON.stringify(res)\r\n          } catch (e) {\r\n            this.showPercentage = false\r\n            this.ShowNextStep = false\r\n            this.percentage = 0\r\n            this.$message.error(e.message)\r\n          }\r\n          this.percentage = 100\r\n          setTimeout(() => {\r\n            this.showPercentage = false\r\n            this.percentage = 0\r\n          }, 1000)\r\n          await this.getOrders(this.accountStr)\r\n          await this.getList()\r\n          this.ShowNextStep = false\r\n        }\r\n      } else {\r\n        alert(`need ${formatedFee} ${this.selectedSymbol} to upload`)\r\n      }\r\n    },\r\n    uploadTagAndFile(tagList) {\r\n      this.combineFileList(this.fileInfo, tagList)\r\n    },\r\n    changeName(name) {\r\n      this.changeFileName = name\r\n    },\r\n    formatMetaInfo(item) {\r\n      let info = {\r\n        ...item,\r\n        fileName: item.id,\r\n        fileType: '',\r\n        tags: []\r\n      }\r\n      if (item.metaInfo && item.metaInfo.tags && item.metaInfo.tags.length !== 0) {\r\n        const list = item.metaInfo.tags.filter(item => item.name && (item.name.toUpperCase() === 'name'.toUpperCase() || item.name.toUpperCase() === 'fileName'.toUpperCase()))\r\n        const typeList = item.metaInfo.tags.filter(item => item.name && (item.name.toUpperCase() === 'Content-Type'.toUpperCase() || item.name.toUpperCase() === 'type'.toUpperCase()))\r\n        info.fileName = list && list.length !==0 ? list[0].value : item.id\r\n        info.fileType = typeList && typeList.length !==0 ? typeList[0].value : ''\r\n        info.tags = item.metaInfo.tags\r\n        const collectList = info.tags.filter(item => item.name.toUpperCase() === 'weave-collect'.toUpperCase())\r\n        item.isCollect = collectList && collectList.length !== 0\r\n      }\r\n      return info\r\n    },\r\n    uploadFile(fileList){\r\n      this.fileInfo = fileList\r\n      this.ShowNextStep = true\r\n      if (this.ShowNextStep) {\r\n        this.$refs['uploadFile'].openDialog()\r\n      }\r\n    },\r\n    cancelUploadBox() {\r\n      this.ShowNextStep = false\r\n    },\r\n    changeTableData(value) {\r\n      this.tableData = this.tableData.map(item => {\r\n        if (item.itemId === value.itemId) {\r\n          item.showButton = true\r\n        } else {\r\n          item.showButton = false\r\n        }\r\n        return item\r\n      })\r\n    },\r\n    changePagination(pageIndex) {\r\n      this.tableData = this.allOrderList.slice((pageIndex - 1) * 10, pageIndex * 10)\r\n      this.$nextTick(async () => {\r\n        for (let i = 0; i < this.tableData.length; i++) {\r\n          if (this.tableData[i].paymentStatus !== paymentStatus.EXPIRED) {\r\n            const id = this.tableData[i].itemId\r\n            this.tableData[i].metaInfo = await getItemMeta(reportUrl, id)\r\n            this.tableData[i] = this.formatMetaInfo(this.tableData[i])\r\n          } else {\r\n            this.tableData[i].metaInfo = {}\r\n          }\r\n        }\r\n      })\r\n    },\r\n    async formatSymbol(tokenList, balances) {\r\n      const formatToken = tokenList.map(item => {\r\n        return {\r\n          tag: item.tag,\r\n          symbol: item.symbol\r\n        }\r\n      })\r\n      //将tokenList和balance列表合并\r\n      let list = balances.reduce((pre,cur) => {\r\n        let target = pre.find(ee => ee.symbol === cur.symbol)\r\n        if (target) {\r\n          Object.assign(target, cur)\r\n          // } else {\r\n          //   pre.push(cur)\r\n        }\r\n        return pre\r\n      }, formatToken)\r\n      // 提取列表里面的symbol，用来求price\r\n      let symbolStr = list.map(item => item.symbol)\r\n      symbolStr = symbolStr.join(\",\")\r\n      // console.info('请求price的币种', symbolStr)\r\n      // 获取symbol列表里面对应的price\r\n      const resultObj = await this.getAllSymbolPrice(symbolStr)\r\n      // 整理列表，只提取value和symbol\r\n      const resultList = Object.values(resultObj.data).map(item => {\r\n        return {\r\n          value: item.value,\r\n          symbol: item.symbol\r\n        }\r\n      })\r\n      // console.log('实际返回的price列表', resultList)\r\n      let final = list.reduce((pre,cur) => {\r\n        let target = pre.find(ee => ee.symbol === cur.symbol)\r\n        if (target) {\r\n          Object.assign(target, cur)\r\n        } else {\r\n          pre.push(cur)\r\n        }\r\n        return pre\r\n      }, resultList)\r\n      this.symbolList = final\r\n      const number = final.reduce(function(total, cur){\r\n        const value = cur.value ? cur.value : 0\r\n        return total + Math.round((cur.balance * value) * 100) / 100\r\n      }, 0)\r\n      const feeInfo = await this.getFeeInfo('USDC')\r\n      // total*（10^decimals）/ finalFee\r\n      const decimalNumber = (Math.pow(10, Number(feeInfo.data.decimals)))\r\n      const resul = number * decimalNumber / Number(feeInfo.data.finalFee)\r\n      return Math.round(resul * 100) / 100\r\n    },\r\n    getUsedStorage() {\r\n      const sizeList = this.allOrderList.map(item => item.size)\r\n      const sizeTotal = sizeList.reduce(function(total, cur) {\r\n        return total + cur\r\n      }, 0)\r\n      return Math.round((sizeTotal / 1024 / 1024) * 100) / 100\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.work-bench-page__main {\r\n  width: 1024px;\r\n  min-height: 90vh;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n\r\n  .content-top {\r\n    margin-top: 30px;\r\n    margin-bottom: 20px;\r\n    height: 300px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    .box-style {\r\n      height: 300px;\r\n      //border: 3px solid #222326;\r\n      border-radius: 20px;\r\n      background: #f5f5f5;\r\n    }\r\n\r\n    .left-storage {\r\n      width: 600px;\r\n\r\n    }\r\n\r\n    .right-upload {\r\n      width: 400px;\r\n    }\r\n\r\n    .upload-box-content {\r\n      height: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-wrap: wrap;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .upload-box {\r\n      width: 100%;\r\n      height: 100%;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .el-icon-upload {\r\n      font-size: 48px;\r\n      //line-height: 100px;\r\n    }\r\n\r\n    .upload-icon-i {\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  .content-list {\r\n    min-height: 300px;\r\n    border-radius: 20px;\r\n    //background: #f5f5f5;\r\n    margin-bottom: 30px;\r\n    margin-top: 30px;\r\n  }\r\n\r\n  .el-upload, .el-upload-dragger {\r\n    width: 100%;\r\n    height: 100%;\r\n    //border: 3px solid #222326;\r\n  }\r\n\r\n  .el-upload-dragger {\r\n    border-radius: 20px;\r\n    border: 3px dashed #d9d9d9;\r\n  }\r\n\r\n  .el-upload-dragger .el-icon-upload {\r\n    margin: 0;\r\n  }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}