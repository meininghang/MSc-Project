{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from \"vuex\";\nimport { ChainType, tokenListHasLogo } from '@/utils/constant/chainConst';\nimport { toBN } from '@/utils/util';\nimport { providers } from \"ethers\";\nimport redStone from 'redstone-api';\nexport default {\n  name: 'Deposit',\n  data() {\n    return {\n      tokenListHasLogo,\n      value: \"\",\n      chooseConsume: '',\n      inputNumber: undefined,\n      buyNumber: undefined,\n      consumeNumber: undefined,\n      sendParam: undefined,\n      amount: '0',\n      balance: '0',\n      toARPrice: undefined,\n      newCurrencyInfo: undefined,\n      isReady: false,\n      canNotPay: false,\n      hasPriceNumber: false,\n      options: [{\n        value: 'Ethereum',\n        label: 'Ethereum',\n        iconStyle: 'eth-icon-style'\n        // },\n        // {\n        //   value: 'BSC',\n        //   label: 'BSC',\n        //   iconStyle: 'bsc-icon-style'\n        // },\n        // {\n        //   value: 'Moonbeam',\n        //   label: 'Moonbeam',\n        //   iconStyle: 'mbm-icon-style'\n      }],\n\n      symbolList: [],\n      allTokenList: []\n    };\n  },\n  computed: {\n    ...mapGetters({\n      accountStr: 'account/account',\n      publishOrderList: 'order/getPublishOrders'\n    })\n  },\n  async mounted() {\n    this.isReady = true;\n    await this.getSelectList();\n    this.isReady = true;\n    // const network = await window.ethereum.networkVersion\n    const provider = new providers.Web3Provider(window.ethereum);\n    const network = await provider.getNetwork();\n    this.checkChainId(network.chainId);\n    this.changeConnectChain();\n  },\n  methods: {\n    ...mapActions({\n      getInfo: 'account/getAccountInfo',\n      getAllSymbolPrice: \"account/getAllSymbolPrice\",\n      buyDeposit: 'account/buyDeposit',\n      getBalances: \"account/getAccountBalances\",\n      getFeeInfo: \"account/getFeeInfo\",\n      getFee: \"account/getFee\"\n    }),\n    backToHome() {\n      this.$router.push({\n        name: \"HomePage\"\n      });\n    },\n    checkChainId(id) {\n      if (id === 1) {\n        this.value = 'Ethereum';\n      } else if (id === 1284) {\n        this.value = 'Moonbeam';\n      } else if (id === 56) {\n        this.value = 'BSC';\n      }\n      this.symbolList = this.allTokenList.filter(item => item.chainType.toLocaleLowerCase().includes(this.value.toLocaleLowerCase()));\n    },\n    async getSelectList() {\n      // Gets the tokenList for the current account\n      const tokenList = await this.getInfo();\n      const formatToken = tokenList.map(item => {\n        return {\n          tag: item.tag,\n          symbol: item.symbol,\n          crossChainInfoList: item.crossChainInfoList\n        };\n      });\n      const balances = await this.getBalances(this.accountStr);\n      // Merge the tokenList and balance list\n      let list = balances.reduce((pre, cur) => {\n        let target = pre.find(ee => ee.symbol === cur.symbol);\n        if (target) {\n          Object.assign(target, cur);\n        }\n        return pre;\n      }, formatToken);\n      // Extract the symbol from the list and use it to find the price\n      let symbolStr = list.map(item => item.symbol);\n      symbolStr = symbolStr.join(\",\");\n      // Get the corresponding price from the symbol list\n      const resultObj = await this.getAllSymbolPrice(symbolStr);\n      const resultList = Object.values(resultObj.data).map(item => {\n        return {\n          value: item.value,\n          symbol: item.symbol\n        };\n      });\n      let final = list.reduce((pre, cur) => {\n        let target = pre.find(ee => ee.symbol === cur.symbol);\n        if (target) {\n          Object.assign(target, cur);\n        } else {\n          pre.push(cur);\n        }\n        return pre;\n      }, resultList);\n      this.symbolList = final;\n      this.allTokenList = final;\n    },\n    inputConsumeNumber() {\n      if (!this.consumeNumber) {\n        return;\n      }\n      this.buyNumber = Math.round(Number(this.consumeNumber) * Number(this.toARPrice) * 1024 * 1000) / 1000 || 0;\n      this.sendParam = {\n        ...this.sendParam,\n        amount: this.consumeNumber\n      };\n    },\n    async buySapce() {\n      if (!this.chooseConsume) {\n        return;\n      }\n      this.toARPrice = undefined;\n      const pricceObj = this.symbolList.filter(item => item.symbol === this.chooseConsume);\n      this.balance = pricceObj[0].balance;\n      const provider = new providers.Web3Provider(window.ethereum);\n      const balanceList = await provider.getBalance(this.accountStr);\n      console.log(balanceList);\n      try {\n        this.hasPriceNumber = true;\n        const pri = await redStone.getPrice([\"AR\", `${this.chooseConsume}`]);\n        this.newCurrencyInfo = pri[`${this.chooseConsume}`];\n        this.canNotPay = !pri[`${this.chooseConsume}`].symbol;\n        this.amount = Math.round(pri[`${this.chooseConsume}`].value * this.balance * 100) / 100;\n        const total = Math.round(pri[`${this.chooseConsume}`].value / pri['AR'].value * 100) / 100 || 0;\n        this.toARPrice = Math.round(total * 0.76 * 100) / 100;\n      } catch (e) {\n        this.amount = 0;\n        this.hasPriceNumber = false;\n        this.chooseConsume = '';\n        this.canNotPay = false;\n        this.$message.error('This currency is not supported');\n      }\n      this.buyNumber = undefined;\n      this.sendParam = {\n        account: this.accountStr,\n        tag: pricceObj[0].tag,\n        amount: this.consumeNumber,\n        chainType: this.value.toLowerCase()\n      };\n    },\n    async buyStorage() {\n      if (!this.sendParam) {\n        return this.$message.error(\"please input amount\");\n      }\n      try {\n        await this.buyDeposit(this.sendParam);\n        this.$message.success('deposit success');\n      } catch (e) {\n        this.consumeNumber = '';\n        this.buyNumber = '';\n        this.$message.error('deposit error');\n      }\n    },\n    // buySapce(number) {\n    //   const pricceObj = this.priceList.filter(item => item.symbol === this.value)\n    //\n    // }\n    async connectAfterAddAsync(chainId, params) {\n      try {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId\n          }]\n        });\n      } catch (switchError) {\n        // This error code indicates that the chain has not been added to MetaMask.\n        if (switchError.code === 4902) {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [params]\n          });\n        } else {\n          // handle other \"switch\" errors\n          throw switchError;\n        }\n      }\n    },\n    async changeConnectChain(type) {\n      const chainType = type;\n      if (chainType === ChainType.ethereum) {\n        const chainId = '0x' + toBN(1).toString(16);\n        await this.connectAfterAddAsync(chainId, {});\n      } else if (chainType === ChainType.moon) {\n        const chainId = '0x' + toBN(1284).toString(16);\n        await this.connectAfterAddAsync(chainId, {\n          chainId: chainId,\n          chainName: 'Moonbeam',\n          nativeCurrency: {\n            name: 'GLMR',\n            symbol: 'GLMR',\n            decimals: 18\n          },\n          rpcUrls: ['https://rpc.api.moonbeam.network'],\n          blockExplorerUrls: ['https://moonscan.io/']\n        });\n        // } else if (chainType === ChainType.bsc) {\n        //   const chainId = '0x' + toBN(97).toString(16)\n        //   await this.connectAfterAddAsync(chainId, {\n        //     chainId: chainId,\n        //     chainName: 'BSC Testnet',\n        //     nativeCurrency: {\n        //       name: 'BNB',\n        //       symbol: 'BNB',\n        //       decimals: 18\n        //     },\n        //     rpcUrls: ['https://data-seed-prebsc-1-s1.binance.org:8545'],\n        //     blockExplorerUrls: ['https://testnet.bscscan.com/']\n        //   })\n      } else if (chainType === ChainType.bsc) {\n        const chainId = '0x' + toBN(56).toString(16);\n        await this.connectAfterAddAsync(chainId, {\n          chainId: chainId,\n          chainName: 'BSC Mainnet',\n          nativeCurrency: {\n            name: 'BNB',\n            symbol: 'BNB',\n            decimals: 18\n          },\n          rpcUrls: ['https://bsc-dataseed1.ninicoin.io'],\n          blockExplorerUrls: ['https://bscscan.com/']\n        });\n      }\n      this.symbolList = this.allTokenList.filter(item => item.chainType.toLocaleLowerCase().includes(this.value.toLocaleLowerCase()));\n    }\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","ChainType","tokenListHasLogo","toBN","providers","redStone","name","data","value","chooseConsume","inputNumber","undefined","buyNumber","consumeNumber","sendParam","amount","balance","toARPrice","newCurrencyInfo","isReady","canNotPay","hasPriceNumber","options","label","iconStyle","symbolList","allTokenList","computed","accountStr","publishOrderList","mounted","getSelectList","provider","Web3Provider","window","ethereum","network","getNetwork","checkChainId","chainId","changeConnectChain","methods","getInfo","getAllSymbolPrice","buyDeposit","getBalances","getFeeInfo","getFee","backToHome","$router","push","id","filter","item","chainType","toLocaleLowerCase","includes","tokenList","formatToken","map","tag","symbol","crossChainInfoList","balances","list","reduce","pre","cur","target","find","ee","Object","assign","symbolStr","join","resultObj","resultList","values","final","inputConsumeNumber","Math","round","Number","buySapce","pricceObj","balanceList","getBalance","console","log","pri","getPrice","total","e","$message","error","account","toLowerCase","buyStorage","success","connectAfterAddAsync","params","request","method","switchError","code","type","toString","moon","chainName","nativeCurrency","decimals","rpcUrls","blockExplorerUrls","bsc"],"sources":["src/pages/depositPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"deposit-page__main\">\r\n    <div class=\"deposit-page-back-homepage\" @click=\"backToHome\">\r\n      <i class=\"el-icon-back\"></i>\r\n      BACK\r\n    </div>\r\n    <div class=\"deposit-page-box\">\r\n      <div class=\"deposit-page-title\">\r\n        <div class=\"deposit-page-name\">\r\n          <p style=\"font-size: 18px;color: #09244B;font-weight: 600;margin-bottom: 6px\">BUY SPACE</p>\r\n          <p style=\"color: #A9A8B0;font-size: 14px\">Powered by the everpay protocol</p>\r\n        </div>\r\n        <div>\r\n          <el-select\r\n              class=\"deposit-select-style\"\r\n              v-model=\"value\"\r\n              :disabled=\"false\"\r\n              placeholder=\"choose network\"\r\n              @change=\"changeConnectChain\">\r\n            <template slot=\"prefix\">\r\n              <img v-if=\"value && value === 'Ethereum'\" src=\"../assets/svg/icon_ethereum.svg\" alt=\"\" style=\"margin-top: 7px;\">\r\n              <!--              <img v-else-if=\"value && value === 'BSC'\" src=\"../assets/svg/icon_bsc.svg\" alt=\"\" style=\"margin-top: 7px\">-->\r\n              <!--              <img v-else-if=\"value && value === 'Moonbeam'\" src=\"../assets/svg/icon_mbm.svg\" alt=\"\" style=\"margin-top: 7px\">-->\r\n              <i v-else class=\"el-icon-loading\" style=\"font-size: 24px;margin-top: 7px\"></i>\r\n            </template>\r\n            <el-option\r\n                v-for=\"item in options\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :class=\"item.iconStyle\"\r\n                :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n      <div class=\"deposit-page-content\">\r\n        <el-form label-position=\"top\" label-width=\"80px\">\r\n          <el-form-item label=\"CONSUME\">\r\n            <el-input placeholder=\"Input deposit amount\" v-model=\"consumeNumber\" @change=\"inputConsumeNumber\"\r\n                      class=\"input-with-select\">\r\n              <el-select v-model=\"chooseConsume\" :disabled=\"false\" slot=\"append\" @change=\"buySapce\" placeholder=\"choose token\"\r\n                         style=\"padding-left: 5px\">\r\n                <template slot=\"prefix\">\r\n                  <img v-if=\"chooseConsume && tokenListHasLogo.some(name => name === chooseConsume.toLowerCase())\"\r\n                       :src=\"require(`../assets/token/${chooseConsume.toLowerCase()}.png`)\" alt=\"\" width=\"24\" height=\"24\"\r\n                       style=\"margin-top: 7px;margin-right: 9px\">\r\n                  <img v-else :src=\"require(`../assets/token/default.svg`)\" alt=\"\" width=\"22\" height=\"22\" style=\"margin-top: 7px;margin-right: 9px\">\r\n                </template>\r\n                <el-option\r\n                    v-for=\"(item, index) in symbolList\"\r\n                    :key=\"index\"\r\n                    :label=\"item.symbol\"\r\n                    :value=\"item.symbol\"\r\n                    style=\"display: flex;align-items: center;justify-content: flex-start;padding-left: 5px\">\r\n                  <img v-if=\"item.symbol && tokenListHasLogo.some(name => name === item.symbol.toLowerCase())\"\r\n                       :src=\"require(`../assets/token/${item.symbol && item.symbol.toLowerCase()}.png`)\" alt=\"\" width=\"24\" height=\"24\"\r\n                       style=\"margin-right: 5px\">\r\n                  <img v-else :src=\"require(`../assets/token/default.svg`)\" alt=\"\" width=\"22\" height=\"22\" style=\"margin-right: 5px\">\r\n                  <span>{{ item.symbol }}</span>\r\n                </el-option>\r\n              </el-select>\r\n            </el-input>\r\n            <p class=\"deposit-page-Reminder-content\">\r\n            </p>\r\n          </el-form-item>\r\n          <p class=\"exchange-icon-title\">\r\n            <i class=\"el-icon-sort\" style=\"font-weight: bold\"></i>\r\n          </p>\r\n          <el-form-item label=\"BUY\">\r\n            <el-input v-model=\"buyNumber\" :disabled=\"true\">\r\n              <p slot=\"append\" style=\"display: flex;justify-content: center;align-items: center\">\r\n                <img src=\"../assets/svg/database-power.svg\" alt=\"\">\r\n                <span style=\"margin-left: 8px\">MB</span>\r\n              </p>\r\n            </el-input>\r\n            <p v-if=\"chooseConsume\" class=\"deposit-page-Reminder-content\">\r\n              <!--              <span v-if=\"chooseConsume && chooseConsume !== 'AR' && hasPriceNumber\">-->\r\n              <!--                1 {{ chooseConsume }} ≈ <i :class=\"toARPrice ? '' : 'el-icon-loading'\">{{ toARPrice }}</i> AR，-->\r\n              <!--              </span>-->\r\n              1{{ chooseConsume }} ≈ <i :class=\"toARPrice ? '' : 'el-icon-loading'\">{{ toARPrice }}</i> GB Storage\r\n            </p>\r\n          </el-form-item>\r\n        </el-form>\r\n        <p class=\"deposit-page-button\" @click=\"buyStorage\">DEPOSIT</p>\r\n        <p class=\"deposit-page-Reminder-content\" style=\"margin-left: 10px\">\r\n          The purchase space size is based on AR Token conversion, showing that the space size will fluctuate slightly\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapGetters} from \"vuex\"\r\nimport {ChainType, tokenListHasLogo} from '@/utils/constant/chainConst'\r\nimport {toBN} from '@/utils/util'\r\nimport {providers} from \"ethers\"\r\nimport redStone from 'redstone-api'\r\n\r\nexport default {\r\n  name: 'Deposit',\r\n  data() {\r\n    return {\r\n      tokenListHasLogo,\r\n      value: \"\",\r\n      chooseConsume: '',\r\n      inputNumber: undefined,\r\n      buyNumber: undefined,\r\n      consumeNumber: undefined,\r\n      sendParam: undefined,\r\n      amount: '0',\r\n      balance: '0',\r\n      toARPrice: undefined,\r\n      newCurrencyInfo: undefined,\r\n      isReady: false,\r\n      canNotPay: false,\r\n      hasPriceNumber: false,\r\n      options: [\r\n        {\r\n          value: 'Ethereum',\r\n          label: 'Ethereum',\r\n          iconStyle: 'eth-icon-style'\r\n        // },\r\n        // {\r\n        //   value: 'BSC',\r\n        //   label: 'BSC',\r\n        //   iconStyle: 'bsc-icon-style'\r\n        // },\r\n        // {\r\n        //   value: 'Moonbeam',\r\n        //   label: 'Moonbeam',\r\n        //   iconStyle: 'mbm-icon-style'\r\n        }],\r\n      symbolList: [],\r\n      allTokenList: [],\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      accountStr: 'account/account',\r\n      publishOrderList: 'order/getPublishOrders',\r\n    }),\r\n  },\r\n  async mounted() {\r\n    this.isReady = true\r\n    await this.getSelectList()\r\n    this.isReady = true\r\n    // const network = await window.ethereum.networkVersion\r\n    const provider = new providers.Web3Provider(window.ethereum)\r\n    const network = await provider.getNetwork()\r\n    this.checkChainId(network.chainId)\r\n    this.changeConnectChain()\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      getInfo: 'account/getAccountInfo',\r\n      getAllSymbolPrice: \"account/getAllSymbolPrice\",\r\n      buyDeposit: 'account/buyDeposit',\r\n      getBalances: \"account/getAccountBalances\",\r\n      getFeeInfo: \"account/getFeeInfo\",\r\n      getFee: \"account/getFee\"\r\n    }),\r\n    backToHome() {\r\n      this.$router.push({\r\n        name: \"HomePage\"\r\n      })\r\n    },\r\n    checkChainId(id) {\r\n      if (id === 1) {\r\n        this.value = 'Ethereum'\r\n      } else if (id === 1284) {\r\n        this.value = 'Moonbeam'\r\n      } else if (id === 56) {\r\n        this.value = 'BSC'\r\n      }\r\n      this.symbolList = this.allTokenList.filter(item => item.chainType.toLocaleLowerCase().includes(this.value.toLocaleLowerCase()))\r\n    },\r\n    async getSelectList() {\r\n      // Gets the tokenList for the current account\r\n      const tokenList = await this.getInfo()\r\n      const formatToken = tokenList.map(item => {\r\n        return {\r\n          tag: item.tag,\r\n          symbol: item.symbol,\r\n          crossChainInfoList: item.crossChainInfoList\r\n        }\r\n      })\r\n      const balances = await this.getBalances(this.accountStr)\r\n      // Merge the tokenList and balance list\r\n      let list = balances.reduce((pre, cur) => {\r\n        let target = pre.find(ee => ee.symbol === cur.symbol)\r\n        if (target) {\r\n          Object.assign(target, cur)\r\n        }\r\n        return pre\r\n      }, formatToken)\r\n      // Extract the symbol from the list and use it to find the price\r\n      let symbolStr = list.map(item => item.symbol)\r\n      symbolStr = symbolStr.join(\",\")\r\n      // Get the corresponding price from the symbol list\r\n      const resultObj = await this.getAllSymbolPrice(symbolStr)\r\n      const resultList = Object.values(resultObj.data).map(item => {\r\n        return {\r\n          value: item.value,\r\n          symbol: item.symbol\r\n        }\r\n      })\r\n      let final = list.reduce((pre, cur) => {\r\n        let target = pre.find(ee => ee.symbol === cur.symbol)\r\n        if (target) {\r\n          Object.assign(target, cur)\r\n        } else {\r\n          pre.push(cur)\r\n        }\r\n        return pre\r\n      }, resultList)\r\n      this.symbolList = final\r\n      this.allTokenList = final\r\n    },\r\n\r\n    inputConsumeNumber() {\r\n      if (!this.consumeNumber) {\r\n        return\r\n      }\r\n      this.buyNumber = Math.round((Number(this.consumeNumber) * Number(this.toARPrice) * 1024) * 1000) / 1000 || 0\r\n      this.sendParam = {\r\n        ...this.sendParam,\r\n        amount: this.consumeNumber\r\n      }\r\n    },\r\n    async buySapce() {\r\n      if (!this.chooseConsume) {\r\n        return\r\n      }\r\n      this.toARPrice = undefined\r\n\r\n      const pricceObj = this.symbolList.filter(item => item.symbol === this.chooseConsume)\r\n      this.balance = pricceObj[0].balance\r\n      const provider = new providers.Web3Provider(window.ethereum)\r\n      const balanceList = await provider.getBalance(this.accountStr)\r\n      console.log(balanceList)\r\n\r\n      try {\r\n        this.hasPriceNumber = true\r\n        const pri = await redStone.getPrice([\"AR\", `${this.chooseConsume}`])\r\n        this.newCurrencyInfo = pri[`${this.chooseConsume}`]\r\n        this.canNotPay = !pri[`${this.chooseConsume}`].symbol\r\n        this.amount = Math.round((pri[`${this.chooseConsume}`].value * this.balance) * 100) / 100\r\n        const total = Math.round((pri[`${this.chooseConsume}`].value / pri['AR'].value) * 100) / 100 || 0\r\n        this.toARPrice = Math.round(total * 0.76 * 100) / 100\r\n      } catch (e) {\r\n        this.amount = 0\r\n        this.hasPriceNumber = false\r\n        this.chooseConsume = ''\r\n        this.canNotPay = false\r\n        this.$message.error('This currency is not supported')\r\n      }\r\n      this.buyNumber = undefined\r\n      this.sendParam = {\r\n        account: this.accountStr,\r\n        tag: pricceObj[0].tag,\r\n        amount: this.consumeNumber,\r\n        chainType: this.value.toLowerCase()\r\n      }\r\n    },\r\n    async buyStorage() {\r\n      if (!this.sendParam) {\r\n        return this.$message.error(\"please input amount\")\r\n      }\r\n      try {\r\n        await this.buyDeposit(this.sendParam)\r\n        this.$message.success('deposit success')\r\n      } catch (e) {\r\n        this.consumeNumber = ''\r\n        this.buyNumber = ''\r\n        this.$message.error('deposit error')\r\n      }\r\n    },\r\n    // buySapce(number) {\r\n    //   const pricceObj = this.priceList.filter(item => item.symbol === this.value)\r\n    //\r\n    // }\r\n    async connectAfterAddAsync(chainId, params) {\r\n      try {\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{chainId}]\r\n        })\r\n      } catch (switchError) {\r\n        // This error code indicates that the chain has not been added to MetaMask.\r\n        if (switchError.code === 4902) {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [params]\r\n          })\r\n        } else {\r\n          // handle other \"switch\" errors\r\n          throw switchError\r\n        }\r\n      }\r\n    },\r\n    async changeConnectChain(type) {\r\n      const chainType = type\r\n      if (chainType === ChainType.ethereum) {\r\n        const chainId = '0x' + toBN(1).toString(16)\r\n        await this.connectAfterAddAsync(chainId, {})\r\n      } else if (chainType === ChainType.moon) {\r\n        const chainId = '0x' + toBN(1284).toString(16)\r\n        await this.connectAfterAddAsync(chainId, {\r\n          chainId: chainId,\r\n          chainName: 'Moonbeam',\r\n          nativeCurrency: {\r\n            name: 'GLMR',\r\n            symbol: 'GLMR',\r\n            decimals: 18\r\n          },\r\n          rpcUrls: ['https://rpc.api.moonbeam.network'],\r\n          blockExplorerUrls: ['https://moonscan.io/']\r\n        })\r\n        // } else if (chainType === ChainType.bsc) {\r\n        //   const chainId = '0x' + toBN(97).toString(16)\r\n        //   await this.connectAfterAddAsync(chainId, {\r\n        //     chainId: chainId,\r\n        //     chainName: 'BSC Testnet',\r\n        //     nativeCurrency: {\r\n        //       name: 'BNB',\r\n        //       symbol: 'BNB',\r\n        //       decimals: 18\r\n        //     },\r\n        //     rpcUrls: ['https://data-seed-prebsc-1-s1.binance.org:8545'],\r\n        //     blockExplorerUrls: ['https://testnet.bscscan.com/']\r\n        //   })\r\n      } else if (chainType === ChainType.bsc) {\r\n        const chainId = '0x' + toBN(56).toString(16)\r\n        await this.connectAfterAddAsync(chainId, {\r\n          chainId: chainId,\r\n          chainName: 'BSC Mainnet',\r\n          nativeCurrency: {\r\n            name: 'BNB',\r\n            symbol: 'BNB',\r\n            decimals: 18\r\n          },\r\n          rpcUrls: ['https://bsc-dataseed1.ninicoin.io'],\r\n          blockExplorerUrls: ['https://bscscan.com/']\r\n        })\r\n      }\r\n      this.symbolList = this.allTokenList.filter(item => item.chainType.toLocaleLowerCase().includes(this.value.toLocaleLowerCase()))\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.deposit-page__main {\r\n  width: 100%;\r\n  min-height: 85vh;\r\n  overflow: hidden;\r\n  position: relative;\r\n  .el-input--prefix .el-input__inner {\r\n    padding-left: 34px;\r\n  }\r\n}\r\n\r\n\r\n/*.deposit-page-bg {*/\r\n/*  width: 100%;*/\r\n/*  height: 777px;*/\r\n/*  overflow: hidden;*/\r\n/*  display: flex;*/\r\n/*  animation: play 40s infinite linear;*/\r\n/*  !*transition: all 8s linear 0s;*!*/\r\n/*  margin-block-start: 0;*/\r\n/*  margin-block-end: 0;*/\r\n/*  padding: 0;*/\r\n/*}*/\r\n\r\n.deposit-page-bg li {\r\n  width: 100%;\r\n  height: 777px;\r\n  float: left;\r\n  list-style: none;\r\n}\r\n\r\n.deposit-page-bg li img {\r\n  width: 100%;\r\n  height: 777px;\r\n}\r\n\r\n@keyframes play {\r\n  from {\r\n    /*margin-left: -100px;*/\r\n  }\r\n\r\n  to {\r\n    /*margin-left: -200px;*/\r\n  }\r\n}\r\n\r\n.deposit-page-back-homepage {\r\n  width: 107px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n  position: absolute;\r\n  left: 10%;\r\n  top: 3%;\r\n  z-index: 100;\r\n  border: 2px solid #EFECFD;\r\n  background: #F7F6FE;\r\n  color: #6447F2;\r\n  border-radius: 6px;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n\r\n.deposit-page-back-homepage:hover {\r\n  border-color: #6447F2;\r\n}\r\n\r\n.deposit-page-box {\r\n  width: 498px;\r\n  height: 605px;\r\n  position: absolute;\r\n  left: 35%;\r\n  top: 14%;\r\n  z-index: 100;\r\n  background: #FFFFFF;\r\n  box-shadow: 0px 6px 6px -6px rgba(0, 0, 0, 0.16), 0px 0px 1px rgba(0, 0, 0, 0.4);\r\n  border-radius: 12px;\r\n}\r\n\r\n.deposit-page-title {\r\n  padding: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid #EFEEF1;\r\n}\r\n\r\n.exchange-icon-title {\r\n  width: 42px;\r\n  height: 42px;\r\n  border-radius: 50%;\r\n  background: #FAF9F8;\r\n  color: #09244B;\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  line-height: 42px;\r\n  margin: 0px auto;\r\n}\r\n\r\n.deposit-page-title .deposit-select-style {\r\n  width: 148px;\r\n  /*height: 44px;*/\r\n  border-radius: 10px;\r\n  background: #FAF9F8;\r\n}\r\n\r\n.deposit-page-content {\r\n  padding: 28px 45px 0 53px;\r\n}\r\n\r\n.deposit-page-Reminder-content {\r\n  font-size: 12px;\r\n  color: #A9A8AF;\r\n}\r\n\r\n.deposit-page-button {\r\n  /*width: 173px;*/\r\n  padding: 11px 40px;\r\n  text-align: center;\r\n  font-size: 19px;\r\n  font-weight: bold;\r\n  color: white;\r\n  background: #6447F2;\r\n  border-radius: 14px;\r\n  border: 2px solid #09244B;\r\n  cursor: pointer;\r\n  margin-bottom: 17px;\r\n  margin-top: 40px;\r\n  /*cursor: not-allowed;*/\r\n}\r\n\r\n.eth-icon-style {\r\n  background: url(\"../assets/svg/icon_ethereum.svg\") no-repeat;\r\n  background-position-x: 5px;\r\n  background-position-y: 5px;\r\n}\r\n\r\n.bsc-icon-style {\r\n  /*background: url(\"../assets/svg/icon_bsc.svg\") no-repeat;*/\r\n  background-position-x: 5px;\r\n  background-position-y: 5px;\r\n}\r\n\r\n.mbm-icon-style {\r\n  /*background: url(\"../assets/svg/icon_mbm.svg\") no-repeat;*/\r\n  background-position-x: 5px;\r\n  background-position-y: 5px;\r\n}\r\n\r\n.el-select-dropdown__item {\r\n  padding: 0 20px 0 35px;\r\n}\r\n\r\n.deposit-page__main .el-form-item__label {\r\n  color: #A9A8AF;\r\n  font-weight: bold;\r\n}\r\n\r\n/*.deposit-page-content .el-select-dropdown__item {*/\r\n/*  padding: 0;*/\r\n/*}*/\r\n.deposit-page__main .el-input-group {\r\n  border-radius: 10px;\r\n  /*border: 1px solid #e5e3e6;*/\r\n}\r\n\r\n.deposit-page__main .el-input-group__append {\r\n  width: 94px;\r\n}\r\n\r\n.deposit-page__main .el-range-editor.is-active,\r\n.deposit-page__main .el-range-editor.is-active:hover,\r\n.deposit-page__main .el-select .el-input.is-focus .el-input__inner {\r\n  /*border-color: #6447F2;*/\r\n}\r\n\r\n.deposit-page__main .el-form--label-top .el-form-item__label {\r\n  padding: 0;\r\n}\r\n\r\n</style>"],"mappings":";AA6FA,SAAAA,UAAA,EAAAC,UAAA;AACA,SAAAC,SAAA,EAAAC,gBAAA;AACA,SAAAC,IAAA;AACA,SAAAC,SAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAL,gBAAA;MACAM,KAAA;MACAC,aAAA;MACAC,WAAA,EAAAC,SAAA;MACAC,SAAA,EAAAD,SAAA;MACAE,aAAA,EAAAF,SAAA;MACAG,SAAA,EAAAH,SAAA;MACAI,MAAA;MACAC,OAAA;MACAC,SAAA,EAAAN,SAAA;MACAO,eAAA,EAAAP,SAAA;MACAQ,OAAA;MACAC,SAAA;MACAC,cAAA;MACAC,OAAA,GACA;QACAd,KAAA;QACAe,KAAA;QACAC,SAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;;MACAC,UAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA,GAAA3B,UAAA;MACA4B,UAAA;MACAC,gBAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,KAAAX,OAAA;IACA,WAAAY,aAAA;IACA,KAAAZ,OAAA;IACA;IACA,MAAAa,QAAA,OAAA5B,SAAA,CAAA6B,YAAA,CAAAC,MAAA,CAAAC,QAAA;IACA,MAAAC,OAAA,SAAAJ,QAAA,CAAAK,UAAA;IACA,KAAAC,YAAA,CAAAF,OAAA,CAAAG,OAAA;IACA,KAAAC,kBAAA;EACA;EACAC,OAAA;IACA,GAAA1C,UAAA;MACA2C,OAAA;MACAC,iBAAA;MACAC,UAAA;MACAC,WAAA;MACAC,UAAA;MACAC,MAAA;IACA;IACAC,WAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QACA5C,IAAA;MACA;IACA;IACAgC,aAAAa,EAAA;MACA,IAAAA,EAAA;QACA,KAAA3C,KAAA;MACA,WAAA2C,EAAA;QACA,KAAA3C,KAAA;MACA,WAAA2C,EAAA;QACA,KAAA3C,KAAA;MACA;MACA,KAAAiB,UAAA,QAAAC,YAAA,CAAA0B,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,SAAA,CAAAC,iBAAA,GAAAC,QAAA,MAAAhD,KAAA,CAAA+C,iBAAA;IACA;IACA,MAAAxB,cAAA;MACA;MACA,MAAA0B,SAAA,cAAAf,OAAA;MACA,MAAAgB,WAAA,GAAAD,SAAA,CAAAE,GAAA,CAAAN,IAAA;QACA;UACAO,GAAA,EAAAP,IAAA,CAAAO,GAAA;UACAC,MAAA,EAAAR,IAAA,CAAAQ,MAAA;UACAC,kBAAA,EAAAT,IAAA,CAAAS;QACA;MACA;MACA,MAAAC,QAAA,cAAAlB,WAAA,MAAAjB,UAAA;MACA;MACA,IAAAoC,IAAA,GAAAD,QAAA,CAAAE,MAAA,EAAAC,GAAA,EAAAC,GAAA;QACA,IAAAC,MAAA,GAAAF,GAAA,CAAAG,IAAA,CAAAC,EAAA,IAAAA,EAAA,CAAAT,MAAA,KAAAM,GAAA,CAAAN,MAAA;QACA,IAAAO,MAAA;UACAG,MAAA,CAAAC,MAAA,CAAAJ,MAAA,EAAAD,GAAA;QACA;QACA,OAAAD,GAAA;MACA,GAAAR,WAAA;MACA;MACA,IAAAe,SAAA,GAAAT,IAAA,CAAAL,GAAA,CAAAN,IAAA,IAAAA,IAAA,CAAAQ,MAAA;MACAY,SAAA,GAAAA,SAAA,CAAAC,IAAA;MACA;MACA,MAAAC,SAAA,cAAAhC,iBAAA,CAAA8B,SAAA;MACA,MAAAG,UAAA,GAAAL,MAAA,CAAAM,MAAA,CAAAF,SAAA,CAAApE,IAAA,EAAAoD,GAAA,CAAAN,IAAA;QACA;UACA7C,KAAA,EAAA6C,IAAA,CAAA7C,KAAA;UACAqD,MAAA,EAAAR,IAAA,CAAAQ;QACA;MACA;MACA,IAAAiB,KAAA,GAAAd,IAAA,CAAAC,MAAA,EAAAC,GAAA,EAAAC,GAAA;QACA,IAAAC,MAAA,GAAAF,GAAA,CAAAG,IAAA,CAAAC,EAAA,IAAAA,EAAA,CAAAT,MAAA,KAAAM,GAAA,CAAAN,MAAA;QACA,IAAAO,MAAA;UACAG,MAAA,CAAAC,MAAA,CAAAJ,MAAA,EAAAD,GAAA;QACA;UACAD,GAAA,CAAAhB,IAAA,CAAAiB,GAAA;QACA;QACA,OAAAD,GAAA;MACA,GAAAU,UAAA;MACA,KAAAnD,UAAA,GAAAqD,KAAA;MACA,KAAApD,YAAA,GAAAoD,KAAA;IACA;IAEAC,mBAAA;MACA,UAAAlE,aAAA;QACA;MACA;MACA,KAAAD,SAAA,GAAAoE,IAAA,CAAAC,KAAA,CAAAC,MAAA,MAAArE,aAAA,IAAAqE,MAAA,MAAAjE,SAAA;MACA,KAAAH,SAAA;QACA,QAAAA,SAAA;QACAC,MAAA,OAAAF;MACA;IACA;IACA,MAAAsE,SAAA;MACA,UAAA1E,aAAA;QACA;MACA;MACA,KAAAQ,SAAA,GAAAN,SAAA;MAEA,MAAAyE,SAAA,QAAA3D,UAAA,CAAA2B,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAQ,MAAA,UAAApD,aAAA;MACA,KAAAO,OAAA,GAAAoE,SAAA,IAAApE,OAAA;MACA,MAAAgB,QAAA,OAAA5B,SAAA,CAAA6B,YAAA,CAAAC,MAAA,CAAAC,QAAA;MACA,MAAAkD,WAAA,SAAArD,QAAA,CAAAsD,UAAA,MAAA1D,UAAA;MACA2D,OAAA,CAAAC,GAAA,CAAAH,WAAA;MAEA;QACA,KAAAhE,cAAA;QACA,MAAAoE,GAAA,SAAApF,QAAA,CAAAqF,QAAA,gBAAAjF,aAAA;QACA,KAAAS,eAAA,GAAAuE,GAAA,SAAAhF,aAAA;QACA,KAAAW,SAAA,IAAAqE,GAAA,SAAAhF,aAAA,IAAAoD,MAAA;QACA,KAAA9C,MAAA,GAAAiE,IAAA,CAAAC,KAAA,CAAAQ,GAAA,SAAAhF,aAAA,IAAAD,KAAA,QAAAQ,OAAA;QACA,MAAA2E,KAAA,GAAAX,IAAA,CAAAC,KAAA,CAAAQ,GAAA,SAAAhF,aAAA,IAAAD,KAAA,GAAAiF,GAAA,OAAAjF,KAAA;QACA,KAAAS,SAAA,GAAA+D,IAAA,CAAAC,KAAA,CAAAU,KAAA;MACA,SAAAC,CAAA;QACA,KAAA7E,MAAA;QACA,KAAAM,cAAA;QACA,KAAAZ,aAAA;QACA,KAAAW,SAAA;QACA,KAAAyE,QAAA,CAAAC,KAAA;MACA;MACA,KAAAlF,SAAA,GAAAD,SAAA;MACA,KAAAG,SAAA;QACAiF,OAAA,OAAAnE,UAAA;QACAgC,GAAA,EAAAwB,SAAA,IAAAxB,GAAA;QACA7C,MAAA,OAAAF,aAAA;QACAyC,SAAA,OAAA9C,KAAA,CAAAwF,WAAA;MACA;IACA;IACA,MAAAC,WAAA;MACA,UAAAnF,SAAA;QACA,YAAA+E,QAAA,CAAAC,KAAA;MACA;MACA;QACA,WAAAlD,UAAA,MAAA9B,SAAA;QACA,KAAA+E,QAAA,CAAAK,OAAA;MACA,SAAAN,CAAA;QACA,KAAA/E,aAAA;QACA,KAAAD,SAAA;QACA,KAAAiF,QAAA,CAAAC,KAAA;MACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAAK,qBAAA5D,OAAA,EAAA6D,MAAA;MACA;QACA,MAAAlE,MAAA,CAAAC,QAAA,CAAAkE,OAAA;UACAC,MAAA;UACAF,MAAA;YAAA7D;UAAA;QACA;MACA,SAAAgE,WAAA;QACA;QACA,IAAAA,WAAA,CAAAC,IAAA;UACA,MAAAtE,MAAA,CAAAC,QAAA,CAAAkE,OAAA;YACAC,MAAA;YACAF,MAAA,GAAAA,MAAA;UACA;QACA;UACA;UACA,MAAAG,WAAA;QACA;MACA;IACA;IACA,MAAA/D,mBAAAiE,IAAA;MACA,MAAAnD,SAAA,GAAAmD,IAAA;MACA,IAAAnD,SAAA,KAAArD,SAAA,CAAAkC,QAAA;QACA,MAAAI,OAAA,UAAApC,IAAA,IAAAuG,QAAA;QACA,WAAAP,oBAAA,CAAA5D,OAAA;MACA,WAAAe,SAAA,KAAArD,SAAA,CAAA0G,IAAA;QACA,MAAApE,OAAA,UAAApC,IAAA,OAAAuG,QAAA;QACA,WAAAP,oBAAA,CAAA5D,OAAA;UACAA,OAAA,EAAAA,OAAA;UACAqE,SAAA;UACAC,cAAA;YACAvG,IAAA;YACAuD,MAAA;YACAiD,QAAA;UACA;UACAC,OAAA;UACAC,iBAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA,WAAA1D,SAAA,KAAArD,SAAA,CAAAgH,GAAA;QACA,MAAA1E,OAAA,UAAApC,IAAA,KAAAuG,QAAA;QACA,WAAAP,oBAAA,CAAA5D,OAAA;UACAA,OAAA,EAAAA,OAAA;UACAqE,SAAA;UACAC,cAAA;YACAvG,IAAA;YACAuD,MAAA;YACAiD,QAAA;UACA;UACAC,OAAA;UACAC,iBAAA;QACA;MACA;MACA,KAAAvF,UAAA,QAAAC,YAAA,CAAA0B,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,SAAA,CAAAC,iBAAA,GAAAC,QAAA,MAAAhD,KAAA,CAAA+C,iBAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}