{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sleep = void 0;\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nbignumber_js_1.default.set({\n  DECIMAL_PLACES: 50\n});\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nexports.sleep = sleep;\nclass Utils {\n  constructor(api, currency, currencyConfig) {\n    this.api = api;\n    this.currency = currency;\n    this.currencyConfig = currencyConfig;\n  }\n  /**\n   * Throws an error if the provided axios reponse has a status code != 200\n   * @param res an axios response\n   * @returns nothing if the status code is 200\n   */\n  static checkAndThrow(res, context, exceptions) {\n    if ((res === null || res === void 0 ? void 0 : res.status) && !(exceptions !== null && exceptions !== void 0 ? exceptions : []).includes(res.status) && res.status != 200) {\n      throw new Error(`HTTP Error: ${context}: ${res.status} ${typeof res.data !== \"string\" ? res.statusText : res.data}`);\n    }\n    return;\n  }\n  /**\n   * Gets the nonce used for withdrawal request validation from the bundler\n   * @returns nonce for the current user\n   */\n  async getNonce() {\n    const res = await this.api.get(`/account/withdrawals/${this.currency}?address=${this.currencyConfig.address}`);\n    Utils.checkAndThrow(res, \"Getting withdrawal nonce\");\n    return res.data;\n  }\n  /**\n   * Gets the balance on the current bundler for the specified user\n   * @param address the user's address to query\n   * @returns the balance in winston\n   */\n  async getBalance(address) {\n    const res = await this.api.get(`/account/balance/${this.currency}?address=${address}`);\n    Utils.checkAndThrow(res, \"Getting balance\");\n    return new bignumber_js_1.default(res.data.balance);\n  }\n  /**\n   * Queries the bundler to get it's address for a specific currency\n   * @returns the bundler's address\n   */\n  async getBundlerAddress(currency) {\n    const res = await this.api.get(\"/info\");\n    Utils.checkAndThrow(res, \"Getting Bundler address\");\n    const address = res.data.addresses[currency];\n    if (!address) {\n      throw new Error(`Specified bundler does not support currency ${currency}`);\n    }\n    return address;\n  }\n  /**\n   * Calculates the price for [bytes] bytes paid for with [currency] for the loaded bundlr node.\n   * @param currency\n   * @param bytes\n   * @returns\n   */\n  async getPrice(currency, bytes) {\n    const res = await this.api.get(`/price/${currency}/${bytes}`);\n    Utils.checkAndThrow(res, \"Getting storage cost\");\n    return new bignumber_js_1.default(res.data);\n  }\n  /**\n   * Polls for transaction confirmation (or at least pending status) - used for fast currencies (i.e not arweave)\n   * before posting the fund request to the server (so the server doesn't have to poll)\n   * @param txid\n   * @returns\n   */\n  async confirmationPoll(txid) {\n    if (this.currencyConfig.isSlow) {\n      return;\n    }\n    for (let i = 0; i < 15; i++) {\n      await (0, exports.sleep)(3000);\n      if (await this.currencyConfig.getTx(txid).then(v => {\n        return v === null || v === void 0 ? void 0 : v.confirmed;\n      }).catch(_ => {\n        return false;\n      })) {\n        return;\n      }\n    }\n    // throw new Error(`Tx ${txid} didn't finalize after 30 seconds`);\n    console.warn(`Tx ${txid} didn't finalize after 30 seconds`);\n  }\n  unitConverter(baseUnits) {\n    return new bignumber_js_1.default(baseUnits).dividedBy(this.currencyConfig.base[1]);\n  }\n}\nexports.default = Utils;","map":{"version":3,"names":["bignumber_js_1","__importDefault","require","default","set","DECIMAL_PLACES","sleep","ms","Promise","resolve","setTimeout","exports","Utils","constructor","api","currency","currencyConfig","checkAndThrow","res","context","exceptions","status","includes","Error","data","statusText","getNonce","get","address","getBalance","balance","getBundlerAddress","addresses","getPrice","bytes","confirmationPoll","txid","isSlow","i","getTx","then","v","confirmed","catch","_","console","warn","unitConverter","baseUnits","dividedBy","base"],"sources":["../../src/common/utils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}