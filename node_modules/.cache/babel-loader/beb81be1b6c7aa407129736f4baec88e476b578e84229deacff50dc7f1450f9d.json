{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeTags = exports.tagsParser = exports.tagParser = void 0;\nconst avro = __importStar(require(\"avsc\"));\nexports.tagParser = avro.Type.forSchema({\n  type: \"record\",\n  name: \"Tag\",\n  fields: [{\n    name: \"name\",\n    type: \"string\"\n  }, {\n    name: \"value\",\n    type: \"string\"\n  }]\n});\nexports.tagsParser = avro.Type.forSchema({\n  type: \"array\",\n  items: exports.tagParser\n});\nfunction serializeTags(tags) {\n  if (tags.length == 0) {\n    return new Uint8Array(0);\n  }\n  let tagsBuffer;\n  try {\n    tagsBuffer = exports.tagsParser.toBuffer(tags);\n  } catch (e) {\n    throw new Error(\"Incorrect tag format used. Make sure your tags are { name: string!, value: string! }[]\");\n  }\n  return Uint8Array.from(tagsBuffer);\n}\nexports.serializeTags = serializeTags;","map":{"version":3,"names":["avro","__importStar","require","exports","tagParser","Type","forSchema","type","name","fields","tagsParser","items","serializeTags","tags","length","Uint8Array","tagsBuffer","toBuffer","e","Error","from"],"sources":["parser.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,IAAA,GAAAC,YAAA,CAAAC,OAAA;AAEaC,OAAA,CAAAC,SAAS,GAAGJ,IAAI,CAACK,IAAI,CAACC,SAAS,CAAC;EAC3CC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,KAAK;EACXC,MAAM,EAAE,CACN;IAAED,IAAI,EAAE,MAAM;IAAED,IAAI,EAAE;EAAQ,CAAE,EAChC;IAAEC,IAAI,EAAE,OAAO;IAAED,IAAI,EAAE;EAAQ,CAAE;CAEpC,CAAC;AAEWJ,OAAA,CAAAO,UAAU,GAAGV,IAAI,CAACK,IAAI,CAACC,SAAS,CAAC;EAC5CC,IAAI,EAAE,OAAO;EACbI,KAAK,EAAER,OAAA,CAAAC;CACR,CAAC;AAEF,SAAgBQ,aAAaA,CAC3BC,IAAuC;EAEvC,IAAIA,IAAK,CAACC,MAAM,IAAI,CAAC,EAAE;IACrB,OAAO,IAAIC,UAAU,CAAC,CAAC,CAAC;;EAG1B,IAAIC,UAAU;EACd,IAAI;IACFA,UAAU,GAAGb,OAAA,CAAAO,UAAU,CAACO,QAAQ,CAACJ,IAAI,CAAC;GACvC,CAAC,OAAOK,CAAC,EAAE;IACV,MAAM,IAAIC,KAAK,CACb,wFAAwF,CACzF;;EAGH,OAAOJ,UAAU,CAACK,IAAI,CAACJ,UAAU,CAAC;AACpC;AAjBAb,OAAA,CAAAS,aAAA,GAAAA,aAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}