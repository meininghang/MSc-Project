{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nvar FrameStringSource = require(\"./FrameStringSource\"),\n  FrameStringParser = require(\"./FrameStringParser\"),\n  cache = require(\"u3\").cache,\n  prepareStackTrace = require(\"../prepareStackTrace\");\nmodule.exports = function () {\n  Error.captureStackTrace = function captureStackTrace(throwable, terminator) {\n    var warnings;\n    var frameShifts = [captureStackTrace];\n    if (terminator) {\n      // additional frames can come here if arguments.callee.caller is supported\n      // otherwise it is hard to identify the terminator\n      frameShifts.push(terminator);\n    }\n    var captured = FrameStringSource.getInstance().captureFrameStrings(frameShifts);\n    Object.defineProperties(throwable, {\n      stack: {\n        configurable: true,\n        get: cache(function () {\n          var frames = FrameStringParser.getInstance().getFrames(captured.frameStrings, captured.functionValues);\n          return (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\n        })\n      },\n      cachedStack: {\n        configurable: true,\n        writable: true,\n        enumerable: false,\n        value: true\n      }\n    });\n  };\n  Error.getStackTrace = function (throwable) {\n    if (throwable.cachedStack) return throwable.stack;\n    var frameStrings = FrameStringSource.getInstance().getFrameStrings(throwable),\n      frames = [],\n      warnings;\n    if (frameStrings) frames = FrameStringParser.getInstance().getFrames(frameStrings, []);else warnings = [\"The stack is not readable by unthrown errors in this environment.\"];\n    var stack = (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\n    if (frameStrings) try {\n      Object.defineProperties(throwable, {\n        stack: {\n          configurable: true,\n          writable: true,\n          enumerable: false,\n          value: stack\n        },\n        cachedStack: {\n          configurable: true,\n          writable: true,\n          enumerable: false,\n          value: true\n        }\n      });\n    } catch (nonConfigurableError) {}\n    return stack;\n  };\n  return {\n    prepareStackTrace: prepareStackTrace\n  };\n};","map":{"version":3,"names":["FrameStringSource","require","FrameStringParser","cache","prepareStackTrace","module","exports","Error","captureStackTrace","throwable","terminator","warnings","frameShifts","push","captured","getInstance","captureFrameStrings","Object","defineProperties","stack","configurable","get","frames","getFrames","frameStrings","functionValues","cachedStack","writable","enumerable","value","getStackTrace","getFrameStrings","nonConfigurableError"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/error-polyfill/lib/non-v8/index.js"],"sourcesContent":["var FrameStringSource = require(\"./FrameStringSource\"),\r\n    FrameStringParser = require(\"./FrameStringParser\"),\r\n    cache = require(\"u3\").cache,\r\n    prepareStackTrace = require(\"../prepareStackTrace\");\r\n\r\nmodule.exports = function () {\r\n\r\n    Error.captureStackTrace = function captureStackTrace(throwable, terminator) {\r\n        var warnings;\r\n        var frameShifts = [\r\n            captureStackTrace\r\n        ];\r\n        if (terminator) {\r\n            // additional frames can come here if arguments.callee.caller is supported\r\n            // otherwise it is hard to identify the terminator\r\n            frameShifts.push(terminator);\r\n        }\r\n        var captured = FrameStringSource.getInstance().captureFrameStrings(frameShifts);\r\n        Object.defineProperties(throwable, {\r\n            stack: {\r\n                configurable: true,\r\n                get: cache(function () {\r\n                    var frames = FrameStringParser.getInstance().getFrames(captured.frameStrings, captured.functionValues);\r\n                    return (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\r\n                })\r\n            },\r\n            cachedStack: {\r\n                configurable: true,\r\n                writable: true,\r\n                enumerable: false,\r\n                value: true\r\n            }\r\n        });\r\n    };\r\n\r\n    Error.getStackTrace = function (throwable) {\r\n        if (throwable.cachedStack)\r\n            return throwable.stack;\r\n        var frameStrings = FrameStringSource.getInstance().getFrameStrings(throwable),\r\n            frames = [],\r\n            warnings;\r\n        if (frameStrings)\r\n            frames = FrameStringParser.getInstance().getFrames(frameStrings, []);\r\n        else\r\n            warnings = [\r\n                \"The stack is not readable by unthrown errors in this environment.\"\r\n            ];\r\n        var stack = (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\r\n        if (frameStrings)\r\n            try {\r\n                Object.defineProperties(throwable, {\r\n                    stack: {\r\n                        configurable: true,\r\n                        writable: true,\r\n                        enumerable: false,\r\n                        value: stack\r\n                    },\r\n                    cachedStack: {\r\n                        configurable: true,\r\n                        writable: true,\r\n                        enumerable: false,\r\n                        value: true\r\n                    }\r\n                });\r\n            } catch (nonConfigurableError) {\r\n            }\r\n        return stack;\r\n    };\r\n\r\n    return {\r\n        prepareStackTrace: prepareStackTrace\r\n    };\r\n};"],"mappings":";AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;EAClDC,iBAAiB,GAAGD,OAAO,CAAC,qBAAqB,CAAC;EAClDE,KAAK,GAAGF,OAAO,CAAC,IAAI,CAAC,CAACE,KAAK;EAC3BC,iBAAiB,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAEvDI,MAAM,CAACC,OAAO,GAAG,YAAY;EAEzBC,KAAK,CAACC,iBAAiB,GAAG,SAASA,iBAAiBA,CAACC,SAAS,EAAEC,UAAU,EAAE;IACxE,IAAIC,QAAQ;IACZ,IAAIC,WAAW,GAAG,CACdJ,iBAAiB,CACpB;IACD,IAAIE,UAAU,EAAE;MACZ;MACA;MACAE,WAAW,CAACC,IAAI,CAACH,UAAU,CAAC;IAChC;IACA,IAAII,QAAQ,GAAGd,iBAAiB,CAACe,WAAW,CAAC,CAAC,CAACC,mBAAmB,CAACJ,WAAW,CAAC;IAC/EK,MAAM,CAACC,gBAAgB,CAACT,SAAS,EAAE;MAC/BU,KAAK,EAAE;QACHC,YAAY,EAAE,IAAI;QAClBC,GAAG,EAAElB,KAAK,CAAC,YAAY;UACnB,IAAImB,MAAM,GAAGpB,iBAAiB,CAACa,WAAW,CAAC,CAAC,CAACQ,SAAS,CAACT,QAAQ,CAACU,YAAY,EAAEV,QAAQ,CAACW,cAAc,CAAC;UACtG,OAAO,CAAClB,KAAK,CAACH,iBAAiB,IAAIA,iBAAiB,EAAEK,SAAS,EAAEa,MAAM,EAAEX,QAAQ,CAAC;QACtF,CAAC;MACL,CAAC;MACDe,WAAW,EAAE;QACTN,YAAY,EAAE,IAAI;QAClBO,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;EACN,CAAC;EAEDtB,KAAK,CAACuB,aAAa,GAAG,UAAUrB,SAAS,EAAE;IACvC,IAAIA,SAAS,CAACiB,WAAW,EACrB,OAAOjB,SAAS,CAACU,KAAK;IAC1B,IAAIK,YAAY,GAAGxB,iBAAiB,CAACe,WAAW,CAAC,CAAC,CAACgB,eAAe,CAACtB,SAAS,CAAC;MACzEa,MAAM,GAAG,EAAE;MACXX,QAAQ;IACZ,IAAIa,YAAY,EACZF,MAAM,GAAGpB,iBAAiB,CAACa,WAAW,CAAC,CAAC,CAACQ,SAAS,CAACC,YAAY,EAAE,EAAE,CAAC,CAAC,KAErEb,QAAQ,GAAG,CACP,mEAAmE,CACtE;IACL,IAAIQ,KAAK,GAAG,CAACZ,KAAK,CAACH,iBAAiB,IAAIA,iBAAiB,EAAEK,SAAS,EAAEa,MAAM,EAAEX,QAAQ,CAAC;IACvF,IAAIa,YAAY,EACZ,IAAI;MACAP,MAAM,CAACC,gBAAgB,CAACT,SAAS,EAAE;QAC/BU,KAAK,EAAE;UACHC,YAAY,EAAE,IAAI;UAClBO,QAAQ,EAAE,IAAI;UACdC,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAEV;QACX,CAAC;QACDO,WAAW,EAAE;UACTN,YAAY,EAAE,IAAI;UAClBO,QAAQ,EAAE,IAAI;UACdC,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAE;QACX;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,OAAOG,oBAAoB,EAAE,CAC/B;IACJ,OAAOb,KAAK;EAChB,CAAC;EAED,OAAO;IACHf,iBAAiB,EAAEA;EACvB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}