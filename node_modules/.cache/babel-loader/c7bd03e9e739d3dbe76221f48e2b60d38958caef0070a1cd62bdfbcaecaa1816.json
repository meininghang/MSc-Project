{"ast":null,"code":"\"use strict\";\n\n/// <reference path=\"../modules.d.ts\" />\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nvar __await = this && this.__await || function (v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n};\nvar __asyncGenerator = this && this.__asyncGenerator || function (thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n    i,\n    q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst error_1 = require(\"./lib/error\");\nconst transaction_1 = require(\"./lib/transaction\");\nconst ArweaveUtils = require(\"./lib/utils\");\nconst transaction_uploader_1 = require(\"./lib/transaction-uploader\");\nrequire(\"arconnect\");\nclass Transactions {\n  constructor(api, crypto, chunks) {\n    this.api = api;\n    this.crypto = crypto;\n    this.chunks = chunks;\n  }\n  getTransactionAnchor() {\n    /**\n     * Maintain compatibility with erdjs which sets a global axios.defaults.transformResponse\n     * in order to overcome some other issue in:  https://github.com/axios/axios/issues/983\n     *\n     * However, this introduces a problem with ardrive-js, so we will enforce\n     * config =  {transformResponse: []} where we do not require a transform\n     */\n    return this.api.get(`tx_anchor`, {\n      transformResponse: []\n    }).then(response => {\n      return response.data;\n    });\n  }\n  getPrice(byteSize, targetAddress) {\n    let endpoint = targetAddress ? `price/${byteSize}/${targetAddress}` : `price/${byteSize}`;\n    return this.api.get(endpoint, {\n      transformResponse: [\n      /**\n       * We need to specify a response transformer to override\n       * the default JSON.parse behavior, as this causes\n       * winston to be converted to a number and we want to\n       * return it as a winston string.\n       * @param data\n       */\n      function (data) {\n        return data;\n      }]\n    }).then(response => {\n      return response.data;\n    });\n  }\n  async get(id) {\n    const response = await this.api.get(`tx/${id}`);\n    if (response.status == 200) {\n      const data_size = parseInt(response.data.data_size);\n      if (response.data.format >= 2 && data_size > 0 && data_size <= 1024 * 1024 * 12) {\n        const data = await this.getData(id);\n        return new transaction_1.default(Object.assign(Object.assign({}, response.data), {\n          data\n        }));\n      }\n      return new transaction_1.default(Object.assign(Object.assign({}, response.data), {\n        format: response.data.format || 1\n      }));\n    }\n    if (response.status == 404) {\n      throw new error_1.default(\"TX_NOT_FOUND\" /* ArweaveErrorType.TX_NOT_FOUND */);\n    }\n\n    if (response.status == 410) {\n      throw new error_1.default(\"TX_FAILED\" /* ArweaveErrorType.TX_FAILED */);\n    }\n\n    throw new error_1.default(\"TX_INVALID\" /* ArweaveErrorType.TX_INVALID */);\n  }\n\n  fromRaw(attributes) {\n    return new transaction_1.default(attributes);\n  }\n  async search(tagName, tagValue) {\n    return this.api.post(`arql`, {\n      op: \"equals\",\n      expr1: tagName,\n      expr2: tagValue\n    }).then(response => {\n      if (!response.data) {\n        return [];\n      }\n      return response.data;\n    });\n  }\n  getStatus(id) {\n    return this.api.get(`tx/${id}/status`).then(response => {\n      if (response.status == 200) {\n        return {\n          status: 200,\n          confirmed: response.data\n        };\n      }\n      return {\n        status: response.status,\n        confirmed: null\n      };\n    });\n  }\n  async getData(id, options) {\n    let data = undefined;\n    try {\n      data = await this.chunks.downloadChunkedData(id);\n    } catch (error) {\n      console.error(`Error while trying to download chunked data for ${id}`);\n      console.error(error);\n    }\n    if (!data) {\n      console.warn(`Falling back to gateway cache for ${id}`);\n      try {\n        data = (await this.api.get(`/${id}`)).data;\n      } catch (error) {\n        console.error(`Error while trying to download contiguous data from gateway cache for ${id}`);\n        console.error(error);\n      }\n    }\n    if (!data) {\n      throw new Error(`${id} was not found!`);\n    }\n    if (options && options.decode && !options.string) {\n      return data;\n    }\n    if (options && options.decode && options.string) {\n      return ArweaveUtils.bufferToString(data);\n    }\n    // Since decode wasn't requested, caller expects b64url encoded data.\n    return ArweaveUtils.bufferTob64Url(data);\n  }\n  async sign(transaction, jwk, options) {\n    if (!jwk && typeof arweaveWallet !== \"object\") {\n      throw new Error(`A new Arweave transaction must provide the jwk parameter.`);\n    } else if (!jwk || jwk === \"use_wallet\") {\n      try {\n        const existingPermissions = await arweaveWallet.getPermissions();\n        if (!existingPermissions.includes(\"SIGN_TRANSACTION\")) await arweaveWallet.connect([\"SIGN_TRANSACTION\"]);\n      } catch (_a) {\n        // Permission is already granted\n      }\n      const signedTransaction = await arweaveWallet.sign(transaction, options);\n      transaction.setSignature({\n        id: signedTransaction.id,\n        owner: signedTransaction.owner,\n        reward: signedTransaction.reward,\n        tags: signedTransaction.tags,\n        signature: signedTransaction.signature\n      });\n    } else {\n      transaction.setOwner(jwk.n);\n      let dataToSign = await transaction.getSignatureData();\n      let rawSignature = await this.crypto.sign(jwk, dataToSign, options);\n      let id = await this.crypto.hash(rawSignature);\n      transaction.setSignature({\n        id: ArweaveUtils.bufferTob64Url(id),\n        owner: jwk.n,\n        signature: ArweaveUtils.bufferTob64Url(rawSignature)\n      });\n    }\n  }\n  async verify(transaction) {\n    const signaturePayload = await transaction.getSignatureData();\n    /**\n     * The transaction ID should be a SHA-256 hash of the raw signature bytes, so this needs\n     * to be recalculated from the signature and checked against the transaction ID.\n     */\n    const rawSignature = transaction.get(\"signature\", {\n      decode: true,\n      string: false\n    });\n    const expectedId = ArweaveUtils.bufferTob64Url(await this.crypto.hash(rawSignature));\n    if (transaction.id !== expectedId) {\n      throw new Error(`Invalid transaction signature or ID! The transaction ID doesn't match the expected SHA-256 hash of the signature.`);\n    }\n    /**\n     * Now verify the signature is valid and signed by the owner wallet (owner field = originating wallet public key).\n     */\n    return this.crypto.verify(transaction.owner, signaturePayload, rawSignature);\n  }\n  async post(transaction) {\n    if (typeof transaction === \"string\") {\n      transaction = new transaction_1.default(JSON.parse(transaction));\n    } else if (typeof transaction.readInt32BE === \"function\") {\n      transaction = new transaction_1.default(JSON.parse(transaction.toString()));\n    } else if (typeof transaction === \"object\" && !(transaction instanceof transaction_1.default)) {\n      transaction = new transaction_1.default(transaction);\n    }\n    if (!(transaction instanceof transaction_1.default)) {\n      throw new Error(`Must be Transaction object`);\n    }\n    if (!transaction.chunks) {\n      await transaction.prepareChunks(transaction.data);\n    }\n    const uploader = await this.getUploader(transaction, transaction.data);\n    // Emulate existing error & return value behavior.\n    try {\n      while (!uploader.isComplete) {\n        await uploader.uploadChunk();\n      }\n    } catch (e) {\n      if (uploader.lastResponseStatus > 0) {\n        return {\n          status: uploader.lastResponseStatus,\n          statusText: uploader.lastResponseError,\n          data: {\n            error: uploader.lastResponseError\n          }\n        };\n      }\n      throw e;\n    }\n    return {\n      status: 200,\n      statusText: \"OK\",\n      data: {}\n    };\n  }\n  /**\n   * Gets an uploader than can be used to upload a transaction chunk by chunk, giving progress\n   * and the ability to resume.\n   *\n   * Usage example:\n   *\n   * ```\n   * const uploader = arweave.transactions.getUploader(transaction);\n   * while (!uploader.isComplete) {\n   *   await uploader.uploadChunk();\n   *   console.log(`${uploader.pctComplete}%`);\n   * }\n   * ```\n   *\n   * @param upload a Transaction object, a previously save progress object, or a transaction id.\n   * @param data the data of the transaction. Required when resuming an upload.\n   */\n  async getUploader(upload, data) {\n    let uploader;\n    if (data instanceof ArrayBuffer) {\n      data = new Uint8Array(data);\n    }\n    if (upload instanceof transaction_1.default) {\n      if (!data) {\n        data = upload.data;\n      }\n      if (!(data instanceof Uint8Array)) {\n        throw new Error(\"Data format is invalid\");\n      }\n      if (!upload.chunks) {\n        await upload.prepareChunks(data);\n      }\n      uploader = new transaction_uploader_1.TransactionUploader(this.api, upload);\n      if (!uploader.data || uploader.data.length === 0) {\n        uploader.data = data;\n      }\n    } else {\n      if (typeof upload === \"string\") {\n        upload = await transaction_uploader_1.TransactionUploader.fromTransactionId(this.api, upload);\n      }\n      if (!data || !(data instanceof Uint8Array)) {\n        throw new Error(`Must provide data when resuming upload`);\n      }\n      // upload should be a serialized upload.\n      uploader = await transaction_uploader_1.TransactionUploader.fromSerialized(this.api, upload, data);\n    }\n    return uploader;\n  }\n  /**\n   * Async generator version of uploader\n   *\n   * Usage example:\n   *\n   * ```\n   * for await (const uploader of arweave.transactions.upload(tx)) {\n   *  console.log(`${uploader.pctComplete}%`);\n   * }\n   * ```\n   *\n   * @param upload a Transaction object, a previously save uploader, or a transaction id.\n   * @param data the data of the transaction. Required when resuming an upload.\n   */\n  upload(upload, data) {\n    return __asyncGenerator(this, arguments, function* upload_1() {\n      const uploader = yield __await(this.getUploader(upload, data));\n      while (!uploader.isComplete) {\n        yield __await(uploader.uploadChunk());\n        yield yield __await(uploader);\n      }\n      return yield __await(uploader);\n    });\n  }\n}\nexports.default = Transactions;","map":{"version":3,"names":["require","error_1","transaction_1","ArweaveUtils","transaction_uploader_1","Transactions","constructor","api","crypto","chunks","getTransactionAnchor","get","transformResponse","then","response","data","getPrice","byteSize","targetAddress","endpoint","id","status","data_size","parseInt","format","getData","default","Object","assign","fromRaw","attributes","search","tagName","tagValue","post","op","expr1","expr2","getStatus","confirmed","options","undefined","downloadChunkedData","error","console","warn","Error","decode","string","bufferToString","bufferTob64Url","sign","transaction","jwk","arweaveWallet","existingPermissions","getPermissions","includes","connect","_a","signedTransaction","setSignature","owner","reward","tags","signature","setOwner","n","dataToSign","getSignatureData","rawSignature","hash","verify","signaturePayload","expectedId","JSON","parse","readInt32BE","toString","prepareChunks","uploader","getUploader","isComplete","uploadChunk","e","lastResponseStatus","statusText","lastResponseError","upload","ArrayBuffer","Uint8Array","TransactionUploader","length","fromTransactionId","fromSerialized","__await","exports"],"sources":["../../../src/common/transactions.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}