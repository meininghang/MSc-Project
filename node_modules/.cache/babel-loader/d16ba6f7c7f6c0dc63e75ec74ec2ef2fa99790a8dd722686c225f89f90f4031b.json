{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst signing_1 = require(\"arseeding-arbundles/src/signing\");\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst near_api_js_1 = require(\"near-api-js\");\nconst bs58_1 = require(\"bs58\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst js_sha256_1 = require(\"js-sha256\");\nconst currency_1 = __importDefault(require(\"../currency\"));\nclass NearConfig extends currency_1.default {\n  constructor(config) {\n    super(config);\n    this.near = this.wallet._near;\n    this.base = [\"yoctoNEAR\", 1e25];\n    // this.keyPair = KeyPair.fromString(this.wallet)\n  }\n\n  async ready() {\n    if (!this.wallet.isSignedIn()) {\n      throw new Error(\"Wallet has not been signed in!\");\n    }\n    const keystore = new near_api_js_1.keyStores.BrowserLocalStorageKeyStore();\n    const account = this.wallet.account();\n    // console.log(this.address)\n    // console.log(await account.getAccessKeys())\n    // this._address = this.wallet.getAccountId()\n    // this.keyPair = KeyPair.fromString(this.wallet)\n    // console.log(await account.getAccessKeys())\n    this.keyPair = await keystore.getKey(this.wallet._networkId, account.accountId);\n    if (!this.keyPair) {\n      this.keyPair = near_api_js_1.KeyPair.fromRandom(\"ed25519\");\n      const publicKey = this.keyPair.getPublicKey().toString();\n      // this.wallet._networkId\n      await keystore.setKey(this.wallet._networkId, account.accountId, this.keyPair);\n      // can't do this :c\n      // console.log(publicKey)\n      await account.addKey(publicKey);\n    }\n    // console.log(this.keyPair.getPublicKey().toString());\n    // this._address = this.ownerToAddress(Buffer.from(this.keyPair.getPublicKey().data));\n    this._address = await this.wallet.getAccountId();\n    // this.providerInstance = new providers.JsonRpcProvider({ url: this.providerUrl });\n    this.providerInstance = this.wallet._near.connection.provider;\n    // console.log(this.keyPair);\n  }\n  /**\n   * NEAR wants both the sender ID and tx Hash, so we have to concatenate to keep with the interface.\n   * @param txId assumes format senderID:txHash\n   */\n  async getTx(txId) {\n    var _a;\n    // NOTE: their type defs are out of date with their actual API (23-01-2022)... beware the expect-error when debugging! \n    const provider = await this.providerInstance;\n    const [id, hash] = txId.split(\":\");\n    const status = await provider.txStatusReceipts((0, bs58_1.decode)(hash), id);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    const blockHeight = await provider.block(status.transaction_outcome.block_hash);\n    const latestBlockHeight = (await provider.block({\n      finality: \"final\"\n    })).header.height;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    if (status.receipts_outcome[0].outcome.status.SuccessValue !== \"\") {\n      throw new Error(\"Transaction failed!\");\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    const deposit = (_a = status.receipts[0].receipt.Action.actions[0].Transfer.deposit) !== null && _a !== void 0 ? _a : 0;\n    // console.log(decode(status.receipts_outcome[0].block_hash))\n    // // const routcometx = await provider.txStatusReceipts(decode(status.receipts_outcome[0].block_hash), status.receipts_outcome[0].id)\n    // console.log({ blockHeight, status, latestBlockHeight })\n    return {\n      from: id,\n      to: status.transaction.receiver_id,\n      amount: new bignumber_js_1.default(deposit),\n      blockHeight: new bignumber_js_1.default(blockHeight.header.height),\n      pending: false,\n      confirmed: latestBlockHeight - blockHeight.header.height >= this.minConfirm\n    };\n  }\n  /**\n   * address = accountID\n   * @param owner // assumed to be the \"ed25519:\" header + b58 encoded key\n   */\n  ownerToAddress(owner) {\n    // should just return the loaded address?\n    const pubkey = typeof owner === \"string\" ? owner : (0, bs58_1.encode)(owner);\n    return (0, bs58_1.decode)(pubkey.replace(\"ed25519:\", \"\")).toString(\"hex\");\n  }\n  async sign(data) {\n    return this.getSigner().sign(data);\n  }\n  getSigner() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    return new signing_1.NearSigner(this.keyPair.secretKey);\n  }\n  async verify(pub, data, signature) {\n    return signing_1.NearSigner.verify(pub, data, signature);\n  }\n  async getCurrentHeight() {\n    // const provider = await this.getProvider();\n    const res = await this.providerInstance.status();\n    return new bignumber_js_1.default(res.sync_info.latest_block_height);\n  }\n  async getFee(_amount, _to) {\n    // const provider = await this.getProvider();\n    // one unit of gas\n    // const res = await provider.connection.provider.gasPrice(await (await this.getCurrentHeight()).toNumber())\n    const res = await this.providerInstance.gasPrice(null); // null == gas price as of latest block\n    // multiply by action cost in gas units (assume only action is transfer)\n    // 4.5x10^11 gas units for fund transfers\n    return new bignumber_js_1.default(res.gas_price).multipliedBy(450000000000);\n  }\n  async sendTx(data) {\n    data;\n    const res = await this.providerInstance.sendTransaction(data);\n    return `${this.address}:${res.transaction.hash}`; // encode into compound format\n  }\n\n  async createTx(amount, to, _fee) {\n    const accessKey = await this.providerInstance.query({\n      request_type: \"view_access_key\",\n      finality: \"final\",\n      account_id: this.address,\n      public_key: this.keyPair.getPublicKey().toString()\n    });\n    // console.log(accessKey);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    const nonce = ++accessKey.nonce;\n    const recentBlockHash = near_api_js_1.utils.serialize.base_decode(accessKey.block_hash);\n    const actions = [near_api_js_1.transactions.transfer(new bn_js_1.default(new bignumber_js_1.default(amount).toString()))];\n    const tx = near_api_js_1.transactions.createTransaction(this.address, this.keyPair.getPublicKey(), to, nonce, actions, recentBlockHash);\n    const serialTx = near_api_js_1.utils.serialize.serialize(near_api_js_1.transactions.SCHEMA, tx);\n    const serialTxHash = new Uint8Array(js_sha256_1.sha256.array(serialTx));\n    const signature = this.keyPair.sign(serialTxHash);\n    const signedTx = new near_api_js_1.transactions.SignedTransaction({\n      transaction: tx,\n      signature: new near_api_js_1.transactions.Signature({\n        keyType: tx.publicKey.keyType,\n        data: signature.signature\n      })\n    });\n    return {\n      tx: signedTx,\n      txId: undefined\n    };\n  }\n  async getPublicKey() {\n    return Buffer.from(this.keyPair.getPublicKey().data);\n  }\n}\nexports.default = NearConfig;","map":{"version":3,"names":["signing_1","require","bignumber_js_1","__importDefault","near_api_js_1","bs58_1","bn_js_1","js_sha256_1","currency_1","NearConfig","default","constructor","config","near","wallet","_near","base","ready","isSignedIn","Error","keystore","keyStores","BrowserLocalStorageKeyStore","account","keyPair","getKey","_networkId","accountId","KeyPair","fromRandom","publicKey","getPublicKey","toString","setKey","addKey","_address","getAccountId","providerInstance","connection","provider","getTx","txId","id","hash","split","status","txStatusReceipts","decode","blockHeight","block","transaction_outcome","block_hash","latestBlockHeight","finality","header","height","receipts_outcome","outcome","SuccessValue","deposit","_a","receipts","receipt","Action","actions","Transfer","from","to","transaction","receiver_id","amount","pending","confirmed","minConfirm","ownerToAddress","owner","pubkey","encode","replace","sign","data","getSigner","NearSigner","secretKey","verify","pub","signature","getCurrentHeight","res","sync_info","latest_block_height","getFee","_amount","_to","gasPrice","gas_price","multipliedBy","sendTx","sendTransaction","address","createTx","_fee","accessKey","query","request_type","account_id","public_key","nonce","recentBlockHash","utils","serialize","base_decode","transactions","transfer","tx","createTransaction","serialTx","SCHEMA","serialTxHash","Uint8Array","sha256","array","signedTx","SignedTransaction","Signature","keyType","undefined","Buffer","exports"],"sources":["../../../src/web/currencies/near.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}