{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signTransaction = exports.createTransaction = exports.SCHEMA = exports.Action = exports.SignedTransaction = exports.Transaction = exports.Signature = exports.deleteAccount = exports.deleteKey = exports.addKey = exports.stake = exports.transfer = exports.functionCall = exports.stringifyJsonOrBytes = exports.deployContract = exports.createAccount = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.IAction = exports.functionCallAccessKey = exports.fullAccessKey = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\nconst enums_1 = require(\"./utils/enums\");\nconst borsh_1 = require(\"borsh\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nclass FunctionCallPermission extends enums_1.Assignable {}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission extends enums_1.Assignable {}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends enums_1.Enum {}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey extends enums_1.Assignable {}\nexports.AccessKey = AccessKey;\nfunction fullAccessKey() {\n  return new AccessKey({\n    nonce: 0,\n    permission: new AccessKeyPermission({\n      fullAccess: new FullAccessPermission({})\n    })\n  });\n}\nexports.fullAccessKey = fullAccessKey;\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n  return new AccessKey({\n    nonce: 0,\n    permission: new AccessKeyPermission({\n      functionCall: new FunctionCallPermission({\n        receiverId,\n        allowance,\n        methodNames\n      })\n    })\n  });\n}\nexports.functionCallAccessKey = functionCallAccessKey;\nclass IAction extends enums_1.Assignable {}\nexports.IAction = IAction;\nclass CreateAccount extends IAction {}\nexports.CreateAccount = CreateAccount;\nclass DeployContract extends IAction {}\nexports.DeployContract = DeployContract;\nclass FunctionCall extends IAction {}\nexports.FunctionCall = FunctionCall;\nclass Transfer extends IAction {}\nexports.Transfer = Transfer;\nclass Stake extends IAction {}\nexports.Stake = Stake;\nclass AddKey extends IAction {}\nexports.AddKey = AddKey;\nclass DeleteKey extends IAction {}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount extends IAction {}\nexports.DeleteAccount = DeleteAccount;\nfunction createAccount() {\n  return new Action({\n    createAccount: new CreateAccount({})\n  });\n}\nexports.createAccount = createAccount;\nfunction deployContract(code) {\n  return new Action({\n    deployContract: new DeployContract({\n      code\n    })\n  });\n}\nexports.deployContract = deployContract;\nfunction stringifyJsonOrBytes(args) {\n  const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n  const serializedArgs = isUint8Array ? args : Buffer.from(JSON.stringify(args));\n  return serializedArgs;\n}\nexports.stringifyJsonOrBytes = stringifyJsonOrBytes;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n * @param stringify Convert input arguments into bytes array.\n */\nfunction functionCall(methodName, args, gas, deposit, stringify = stringifyJsonOrBytes) {\n  return new Action({\n    functionCall: new FunctionCall({\n      methodName,\n      args: stringify(args),\n      gas,\n      deposit\n    })\n  });\n}\nexports.functionCall = functionCall;\nfunction transfer(deposit) {\n  return new Action({\n    transfer: new Transfer({\n      deposit\n    })\n  });\n}\nexports.transfer = transfer;\nfunction stake(stake, publicKey) {\n  return new Action({\n    stake: new Stake({\n      stake,\n      publicKey\n    })\n  });\n}\nexports.stake = stake;\nfunction addKey(publicKey, accessKey) {\n  return new Action({\n    addKey: new AddKey({\n      publicKey,\n      accessKey\n    })\n  });\n}\nexports.addKey = addKey;\nfunction deleteKey(publicKey) {\n  return new Action({\n    deleteKey: new DeleteKey({\n      publicKey\n    })\n  });\n}\nexports.deleteKey = deleteKey;\nfunction deleteAccount(beneficiaryId) {\n  return new Action({\n    deleteAccount: new DeleteAccount({\n      beneficiaryId\n    })\n  });\n}\nexports.deleteAccount = deleteAccount;\nclass Signature extends enums_1.Assignable {}\nexports.Signature = Signature;\nclass Transaction extends enums_1.Assignable {\n  encode() {\n    return borsh_1.serialize(exports.SCHEMA, this);\n  }\n  static decode(bytes) {\n    return borsh_1.deserialize(exports.SCHEMA, Transaction, bytes);\n  }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction extends enums_1.Assignable {\n  encode() {\n    return borsh_1.serialize(exports.SCHEMA, this);\n  }\n  static decode(bytes) {\n    return borsh_1.deserialize(exports.SCHEMA, SignedTransaction, bytes);\n  }\n}\nexports.SignedTransaction = SignedTransaction;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends enums_1.Enum {}\nexports.Action = Action;\nexports.SCHEMA = new Map([[Signature, {\n  kind: 'struct',\n  fields: [['keyType', 'u8'], ['data', [64]]]\n}], [SignedTransaction, {\n  kind: 'struct',\n  fields: [['transaction', Transaction], ['signature', Signature]]\n}], [Transaction, {\n  kind: 'struct',\n  fields: [['signerId', 'string'], ['publicKey', key_pair_1.PublicKey], ['nonce', 'u64'], ['receiverId', 'string'], ['blockHash', [32]], ['actions', [Action]]]\n}], [key_pair_1.PublicKey, {\n  kind: 'struct',\n  fields: [['keyType', 'u8'], ['data', [32]]]\n}], [AccessKey, {\n  kind: 'struct',\n  fields: [['nonce', 'u64'], ['permission', AccessKeyPermission]]\n}], [AccessKeyPermission, {\n  kind: 'enum',\n  field: 'enum',\n  values: [['functionCall', FunctionCallPermission], ['fullAccess', FullAccessPermission]]\n}], [FunctionCallPermission, {\n  kind: 'struct',\n  fields: [['allowance', {\n    kind: 'option',\n    type: 'u128'\n  }], ['receiverId', 'string'], ['methodNames', ['string']]]\n}], [FullAccessPermission, {\n  kind: 'struct',\n  fields: []\n}], [Action, {\n  kind: 'enum',\n  field: 'enum',\n  values: [['createAccount', CreateAccount], ['deployContract', DeployContract], ['functionCall', FunctionCall], ['transfer', Transfer], ['stake', Stake], ['addKey', AddKey], ['deleteKey', DeleteKey], ['deleteAccount', DeleteAccount]]\n}], [CreateAccount, {\n  kind: 'struct',\n  fields: []\n}], [DeployContract, {\n  kind: 'struct',\n  fields: [['code', ['u8']]]\n}], [FunctionCall, {\n  kind: 'struct',\n  fields: [['methodName', 'string'], ['args', ['u8']], ['gas', 'u64'], ['deposit', 'u128']]\n}], [Transfer, {\n  kind: 'struct',\n  fields: [['deposit', 'u128']]\n}], [Stake, {\n  kind: 'struct',\n  fields: [['stake', 'u128'], ['publicKey', key_pair_1.PublicKey]]\n}], [AddKey, {\n  kind: 'struct',\n  fields: [['publicKey', key_pair_1.PublicKey], ['accessKey', AccessKey]]\n}], [DeleteKey, {\n  kind: 'struct',\n  fields: [['publicKey', key_pair_1.PublicKey]]\n}], [DeleteAccount, {\n  kind: 'struct',\n  fields: [['beneficiaryId', 'string']]\n}]]);\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n  return new Transaction({\n    signerId,\n    publicKey,\n    nonce,\n    receiverId,\n    actions,\n    blockHash\n  });\n}\nexports.createTransaction = createTransaction;\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etcâ€¦)\n */\nasync function signTransactionObject(transaction, signer, accountId, networkId) {\n  const message = borsh_1.serialize(exports.SCHEMA, transaction);\n  const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n  const signature = await signer.signMessage(message, accountId, networkId);\n  const signedTx = new SignedTransaction({\n    transaction,\n    signature: new Signature({\n      keyType: transaction.publicKey.keyType,\n      data: signature.signature\n    })\n  });\n  return [hash, signedTx];\n}\nasync function signTransaction(...args) {\n  if (args[0].constructor === Transaction) {\n    const [transaction, signer, accountId, networkId] = args;\n    return signTransactionObject(transaction, signer, accountId, networkId);\n  } else {\n    const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n    const publicKey = await signer.getPublicKey(accountId, networkId);\n    const transaction = createTransaction(accountId, publicKey, receiverId, nonce, actions, blockHash);\n    return signTransactionObject(transaction, signer, accountId, networkId);\n  }\n}\nexports.signTransaction = signTransaction;","map":{"version":3,"names":["require","__importDefault","mod","__esModule","Object","defineProperty","exports","value","signTransaction","createTransaction","SCHEMA","Action","SignedTransaction","Transaction","Signature","deleteAccount","deleteKey","addKey","stake","transfer","functionCall","stringifyJsonOrBytes","deployContract","createAccount","DeleteAccount","DeleteKey","AddKey","Stake","Transfer","FunctionCall","DeployContract","CreateAccount","IAction","functionCallAccessKey","fullAccessKey","AccessKey","AccessKeyPermission","FullAccessPermission","FunctionCallPermission","js_sha256_1","enums_1","borsh_1","key_pair_1","Assignable","Enum","nonce","permission","fullAccess","receiverId","methodNames","allowance","code","args","isUint8Array","byteLength","undefined","length","serializedArgs","Buffer","from","JSON","stringify","methodName","gas","deposit","publicKey","accessKey","beneficiaryId","encode","serialize","decode","bytes","deserialize","Map","kind","fields","PublicKey","field","values","type","signerId","actions","blockHash","signTransactionObject","transaction","signer","accountId","networkId","message","hash","Uint8Array","default","sha256","array","signature","signMessage","signedTx","keyType","data","constructor","getPublicKey"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/near-api-js/lib/transaction.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signTransaction = exports.createTransaction = exports.SCHEMA = exports.Action = exports.SignedTransaction = exports.Transaction = exports.Signature = exports.deleteAccount = exports.deleteKey = exports.addKey = exports.stake = exports.transfer = exports.functionCall = exports.stringifyJsonOrBytes = exports.deployContract = exports.createAccount = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.IAction = exports.functionCallAccessKey = exports.fullAccessKey = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\nconst enums_1 = require(\"./utils/enums\");\nconst borsh_1 = require(\"borsh\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nclass FunctionCallPermission extends enums_1.Assignable {\n}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission extends enums_1.Assignable {\n}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends enums_1.Enum {\n}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey extends enums_1.Assignable {\n}\nexports.AccessKey = AccessKey;\nfunction fullAccessKey() {\n    return new AccessKey({ nonce: 0, permission: new AccessKeyPermission({ fullAccess: new FullAccessPermission({}) }) });\n}\nexports.fullAccessKey = fullAccessKey;\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n    return new AccessKey({ nonce: 0, permission: new AccessKeyPermission({ functionCall: new FunctionCallPermission({ receiverId, allowance, methodNames }) }) });\n}\nexports.functionCallAccessKey = functionCallAccessKey;\nclass IAction extends enums_1.Assignable {\n}\nexports.IAction = IAction;\nclass CreateAccount extends IAction {\n}\nexports.CreateAccount = CreateAccount;\nclass DeployContract extends IAction {\n}\nexports.DeployContract = DeployContract;\nclass FunctionCall extends IAction {\n}\nexports.FunctionCall = FunctionCall;\nclass Transfer extends IAction {\n}\nexports.Transfer = Transfer;\nclass Stake extends IAction {\n}\nexports.Stake = Stake;\nclass AddKey extends IAction {\n}\nexports.AddKey = AddKey;\nclass DeleteKey extends IAction {\n}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount extends IAction {\n}\nexports.DeleteAccount = DeleteAccount;\nfunction createAccount() {\n    return new Action({ createAccount: new CreateAccount({}) });\n}\nexports.createAccount = createAccount;\nfunction deployContract(code) {\n    return new Action({ deployContract: new DeployContract({ code }) });\n}\nexports.deployContract = deployContract;\nfunction stringifyJsonOrBytes(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    const serializedArgs = isUint8Array ? args : Buffer.from(JSON.stringify(args));\n    return serializedArgs;\n}\nexports.stringifyJsonOrBytes = stringifyJsonOrBytes;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n * @param stringify Convert input arguments into bytes array.\n */\nfunction functionCall(methodName, args, gas, deposit, stringify = stringifyJsonOrBytes) {\n    return new Action({ functionCall: new FunctionCall({ methodName, args: stringify(args), gas, deposit }) });\n}\nexports.functionCall = functionCall;\nfunction transfer(deposit) {\n    return new Action({ transfer: new Transfer({ deposit }) });\n}\nexports.transfer = transfer;\nfunction stake(stake, publicKey) {\n    return new Action({ stake: new Stake({ stake, publicKey }) });\n}\nexports.stake = stake;\nfunction addKey(publicKey, accessKey) {\n    return new Action({ addKey: new AddKey({ publicKey, accessKey }) });\n}\nexports.addKey = addKey;\nfunction deleteKey(publicKey) {\n    return new Action({ deleteKey: new DeleteKey({ publicKey }) });\n}\nexports.deleteKey = deleteKey;\nfunction deleteAccount(beneficiaryId) {\n    return new Action({ deleteAccount: new DeleteAccount({ beneficiaryId }) });\n}\nexports.deleteAccount = deleteAccount;\nclass Signature extends enums_1.Assignable {\n}\nexports.Signature = Signature;\nclass Transaction extends enums_1.Assignable {\n    encode() {\n        return borsh_1.serialize(exports.SCHEMA, this);\n    }\n    static decode(bytes) {\n        return borsh_1.deserialize(exports.SCHEMA, Transaction, bytes);\n    }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction extends enums_1.Assignable {\n    encode() {\n        return borsh_1.serialize(exports.SCHEMA, this);\n    }\n    static decode(bytes) {\n        return borsh_1.deserialize(exports.SCHEMA, SignedTransaction, bytes);\n    }\n}\nexports.SignedTransaction = SignedTransaction;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends enums_1.Enum {\n}\nexports.Action = Action;\nexports.SCHEMA = new Map([\n    [Signature, { kind: 'struct', fields: [\n                ['keyType', 'u8'],\n                ['data', [64]]\n            ] }],\n    [SignedTransaction, { kind: 'struct', fields: [\n                ['transaction', Transaction],\n                ['signature', Signature]\n            ] }],\n    [Transaction, { kind: 'struct', fields: [\n                ['signerId', 'string'],\n                ['publicKey', key_pair_1.PublicKey],\n                ['nonce', 'u64'],\n                ['receiverId', 'string'],\n                ['blockHash', [32]],\n                ['actions', [Action]]\n            ] }],\n    [key_pair_1.PublicKey, { kind: 'struct', fields: [\n                ['keyType', 'u8'],\n                ['data', [32]]\n            ] }],\n    [AccessKey, { kind: 'struct', fields: [\n                ['nonce', 'u64'],\n                ['permission', AccessKeyPermission],\n            ] }],\n    [AccessKeyPermission, { kind: 'enum', field: 'enum', values: [\n                ['functionCall', FunctionCallPermission],\n                ['fullAccess', FullAccessPermission],\n            ] }],\n    [FunctionCallPermission, { kind: 'struct', fields: [\n                ['allowance', { kind: 'option', type: 'u128' }],\n                ['receiverId', 'string'],\n                ['methodNames', ['string']],\n            ] }],\n    [FullAccessPermission, { kind: 'struct', fields: [] }],\n    [Action, { kind: 'enum', field: 'enum', values: [\n                ['createAccount', CreateAccount],\n                ['deployContract', DeployContract],\n                ['functionCall', FunctionCall],\n                ['transfer', Transfer],\n                ['stake', Stake],\n                ['addKey', AddKey],\n                ['deleteKey', DeleteKey],\n                ['deleteAccount', DeleteAccount],\n            ] }],\n    [CreateAccount, { kind: 'struct', fields: [] }],\n    [DeployContract, { kind: 'struct', fields: [\n                ['code', ['u8']]\n            ] }],\n    [FunctionCall, { kind: 'struct', fields: [\n                ['methodName', 'string'],\n                ['args', ['u8']],\n                ['gas', 'u64'],\n                ['deposit', 'u128']\n            ] }],\n    [Transfer, { kind: 'struct', fields: [\n                ['deposit', 'u128']\n            ] }],\n    [Stake, { kind: 'struct', fields: [\n                ['stake', 'u128'],\n                ['publicKey', key_pair_1.PublicKey]\n            ] }],\n    [AddKey, { kind: 'struct', fields: [\n                ['publicKey', key_pair_1.PublicKey],\n                ['accessKey', AccessKey]\n            ] }],\n    [DeleteKey, { kind: 'struct', fields: [\n                ['publicKey', key_pair_1.PublicKey]\n            ] }],\n    [DeleteAccount, { kind: 'struct', fields: [\n                ['beneficiaryId', 'string']\n            ] }],\n]);\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n    return new Transaction({ signerId, publicKey, nonce, receiverId, actions, blockHash });\n}\nexports.createTransaction = createTransaction;\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etcâ€¦)\n */\nasync function signTransactionObject(transaction, signer, accountId, networkId) {\n    const message = borsh_1.serialize(exports.SCHEMA, transaction);\n    const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n    const signature = await signer.signMessage(message, accountId, networkId);\n    const signedTx = new SignedTransaction({\n        transaction,\n        signature: new Signature({ keyType: transaction.publicKey.keyType, data: signature.signature })\n    });\n    return [hash, signedTx];\n}\nasync function signTransaction(...args) {\n    if (args[0].constructor === Transaction) {\n        const [transaction, signer, accountId, networkId] = args;\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n    else {\n        const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n        const publicKey = await signer.getPublicKey(accountId, networkId);\n        const transaction = createTransaction(accountId, publicKey, receiverId, nonce, actions, blockHash);\n        return signTransactionObject(transaction, signer, accountId, networkId);\n    }\n}\nexports.signTransaction = signTransaction;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}