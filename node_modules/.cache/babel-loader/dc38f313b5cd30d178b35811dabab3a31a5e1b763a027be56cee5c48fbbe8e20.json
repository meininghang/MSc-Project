{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createData = void 0;\nconst assert_1 = __importDefault(require(\"assert\"));\nconst base64url_1 = __importDefault(require(\"base64url\"));\nconst utils_1 = require(\"./utils\");\nconst DataItem_1 = __importDefault(require(\"./DataItem\"));\nconst parser_1 = require(\"./parser\");\n/**\n * This will create a single DataItem in binary format (Uint8Array)\n *\n * @param data\n * @param opts - Options involved in creating data items\n * @param signer\n */\nfunction createData(data, signer, opts) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  // TODO: Add asserts\n  // Parse all values to a buffer and\n  const _owner = signer.publicKey;\n  const _target = (opts === null || opts === void 0 ? void 0 : opts.target) ? base64url_1.default.toBuffer(opts.target) : null;\n  const target_length = 1 + ((_a = _target === null || _target === void 0 ? void 0 : _target.byteLength) !== null && _a !== void 0 ? _a : 0);\n  const _anchor = (opts === null || opts === void 0 ? void 0 : opts.anchor) ? Buffer.from(opts.anchor) : null;\n  const anchor_length = 1 + ((_b = _anchor === null || _anchor === void 0 ? void 0 : _anchor.byteLength) !== null && _b !== void 0 ? _b : 0);\n  const _tags = ((_d = (_c = opts === null || opts === void 0 ? void 0 : opts.tags) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0 ? parser_1.serializeTags(opts.tags) : null;\n  const tags_length = 16 + (_tags ? _tags.byteLength : 0);\n  const _data = typeof data === \"string\" ? Buffer.from(data) : Buffer.from(data);\n  const data_length = _data.byteLength;\n  // See [https://github.com/joshbenaron/arweave-standards/blob/ans104/ans/ANS-104.md#13-dataitem-format]\n  const length = 2 + signer.signatureLength + signer.ownerLength + target_length + anchor_length + tags_length + data_length;\n  // Create array with set length\n  const bytes = Buffer.alloc(length);\n  bytes.set(utils_1.shortTo2ByteArray(signer.signatureType), 0);\n  // Push bytes for `signature`\n  bytes.set(new Uint8Array(signer.signatureLength).fill(0), 2);\n  // // Push bytes for `id`\n  // bytes.set(EMPTY_ARRAY, 32);\n  // Push bytes for `owner`\n  assert_1.default(_owner.byteLength == signer.ownerLength, new Error(`Owner must be ${signer.ownerLength} bytes, but was incorrectly ${_owner.byteLength}`));\n  bytes.set(_owner, 2 + signer.signatureLength);\n  const position = 2 + signer.signatureLength + signer.ownerLength;\n  // Push `presence byte` and push `target` if present\n  // 64 + OWNER_LENGTH\n  bytes[position] = _target ? 1 : 0;\n  if (_target) {\n    assert_1.default(_target.byteLength == 32, new Error(\"Target must be 32 bytes but was incorrectly ${_target.byteLength}\"));\n    bytes.set(_target, position + 1);\n  }\n  // Push `presence byte` and push `anchor` if present\n  // 64 + OWNER_LENGTH\n  const anchor_start = position + target_length;\n  let tags_start = anchor_start + 1;\n  bytes[anchor_start] = _anchor ? 1 : 0;\n  if (_anchor) {\n    tags_start += _anchor.byteLength;\n    assert_1.default(_anchor.byteLength == 32, new Error(\"Anchor must be 32 bytes\"));\n    bytes.set(_anchor, anchor_start + 1);\n  }\n  bytes.set(utils_1.longTo8ByteArray((_f = (_e = opts === null || opts === void 0 ? void 0 : opts.tags) === null || _e === void 0 ? void 0 : _e.length) !== null && _f !== void 0 ? _f : 0), tags_start);\n  const bytesCount = utils_1.longTo8ByteArray((_g = _tags === null || _tags === void 0 ? void 0 : _tags.byteLength) !== null && _g !== void 0 ? _g : 0);\n  bytes.set(bytesCount, tags_start + 8);\n  if (_tags) {\n    bytes.set(_tags, tags_start + 16);\n  }\n  const data_start = tags_start + tags_length;\n  bytes.set(_data, data_start);\n  return new DataItem_1.default(bytes);\n}\nexports.createData = createData;","map":{"version":3,"names":["assert_1","__importDefault","require","base64url_1","utils_1","DataItem_1","parser_1","createData","data","signer","opts","_owner","publicKey","_target","target","default","toBuffer","target_length","_a","byteLength","_anchor","anchor","Buffer","from","anchor_length","_b","_tags","_d","_c","tags","length","serializeTags","tags_length","_data","data_length","signatureLength","ownerLength","bytes","alloc","set","shortTo2ByteArray","signatureType","Uint8Array","fill","Error","position","anchor_start","tags_start","longTo8ByteArray","_f","_e","bytesCount","_g","data_start","exports"],"sources":["ar-data-create.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}