{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst crypto_browserify_1 = require(\"crypto-browserify\");\nconst arweave_1 = __importDefault(require(\"arweave\"));\nconst base64url_1 = __importDefault(require(\"base64url\"));\nconst constants_1 = require(\"../../constants\");\nclass Rsa4096Pss {\n  constructor(_key, pk) {\n    this._key = _key;\n    this.pk = pk;\n    this.signatureType = 1;\n    this.ownerLength = constants_1.SIG_CONFIG[1].pubLength;\n    this.signatureLength = constants_1.SIG_CONFIG[1].sigLength;\n    if (!pk) {\n      this.pk = crypto_browserify_1.createPublicKey({\n        key: _key,\n        type: \"pkcs1\",\n        format: \"pem\"\n      }).export({\n        format: \"pem\",\n        type: \"pkcs1\"\n      }).toString();\n    }\n  }\n  get publicKey() {\n    return this._publicKey;\n  }\n  sign(message) {\n    return crypto_browserify_1.createSign(\"sha256\").update(message).sign({\n      key: this._key,\n      padding: crypto_browserify_1.constants.RSA_PKCS1_PSS_PADDING\n    });\n  }\n  static async verify(pk, message, signature) {\n    return await arweave_1.default.crypto.verify(Buffer.isBuffer(pk) ? base64url_1.default.encode(pk) : pk, message, signature);\n  }\n}\nexports.default = Rsa4096Pss;","map":{"version":3,"names":["crypto_browserify_1","require","arweave_1","__importDefault","base64url_1","constants_1","Rsa4096Pss","constructor","_key","pk","signatureType","ownerLength","SIG_CONFIG","pubLength","signatureLength","sigLength","createPublicKey","key","type","format","export","toString","publicKey","_publicKey","sign","message","createSign","update","padding","constants","RSA_PKCS1_PSS_PADDING","verify","signature","default","crypto","Buffer","isBuffer","encode","exports"],"sources":["Rsa4096Pss.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;AACA,MAAAA,mBAAA,GAAAC,OAAA;AACA,MAAAC,SAAA,GAAAC,eAAA,CAAAF,OAAA;AACA,MAAAG,WAAA,GAAAD,eAAA,CAAAF,OAAA;AACA,MAAAI,WAAA,GAAAJ,OAAA;AAEA,MAAqBK,UAAU;EAS7BC,YAAoBC,IAAY,EAASC,EAAW;IAAhC,KAAAD,IAAI,GAAJA,IAAI;IAAiB,KAAAC,EAAE,GAAFA,EAAE;IARlC,KAAAC,aAAa,GAAW,CAAC;IACzB,KAAAC,WAAW,GAAWN,WAAA,CAAAO,UAAU,CAAC,CAAC,CAAC,CAACC,SAAS;IAC7C,KAAAC,eAAe,GAAWT,WAAA,CAAAO,UAAU,CAAC,CAAC,CAAC,CAACG,SAAS;IAOxD,IAAI,CAACN,EAAE,EAAE;MACP,IAAI,CAACA,EAAE,GAAGT,mBAAA,CAAAgB,eAAe,CAAC;QACxBC,GAAG,EAAET,IAAI;QACTU,IAAI,EAAE,OAAO;QACbC,MAAM,EAAE;OACT,CAAC,CACCC,MAAM,CAAC;QACND,MAAM,EAAE,KAAK;QACbD,IAAI,EAAE;OACP,CAAC,CACDG,QAAQ,EAAE;;EAEjB;EAjBA,IAAWC,SAASA,CAAA;IAClB,OAAO,IAAI,CAACC,UAAU;EACxB;EAiBAC,IAAIA,CAACC,OAAmB;IACtB,OAAOzB,mBAAA,CAAA0B,UAAU,CAAC,QAAQ,CAAC,CAACC,MAAM,CAACF,OAAO,CAAC,CAACD,IAAI,CAAC;MAC/CP,GAAG,EAAE,IAAI,CAACT,IAAI;MACdoB,OAAO,EAAE5B,mBAAA,CAAA6B,SAAS,CAACC;KACpB,CAAC;EACJ;EAEA,aAAaC,MAAMA,CACjBtB,EAAmB,EACnBgB,OAAmB,EACnBO,SAAqB;IAErB,OAAO,MAAM9B,SAAA,CAAA+B,OAAO,CAACC,MAAM,CAACH,MAAM,CAChCI,MAAM,CAACC,QAAQ,CAAC3B,EAAE,CAAC,GAAGL,WAAA,CAAA6B,OAAS,CAACI,MAAM,CAAC5B,EAAE,CAAC,GAAGA,EAAE,EAC/CgB,OAAO,EACPO,SAAS,CACV;EACH;;AAzCFM,OAAA,CAAAL,OAAA,GAAA3B,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}