{"ast":null,"code":"import { isAddress } from '@ethersproject/address';\nimport isString from 'lodash/isString';\nimport { v4 as uuidv4 } from 'uuid';\nimport BN from 'bignumber.js';\nimport { ERRORS } from './errors';\nimport { ChainType } from '../types';\nimport { bundleInternalTxVersion } from '../config';\nBN.config({\n  EXPONENTIAL_AT: 1000\n});\nexport const toBN = x => {\n  if (isNaN(Number(x))) return new BN(0);\n  if (x instanceof BN) return x;\n  if (typeof x === 'string') {\n    if (x.indexOf('0x') === 0 || x.indexOf('-0x') === 0) {\n      return new BN(x.replace('0x', ''), 16);\n    }\n  }\n  return new BN(x);\n};\nexport const fromUnitToDecimalBN = (x, decimals) => {\n  return toBN(x).times(toBN(10).pow(decimals));\n};\nexport const fromUnitToDecimal = (x, decimals) => {\n  return fromUnitToDecimalBN(x, decimals).toString();\n};\nexport const fromDecimalToUnitBN = (x, decimals) => {\n  return toBN(x).dividedBy(toBN(10).pow(decimals));\n};\nexport const fromDecimalToUnit = (x, decimals) => {\n  return fromDecimalToUnitBN(x, decimals).toString();\n};\nexport const getTimestamp = () => Math.round(Date.now() / 1000);\nexport const getTokenByTag = (tag, tokenList) => {\n  return tokenList === null || tokenList === void 0 ? void 0 : tokenList.find(t => matchTokenTag(genTokenTag(t), tag));\n};\nconst isEthereumAddress = isAddress;\nconst isArweaveAddress = address => {\n  return isString(address) && address.length === 43 && address.search(/[a-z0-9A-Z_-]{43}/g) === 0;\n};\nexport const isArweaveChainPSTMode = token => {\n  if (token == null) return false;\n  return token.crossChainInfoList[ChainType.arweave] != null && token.symbol.toUpperCase() !== 'AR';\n};\nexport const isArweaveL2PSTTokenSymbol = symbol => {\n  return (symbol === null || symbol === void 0 ? void 0 : symbol.toUpperCase()) === 'STAMP' || symbol.toUpperCase() === 'U';\n};\nexport const getAccountChainType = from => {\n  if (isEthereumAddress(from)) {\n    return ChainType.ethereum;\n  }\n  if (isArweaveAddress(from)) {\n    return ChainType.arweave;\n  }\n  throw new Error(ERRORS.INVALID_ACCOUNT_TYPE);\n};\nexport const getTokenAddrByChainType = (token, chainType) => {\n  const crossChainInfo = token.crossChainInfoList[chainType];\n  return crossChainInfo.targetTokenId;\n};\nexport const getChainDecimalByChainType = (token, chainType) => {\n  const crossChainInfo = token.crossChainInfoList[chainType];\n  return crossChainInfo.targetDecimals;\n};\nexport const getTokenBurnFeeByChainType = (token, feeItem, chainType) => {\n  return feeItem.burnFeeMap[chainType];\n};\nexport const genTokenTag = token => {\n  const {\n    chainType,\n    symbol,\n    id\n  } = token;\n  const chainTypes = chainType.split(',');\n  const tokenAddrs = id.split(',').map((addr, index) => {\n    if ([ChainType.ethereum, ChainType.bsc, ChainType.conflux, ChainType.moon, ChainType.platon, 'everpay'].includes(chainTypes[index])) {\n      return addr.toLowerCase();\n    }\n    return addr;\n  });\n  return `${chainType.toLowerCase()}-${symbol.toLowerCase()}-${tokenAddrs.join(',')}`;\n};\nexport const matchTokenTag = (tag1, tag2) => {\n  return (tag1 === null || tag1 === void 0 ? void 0 : tag1.toLowerCase()) === (tag2 === null || tag2 === void 0 ? void 0 : tag2.toLowerCase());\n};\nexport const genExpressData = params => {\n  const {\n    chainType,\n    to,\n    fee\n  } = params;\n  return {\n    appId: 'express',\n    withdrawAction: 'pay',\n    withdrawTo: to,\n    withdrawChainType: chainType,\n    withdrawFee: fee\n  };\n};\nexport const genBundleData = params => {\n  const items = params.items.map(item => {\n    const {\n      tag,\n      amount,\n      from,\n      to\n    } = item;\n    const token = getTokenByTag(tag, params.tokenList);\n    // 注意：顺序必须与后端保持一致，来让 JSON.stringify() 生成的字符串顺序与后端也一致\n    return {\n      tag: genTokenTag(token),\n      chainID: token.chainID,\n      from,\n      to,\n      amount: fromUnitToDecimal(amount, token.decimals)\n    };\n  });\n  const salt = uuidv4();\n  const version = bundleInternalTxVersion;\n  return {\n    // 注意：顺序必须与后端保持一致，来让 JSON.stringify() 生成的字符串顺序与后端也一致\n    items,\n    expiration: params.expiration,\n    salt,\n    version\n  };\n};","map":{"version":3,"names":["isAddress","isString","v4","uuidv4","BN","ERRORS","ChainType","bundleInternalTxVersion","config","EXPONENTIAL_AT","toBN","x","isNaN","Number","indexOf","replace","fromUnitToDecimalBN","decimals","times","pow","fromUnitToDecimal","toString","fromDecimalToUnitBN","dividedBy","fromDecimalToUnit","getTimestamp","Math","round","Date","now","getTokenByTag","tag","tokenList","find","t","matchTokenTag","genTokenTag","isEthereumAddress","isArweaveAddress","address","length","search","isArweaveChainPSTMode","token","crossChainInfoList","arweave","symbol","toUpperCase","isArweaveL2PSTTokenSymbol","getAccountChainType","from","ethereum","Error","INVALID_ACCOUNT_TYPE","getTokenAddrByChainType","chainType","crossChainInfo","targetTokenId","getChainDecimalByChainType","targetDecimals","getTokenBurnFeeByChainType","feeItem","burnFeeMap","id","chainTypes","split","tokenAddrs","map","addr","index","bsc","conflux","moon","platon","includes","toLowerCase","join","tag1","tag2","genExpressData","params","to","fee","appId","withdrawAction","withdrawTo","withdrawChainType","withdrawFee","genBundleData","items","item","amount","chainID","salt","version","expiration"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/arseeding-js/node_modules/everpay/esm/utils/util.js"],"sourcesContent":["import { isAddress } from '@ethersproject/address';\nimport isString from 'lodash/isString';\nimport { v4 as uuidv4 } from 'uuid';\nimport BN from 'bignumber.js';\nimport { ERRORS } from './errors';\nimport { ChainType } from '../types';\nimport { bundleInternalTxVersion } from '../config';\nBN.config({\n    EXPONENTIAL_AT: 1000\n});\nexport const toBN = (x) => {\n    if (isNaN(Number(x)))\n        return new BN(0);\n    if (x instanceof BN)\n        return x;\n    if (typeof x === 'string') {\n        if (x.indexOf('0x') === 0 || x.indexOf('-0x') === 0) {\n            return new BN((x).replace('0x', ''), 16);\n        }\n    }\n    return new BN(x);\n};\nexport const fromUnitToDecimalBN = (x, decimals) => {\n    return toBN(x).times(toBN(10).pow(decimals));\n};\nexport const fromUnitToDecimal = (x, decimals) => {\n    return fromUnitToDecimalBN(x, decimals).toString();\n};\nexport const fromDecimalToUnitBN = (x, decimals) => {\n    return toBN(x).dividedBy(toBN(10).pow(decimals));\n};\nexport const fromDecimalToUnit = (x, decimals) => {\n    return fromDecimalToUnitBN(x, decimals).toString();\n};\nexport const getTimestamp = () => Math.round(Date.now() / 1000);\nexport const getTokenByTag = (tag, tokenList) => {\n    return tokenList === null || tokenList === void 0 ? void 0 : tokenList.find(t => matchTokenTag(genTokenTag(t), tag));\n};\nconst isEthereumAddress = isAddress;\nconst isArweaveAddress = (address) => {\n    return isString(address) && address.length === 43 && address.search(/[a-z0-9A-Z_-]{43}/g) === 0;\n};\nexport const isArweaveChainPSTMode = (token) => {\n    if (token == null)\n        return false;\n    return token.crossChainInfoList[ChainType.arweave] != null && token.symbol.toUpperCase() !== 'AR';\n};\nexport const isArweaveL2PSTTokenSymbol = (symbol) => {\n    return (symbol === null || symbol === void 0 ? void 0 : symbol.toUpperCase()) === 'STAMP' || symbol.toUpperCase() === 'U';\n};\nexport const getAccountChainType = (from) => {\n    if (isEthereumAddress(from)) {\n        return ChainType.ethereum;\n    }\n    if (isArweaveAddress(from)) {\n        return ChainType.arweave;\n    }\n    throw new Error(ERRORS.INVALID_ACCOUNT_TYPE);\n};\nexport const getTokenAddrByChainType = (token, chainType) => {\n    const crossChainInfo = token.crossChainInfoList[chainType];\n    return crossChainInfo.targetTokenId;\n};\nexport const getChainDecimalByChainType = (token, chainType) => {\n    const crossChainInfo = token.crossChainInfoList[chainType];\n    return crossChainInfo.targetDecimals;\n};\nexport const getTokenBurnFeeByChainType = (token, feeItem, chainType) => {\n    return feeItem.burnFeeMap[chainType];\n};\nexport const genTokenTag = (token) => {\n    const { chainType, symbol, id } = token;\n    const chainTypes = chainType.split(',');\n    const tokenAddrs = id.split(',').map((addr, index) => {\n        if ([\n            ChainType.ethereum,\n            ChainType.bsc,\n            ChainType.conflux,\n            ChainType.moon,\n            ChainType.platon,\n            'everpay'\n        ].includes(chainTypes[index])) {\n            return addr.toLowerCase();\n        }\n        return addr;\n    });\n    return `${chainType.toLowerCase()}-${symbol.toLowerCase()}-${tokenAddrs.join(',')}`;\n};\nexport const matchTokenTag = (tag1, tag2) => {\n    return (tag1 === null || tag1 === void 0 ? void 0 : tag1.toLowerCase()) === (tag2 === null || tag2 === void 0 ? void 0 : tag2.toLowerCase());\n};\nexport const genExpressData = (params) => {\n    const { chainType, to, fee } = params;\n    return {\n        appId: 'express',\n        withdrawAction: 'pay',\n        withdrawTo: to,\n        withdrawChainType: chainType,\n        withdrawFee: fee\n    };\n};\nexport const genBundleData = (params) => {\n    const items = params.items.map((item) => {\n        const { tag, amount, from, to } = item;\n        const token = getTokenByTag(tag, params.tokenList);\n        // 注意：顺序必须与后端保持一致，来让 JSON.stringify() 生成的字符串顺序与后端也一致\n        return {\n            tag: genTokenTag(token),\n            chainID: token.chainID,\n            from,\n            to,\n            amount: fromUnitToDecimal(amount, token.decimals)\n        };\n    });\n    const salt = uuidv4();\n    const version = bundleInternalTxVersion;\n    return {\n        // 注意：顺序必须与后端保持一致，来让 JSON.stringify() 生成的字符串顺序与后端也一致\n        items,\n        expiration: params.expiration,\n        salt,\n        version\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}