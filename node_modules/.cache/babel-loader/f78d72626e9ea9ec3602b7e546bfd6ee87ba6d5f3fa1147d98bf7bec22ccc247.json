{"ast":null,"code":"import { createAndSubmitItem } from \"arseeding-js/cjs/submitOrder\";\nimport SHA256 from 'crypto-js/sha256';\n// import { Signer } from \"arseeding-arbundles/src/signing\"\nimport { reportUrl } from \"@/utils/const\";\nexport async function submitToArseed(tokenSymbol, signer, title, body, originalContentDigest) {\n  const content = {\n    \"body\": body,\n    \"timestamp\": Date.parse(new Date()) / 1000,\n    // \"timestamp\": new Date(Moment().format()).getTime() / 1000,\n    \"title\": title\n  };\n  const contentDigest = SHA256(JSON.stringify(content)).toString();\n  if (originalContentDigest === \"\") {\n    originalContentDigest = contentDigest;\n  }\n  const data = JSON.stringify({\n    \"content\": content,\n    \"digest\": contentDigest\n  });\n  const tags = [{\n    name: \"Content-Type\",\n    value: \"application/json\"\n  }, {\n    name: \"App-Name\",\n    value: \"Monica\"\n  },\n  // {\n  //     name: \"Contributor\",\n  //     value: \"\",\n  // },\n  {\n    name: \"Content-Digest\",\n    value: contentDigest\n  }, {\n    name: \"Original-Content-Digest\",\n    value: originalContentDigest\n  }, {\n    name: \"Content-Title\",\n    value: title\n  }];\n  const cfg = {\n    signer,\n    path: '',\n    arseedUrl: reportUrl,\n    currency: tokenSymbol,\n    apiKey: null\n  };\n  console.log('0000====>createAndSubmitItem', cfg);\n  return createAndSubmitItem(Buffer.from(data), {\n    tags: tags\n  }, cfg);\n}","map":{"version":3,"names":["createAndSubmitItem","SHA256","reportUrl","submitToArseed","tokenSymbol","signer","title","body","originalContentDigest","content","Date","parse","contentDigest","JSON","stringify","toString","data","tags","name","value","cfg","path","arseedUrl","currency","apiKey","console","log","Buffer","from"],"sources":["E:/Amanda-project/vue2-project/project-vue2/src/utils/arseed.js"],"sourcesContent":["import {createAndSubmitItem} from \"arseeding-js/cjs/submitOrder\";\r\nimport SHA256 from 'crypto-js/sha256'\r\n// import { Signer } from \"arseeding-arbundles/src/signing\"\r\nimport {reportUrl} from \"@/utils/const\"\r\n\r\nexport async function submitToArseed(tokenSymbol, signer, title, body, originalContentDigest) {\r\n    const content = {\r\n        \"body\": body,\r\n        \"timestamp\": Date.parse(new Date()) / 1000,\r\n        // \"timestamp\": new Date(Moment().format()).getTime() / 1000,\r\n        \"title\": title\r\n    }\r\n    const contentDigest = SHA256(JSON.stringify(content)).toString()\r\n    if (originalContentDigest === \"\") {\r\n        originalContentDigest = contentDigest\r\n    }\r\n\r\n    const data = JSON.stringify({\r\n        \"content\": content,\r\n        \"digest\": contentDigest\r\n    })\r\n\r\n    const tags = [\r\n        {\r\n            name: \"Content-Type\",\r\n            value: \"application/json\",\r\n        },\r\n        {\r\n            name: \"App-Name\",\r\n            value: \"Monica\",\r\n        },\r\n        // {\r\n        //     name: \"Contributor\",\r\n        //     value: \"\",\r\n        // },\r\n        {\r\n            name: \"Content-Digest\",\r\n            value: contentDigest,\r\n        },\r\n        {\r\n            name: \"Original-Content-Digest\",\r\n            value: originalContentDigest,\r\n        },\r\n        {\r\n            name: \"Content-Title\",\r\n            value: title\r\n        }]\r\n\r\n    const cfg = {\r\n        signer,\r\n        path: '',\r\n        arseedUrl: reportUrl,\r\n        currency: tokenSymbol,\r\n        apiKey: null\r\n    }\r\n    console.log('0000====>createAndSubmitItem', cfg)\r\n    return createAndSubmitItem(Buffer.from(data),{tags: tags},cfg)\r\n\r\n}\r\n"],"mappings":"AAAA,SAAQA,mBAAmB,QAAO,8BAA8B;AAChE,OAAOC,MAAM,MAAM,kBAAkB;AACrC;AACA,SAAQC,SAAS,QAAO,eAAe;AAEvC,OAAO,eAAeC,cAAcA,CAACC,WAAW,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,qBAAqB,EAAE;EAC1F,MAAMC,OAAO,GAAG;IACZ,MAAM,EAAEF,IAAI;IACZ,WAAW,EAAEG,IAAI,CAACC,KAAK,CAAC,IAAID,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI;IAC1C;IACA,OAAO,EAAEJ;EACb,CAAC;EACD,MAAMM,aAAa,GAAGX,MAAM,CAACY,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC,CAAC,CAACM,QAAQ,CAAC,CAAC;EAChE,IAAIP,qBAAqB,KAAK,EAAE,EAAE;IAC9BA,qBAAqB,GAAGI,aAAa;EACzC;EAEA,MAAMI,IAAI,GAAGH,IAAI,CAACC,SAAS,CAAC;IACxB,SAAS,EAAEL,OAAO;IAClB,QAAQ,EAAEG;EACd,CAAC,CAAC;EAEF,MAAMK,IAAI,GAAG,CACT;IACIC,IAAI,EAAE,cAAc;IACpBC,KAAK,EAAE;EACX,CAAC,EACD;IACID,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE;EACX,CAAC;EACD;EACA;EACA;EACA;EACA;IACID,IAAI,EAAE,gBAAgB;IACtBC,KAAK,EAAEP;EACX,CAAC,EACD;IACIM,IAAI,EAAE,yBAAyB;IAC/BC,KAAK,EAAEX;EACX,CAAC,EACD;IACIU,IAAI,EAAE,eAAe;IACrBC,KAAK,EAAEb;EACX,CAAC,CAAC;EAEN,MAAMc,GAAG,GAAG;IACRf,MAAM;IACNgB,IAAI,EAAE,EAAE;IACRC,SAAS,EAAEpB,SAAS;IACpBqB,QAAQ,EAAEnB,WAAW;IACrBoB,MAAM,EAAE;EACZ,CAAC;EACDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEN,GAAG,CAAC;EAChD,OAAOpB,mBAAmB,CAAC2B,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,EAAC;IAACC,IAAI,EAAEA;EAAI,CAAC,EAACG,GAAG,CAAC;AAElE"},"metadata":{},"sourceType":"module","externalDependencies":[]}