{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst error_1 = require(\"./lib/error\");\nrequire(\"arconnect\");\nclass Blocks {\n  constructor(api, network) {\n    this.api = api;\n    this.network = network;\n  }\n  /**\n   * Gets a block by its \"indep_hash\"\n   */\n  async get(indepHash) {\n    const response = await this.api.get(`${Blocks.ENDPOINT}${indepHash}`);\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      if (response.status === 404) {\n        throw new error_1.default(\"BLOCK_NOT_FOUND\" /* ArweaveErrorType.BLOCK_NOT_FOUND */);\n      } else {\n        throw new Error(`Error while loading block data: ${response}`);\n      }\n    }\n  }\n  /**\n   * Gets current block data (ie. block with indep_hash = Network.getInfo().current)\n   */\n  async getCurrent() {\n    const {\n      current\n    } = await this.network.getInfo();\n    return await this.get(current);\n  }\n}\nexports.default = Blocks;\nBlocks.ENDPOINT = \"block/hash/\";","map":{"version":3,"names":["error_1","require","Blocks","constructor","api","network","get","indepHash","response","ENDPOINT","status","data","default","Error","getCurrent","current","getInfo","exports"],"sources":["../../../src/common/blocks.ts"],"sourcesContent":[null],"mappings":";;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEAA,OAAA;AAwBA,MAAqBC,MAAM;EAGzBC,YAA6BC,GAAQ,EAAmBC,OAAgB;IAA3C,KAAAD,GAAG,GAAHA,GAAG;IAAwB,KAAAC,OAAO,GAAPA,OAAO;EAAY;EAE3E;;;EAGO,MAAMC,GAAGA,CAACC,SAAiB;IAChC,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACJ,GAAG,CAACE,GAAG,CACjC,GAAGJ,MAAM,CAACO,QAAQ,GAAGF,SAAS,EAAE,CACjC;IACD,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAOF,QAAQ,CAACG,IAAI;KACrB,MAAM;MACL,IAAIH,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIV,OAAA,CAAAY,OAAY,0DAAkC;OACzD,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,mCAAmCL,QAAQ,EAAE,CAAC;;;EAGpE;EAEA;;;EAGO,MAAMM,UAAUA,CAAA;IACrB,MAAM;MAAEC;IAAO,CAAE,GAAG,MAAM,IAAI,CAACV,OAAO,CAACW,OAAO,EAAE;IAChD,OAAO,MAAM,IAAI,CAACV,GAAG,CAACS,OAAO,CAAC;EAChC;;AA7BFE,OAAA,CAAAL,OAAA,GAAAV,MAAA;AAC0BA,MAAA,CAAAO,QAAQ,GAAG,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}