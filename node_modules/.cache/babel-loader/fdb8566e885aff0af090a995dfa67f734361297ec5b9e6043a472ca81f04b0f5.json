{"ast":null,"code":"import axios from 'axios';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\nimport { stringify as qsStringify } from 'query-string';\n// `validateStatus` defines whether to resolve or reject the promise for a given\n// HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n// or `undefined`), the promise will be resolved; otherwise, the promise will be rejected.\nconst validateStatus = function (status) {\n  return status >= 200 && status < 300; // default\n};\n\nconst rConfig = {\n  timeout: 5000,\n  validateStatus,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nexport const sendRequest = async config => {\n  return await new Promise((resolve, reject) => {\n    axios({\n      ...rConfig,\n      ...config\n    }).then(res => {\n      var _a;\n      if (res.data !== undefined) {\n        resolve(res);\n      } else {\n        reject(new Error(`${(_a = config.url) !== null && _a !== void 0 ? _a : ''}: null response`));\n      }\n    }).catch(error => {\n      if (isString(error)) {\n        reject(new Error(error));\n      } else if (isObject(error.response) && isObject(error.response.data)) {\n        // like { error: 'err_invalid_signature' }\n        reject(new Error(error.response.data.error));\n      } else {\n        reject(new Error(error));\n      }\n    });\n  });\n};\nexport const getEverpayInfo = async apiHost => {\n  const url = `${apiHost}/info`;\n  const result = await sendRequest({\n    url,\n    method: 'GET'\n  });\n  return result.data;\n};\nexport const getEverpayBalance = async (apiHost, {\n  account,\n  tokenTag\n}) => {\n  const url = `${apiHost}/balance/${tokenTag}/${account}`;\n  const result = await sendRequest({\n    url,\n    method: 'GET'\n  });\n  return result.data;\n};\nexport const getEverpayBalances = async (apiHost, {\n  account\n}) => {\n  const url = `${apiHost}/balances/${account}`;\n  const result = await sendRequest({\n    url,\n    method: 'GET'\n  });\n  return result.data;\n};\nexport const getEverpayTransactions = async (apiHost, params) => {\n  const {\n    account,\n    page,\n    tokenId,\n    action,\n    withoutAction\n  } = params;\n  const baseUrl = account !== undefined ? `${apiHost}/txs/${account}` : `${apiHost}/txs`;\n  const queryString = qsStringify({\n    page,\n    tokenId,\n    action,\n    withoutAction\n  }, {\n    skipNull: true\n  });\n  const result = await sendRequest({\n    ...rConfig,\n    url: `${baseUrl}${queryString !== '' ? `?${queryString}` : ''}`,\n    method: 'GET'\n  });\n  return result.data;\n};\nexport const getEverpayTransaction = async (apiHost, everHash) => {\n  const url = `${apiHost}/tx/${everHash}`;\n  const result = await sendRequest({\n    ...rConfig,\n    url,\n    method: 'GET'\n  });\n  return result.data.tx;\n};\nexport const getMintdEverpayTransactionByChainTxHash = async (apiHost, chainTxHash) => {\n  const url = `${apiHost}/minted/${chainTxHash}`;\n  const result = await sendRequest({\n    ...rConfig,\n    url,\n    method: 'GET'\n  });\n  return result.data.tx;\n};\nexport const getFees = async apiHost => {\n  const url = `${apiHost}/fees`;\n  const result = await sendRequest({\n    ...rConfig,\n    url,\n    method: 'GET'\n  });\n  return result.data.fees;\n};\nexport const getFee = async (apiHost, tokenTag) => {\n  const url = `${apiHost}/fee/${tokenTag}`;\n  const result = await sendRequest({\n    ...rConfig,\n    url,\n    method: 'GET'\n  });\n  return result.data.fee;\n};\nexport const postTx = async (apiHost, params) => {\n  const url = `${apiHost}/tx`;\n  const result = await sendRequest({\n    url,\n    method: 'POST',\n    data: params\n  });\n  return result.data;\n};\nexport const getExpressInfo = async apiHost => {\n  const url = `${apiHost}/withdraw/info`;\n  const result = await sendRequest({\n    url,\n    method: 'GET'\n  });\n  return result.data;\n};\nexport const getSwapInfo = async apiHost => {\n  const url = `${apiHost}/dex/info`;\n  const result = await sendRequest({\n    url,\n    method: 'GET'\n  });\n  return result.data;\n};\nexport const getSwapPrice = async (apiHost, params) => {\n  const queryString = qsStringify(params, {\n    skipNull: true\n  });\n  const url = `${apiHost}/dex/price?${queryString}`;\n  const result = await sendRequest({\n    url,\n    method: 'GET'\n  });\n  return result.data;\n};\nexport const placeSwapOrder = async (apiHost, params) => {\n  const url = `${apiHost}/dex/place_order`;\n  const result = await sendRequest({\n    url,\n    method: 'POST',\n    data: {\n      bundle: params\n    }\n  });\n  return result.data.everHash;\n};","map":{"version":3,"names":["axios","isObject","isString","stringify","qsStringify","validateStatus","status","rConfig","timeout","headers","sendRequest","config","Promise","resolve","reject","then","res","_a","data","undefined","Error","url","catch","error","response","getEverpayInfo","apiHost","result","method","getEverpayBalance","account","tokenTag","getEverpayBalances","getEverpayTransactions","params","page","tokenId","action","withoutAction","baseUrl","queryString","skipNull","getEverpayTransaction","everHash","tx","getMintdEverpayTransactionByChainTxHash","chainTxHash","getFees","fees","getFee","fee","postTx","getExpressInfo","getSwapInfo","getSwapPrice","placeSwapOrder","bundle"],"sources":["E:/Amanda-project/vue2-project/project-vue2/node_modules/arseeding-js/node_modules/everpay/esm/api/index.js"],"sourcesContent":["import axios from 'axios';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\nimport { stringify as qsStringify } from 'query-string';\n// `validateStatus` defines whether to resolve or reject the promise for a given\n// HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n// or `undefined`), the promise will be resolved; otherwise, the promise will be rejected.\nconst validateStatus = function (status) {\n    return status >= 200 && status < 300; // default\n};\nconst rConfig = {\n    timeout: 5000,\n    validateStatus,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n};\nexport const sendRequest = async (config) => {\n    return await new Promise((resolve, reject) => {\n        axios({\n            ...rConfig,\n            ...config\n        }).then((res) => {\n            var _a;\n            if (res.data !== undefined) {\n                resolve(res);\n            }\n            else {\n                reject(new Error(`${(_a = config.url) !== null && _a !== void 0 ? _a : ''}: null response`));\n            }\n        }).catch(error => {\n            if (isString(error)) {\n                reject(new Error(error));\n            }\n            else if (isObject(error.response) && isObject(error.response.data)) {\n                // like { error: 'err_invalid_signature' }\n                reject(new Error(error.response.data.error));\n            }\n            else {\n                reject(new Error(error));\n            }\n        });\n    });\n};\nexport const getEverpayInfo = async (apiHost) => {\n    const url = `${apiHost}/info`;\n    const result = await sendRequest({\n        url,\n        method: 'GET'\n    });\n    return result.data;\n};\nexport const getEverpayBalance = async (apiHost, { account, tokenTag }) => {\n    const url = `${apiHost}/balance/${tokenTag}/${account}`;\n    const result = await sendRequest({\n        url,\n        method: 'GET'\n    });\n    return result.data;\n};\nexport const getEverpayBalances = async (apiHost, { account }) => {\n    const url = `${apiHost}/balances/${account}`;\n    const result = await sendRequest({\n        url,\n        method: 'GET'\n    });\n    return result.data;\n};\nexport const getEverpayTransactions = async (apiHost, params) => {\n    const { account, page, tokenId, action, withoutAction } = params;\n    const baseUrl = account !== undefined ? `${apiHost}/txs/${account}` : `${apiHost}/txs`;\n    const queryString = qsStringify({ page, tokenId, action, withoutAction }, { skipNull: true });\n    const result = await sendRequest({\n        ...rConfig,\n        url: `${baseUrl}${queryString !== '' ? `?${queryString}` : ''}`,\n        method: 'GET'\n    });\n    return result.data;\n};\nexport const getEverpayTransaction = async (apiHost, everHash) => {\n    const url = `${apiHost}/tx/${everHash}`;\n    const result = await sendRequest({\n        ...rConfig,\n        url,\n        method: 'GET'\n    });\n    return result.data.tx;\n};\nexport const getMintdEverpayTransactionByChainTxHash = async (apiHost, chainTxHash) => {\n    const url = `${apiHost}/minted/${chainTxHash}`;\n    const result = await sendRequest({\n        ...rConfig,\n        url,\n        method: 'GET'\n    });\n    return result.data.tx;\n};\nexport const getFees = async (apiHost) => {\n    const url = `${apiHost}/fees`;\n    const result = await sendRequest({\n        ...rConfig,\n        url,\n        method: 'GET'\n    });\n    return result.data.fees;\n};\nexport const getFee = async (apiHost, tokenTag) => {\n    const url = `${apiHost}/fee/${tokenTag}`;\n    const result = await sendRequest({\n        ...rConfig,\n        url,\n        method: 'GET'\n    });\n    return result.data.fee;\n};\nexport const postTx = async (apiHost, params) => {\n    const url = `${apiHost}/tx`;\n    const result = await sendRequest({\n        url,\n        method: 'POST',\n        data: params\n    });\n    return result.data;\n};\nexport const getExpressInfo = async (apiHost) => {\n    const url = `${apiHost}/withdraw/info`;\n    const result = await sendRequest({\n        url,\n        method: 'GET'\n    });\n    return result.data;\n};\nexport const getSwapInfo = async (apiHost) => {\n    const url = `${apiHost}/dex/info`;\n    const result = await sendRequest({\n        url,\n        method: 'GET'\n    });\n    return result.data;\n};\nexport const getSwapPrice = async (apiHost, params) => {\n    const queryString = qsStringify(params, { skipNull: true });\n    const url = `${apiHost}/dex/price?${queryString}`;\n    const result = await sendRequest({\n        url,\n        method: 'GET'\n    });\n    return result.data;\n};\nexport const placeSwapOrder = async (apiHost, params) => {\n    const url = `${apiHost}/dex/place_order`;\n    const result = await sendRequest({\n        url,\n        method: 'POST',\n        data: { bundle: params }\n    });\n    return result.data.everHash;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}