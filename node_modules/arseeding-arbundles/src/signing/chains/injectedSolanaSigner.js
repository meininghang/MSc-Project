"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ed25519_1 = require("@noble/ed25519");
const base64url_1 = __importDefault(require("base64url"));
const constants_1 = require("../../constants");
class InjectedSolanaSigner {
    constructor(provider) {
        this.ownerLength = constants_1.SIG_CONFIG[2].pubLength;
        this.signatureLength = constants_1.SIG_CONFIG[2].sigLength;
        this.signatureType = 2;
        this.provider = provider;
        this._publicKey = this.provider.publicKey.toBuffer();
    }
    get publicKey() {
        return this._publicKey;
    }
    async sign(message) {
        if (!this.provider.signMessage)
            throw new Error("Selected Wallet does not support message signing");
        return await this.provider.signMessage(message);
    }
    static async verify(pk, message, signature) {
        let p = pk;
        if (typeof pk === "string")
            p = base64url_1.default.toBuffer(pk);
        return ed25519_1.verify(Buffer.from(signature), Buffer.from(message), Buffer.from(p));
    }
}
exports.default = InjectedSolanaSigner;
//# sourceMappingURL=injectedSolanaSigner.js.map