import { Service } from '../request';
export interface IDekGroup {
    groupid: string;
    min: number;
    max: number;
}
export interface IPolicies {
    issuer_dek_group: Array<IDekGroup>;
    subject_dek_group: Array<IDekGroup>;
    result_dek: string;
    operation: Array<string>;
    post_proc: string;
    pre_proc: string;
}
/**
 *
 */
export declare class Bcl {
    bclBody: {
        version: number;
        serial_num: string;
        issuer_pukid: string;
        subject_pukid: string;
        validity: {
            not_after: string;
            not_before: string;
        };
        policies: {
            issuer_dek_group: IDekGroup[];
            subject_dek_group: IDekGroup[];
            result_dek: string;
            operation: string;
            postproc: string;
            preproc: string;
        };
    };
    private service;
    constructor(service: Service);
    /**
     *
     * @param issuerPukid
     * @param subjectPukid
     * @param serialNum
     * @param resultDek
     * @param operation
     * @param postProc
     * @param preProc
     * @param version
     * @param notBefore
     * @param notAfter
     */
    createBclBody(issuerPukid: string, subjectPukid: string, serialNum: string, version?: number, resultDek?: string, operation?: string[], postProc?: string, preProc?: string, notBefore?: number, notAfter?: number): Promise<Bcl>;
    /**
     * get bcl body by serialNum
     * @param serialNum
     */
    loadBclBodyBySN(serialNum: string): Promise<Bcl>;
    loadBclBodyByPukId(issuePukId: string, subjectPukId: string): Promise<this>;
    /**
     *
     * @param issuerDekGroup
     * @param subjectDekGroup
     */
    addDekGroup(issuerDekGroup: IDekGroup, subjectDekGroup?: IDekGroup): Bcl;
    removeDekGroup(issueGroupId: Array<string>, subjectDekGroupId?: Array<string>): Bcl;
    removeDekGroupAll(): Bcl;
    /**
     *
     * @param privateKeyPem
     */
    private _signBclBody;
    /**
     *
     * @param privateKeyPem
     */
    issueBcl(privateKeyPem: string, bizType?: number): Promise<string | undefined>;
    /**
     *
     * @param result_dek
     * @param operation
     * @param postproc
     * @param preproc
     * @private
     */
    private _initBlankBclPolicies;
}
